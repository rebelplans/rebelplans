{"version":3,"file":"app.a2dc.js","mappings":"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","sources":["webpack://roadmap/webpack/runtime/chunk loaded","webpack://roadmap/./src/constants/colors.ts","webpack://roadmap/./src/styles/Header.ts","webpack://roadmap/./src/constants/index.ts","webpack://roadmap/./src/components/Header/Title.tsx","webpack://roadmap/./src/components/Header/ConnectionStatus.tsx","webpack://roadmap/./src/data/connection.ts","webpack://roadmap/./src/data/user.ts","webpack://roadmap/./src/styles/Common/Dropdown.ts","webpack://roadmap/./src/components/Header/Dropdown.tsx","webpack://roadmap/./src/data/auth.ts","webpack://roadmap/./src/components/Header/Avatar.tsx","webpack://roadmap/./src/components/Header/Header.tsx","webpack://roadmap/./src/utils/nanoid.ts","webpack://roadmap/./src/state/actions/selection.ts","webpack://roadmap/./src/utils/ui.ts","webpack://roadmap/./src/utils/dates.ts","webpack://roadmap/./src/utils/subscribtion.ts","webpack://roadmap/./src/utils/placeholderActions.ts","webpack://roadmap/./src/utils/cardActions.ts","webpack://roadmap/./src/state/actions/cards.ts","webpack://roadmap/./src/types/state.ts","webpack://roadmap/./src/styles/Placeholder.ts","webpack://roadmap/./src/components/Placeholder/Placeholder.tsx","webpack://roadmap/./src/components/Deck/Day.tsx","webpack://roadmap/./src/components/Deck/Month.tsx","webpack://roadmap/./src/styles/DateTable.ts","webpack://roadmap/./src/components/Deck/MonthsList.tsx","webpack://roadmap/./src/styles/CardBlock.ts","webpack://roadmap/./src/assets/CardStatus.tsx","webpack://roadmap/./src/components/Deck/Card.tsx","webpack://roadmap/./src/components/Deck/CardsDeck.tsx","webpack://roadmap/./src/state/actions/user.ts","webpack://roadmap/./src/components/Deck/DeckLines.tsx","webpack://roadmap/./src/state/actions/lines.ts","webpack://roadmap/./src/state/actions/ui.ts","webpack://roadmap/./src/components/Deck/Deck.tsx","webpack://roadmap/./src/components/Roadmap/Roadmap.tsx","webpack://roadmap/./src/styles/Keyframes.ts","webpack://roadmap/./src/styles/EditScreen.ts","webpack://roadmap/./src/styles/Form/Button.ts","webpack://roadmap/./src/components/EditScreen/Range.tsx","webpack://roadmap/./src/styles/Form/Switch.ts","webpack://roadmap/./src/components/EditScreen/Switch.tsx","webpack://roadmap/./src/components/EditScreen/DateInput.tsx","webpack://roadmap/./src/styles/Editor.ts","webpack://roadmap/./src/state/actions/longs.ts","webpack://roadmap/./src/utils/editor.ts","webpack://roadmap/./src/components/EditScreen/Editor.tsx","webpack://roadmap/./src/components/EditScreen/EditFields.tsx","webpack://roadmap/./src/components/EditScreen/EditTitle.tsx","webpack://roadmap/./src/components/EditScreen/EditScreen.tsx","webpack://roadmap/./src/components/Screens/Roadmap.tsx","webpack://roadmap/./src/styles/Common/Spinner.ts","webpack://roadmap/./src/styles/Overview.ts","webpack://roadmap/./src/components/Overview/Overview.tsx","webpack://roadmap/./src/components/Overview/SingleLineInput.tsx","webpack://roadmap/./src/components/Screens/Overview.tsx","webpack://roadmap/./src/components/Core/Routes.tsx","webpack://roadmap/./src/styles/Main.ts","webpack://roadmap/./src/components/Core/Core.tsx","webpack://roadmap/./src/data/index.ts","webpack://roadmap/./src/state/initialState.ts","webpack://roadmap/./src/state/reducers/ui.ts","webpack://roadmap/./src/state/reducers/index.ts","webpack://roadmap/./src/state/reducers/cards.ts","webpack://roadmap/./src/state/reducers/lines.ts","webpack://roadmap/./src/state/reducers/longs.ts","webpack://roadmap/./src/state/reducers/milestones.ts","webpack://roadmap/./src/state/reducers/selection.ts","webpack://roadmap/./src/state/reducers/metas.ts","webpack://roadmap/./src/state/reducers/user.ts","webpack://roadmap/./src/data/data.ts","webpack://roadmap/./src/data/newUser.ts","webpack://roadmap/./src/state/sagas/auth.ts","webpack://roadmap/./src/state/sagas/meta.ts","webpack://roadmap/./src/state/actions/metas.ts","webpack://roadmap/./src/state/sagas/card.ts","webpack://roadmap/./src/state/sagas/line.ts","webpack://roadmap/./src/state/sagas/long.ts","webpack://roadmap/./src/utils/arrays.ts","webpack://roadmap/./src/state/sagas/roadmap.ts","webpack://roadmap/./src/utils/recurrent.ts","webpack://roadmap/./src/state/sagas/user.ts","webpack://roadmap/./src/utils/analytics.ts","webpack://roadmap/./src/state/sagas/analytics.ts","webpack://roadmap/./src/state/sagas/index.ts","webpack://roadmap/./src/styles/Global.ts","webpack://roadmap/./src/404.tsx","webpack://roadmap/./src/state/store.ts","webpack://roadmap/./src/assets/SvgIcon.tsx","webpack://roadmap/webpack/bootstrap","webpack://roadmap/webpack/runtime/amd options","webpack://roadmap/webpack/runtime/compat get default export","webpack://roadmap/webpack/runtime/define property getters","webpack://roadmap/webpack/runtime/global","webpack://roadmap/webpack/runtime/harmony module decorator","webpack://roadmap/webpack/runtime/hasOwnProperty shorthand","webpack://roadmap/webpack/runtime/make namespace object","webpack://roadmap/webpack/runtime/jsonp chunk loading","webpack://roadmap/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { CardTypes } from 'types/card';\nimport { MileColors } from 'types/state';\n\nexport const weekendColor = 'rgba(106,148,184,0.06)';\n\nexport const logo = {\n  pink: '#ec4af4',\n  green: '#84ff00',\n  yellow: '#edff00',\n  blue: '#4ba4f5',\n};\n\nexport const header = {\n  dark: '#191919',\n  demi: '#333333',\n  grey: '#696969',\n  lite: '#f7f8f9',\n  light: {\n    border: '#ccc',\n    background: '#eee',\n  },\n};\n\nexport const accent = {\n  danger: '#ff3e84',\n  stable: logo.green,\n  active: logo.blue,\n};\n\nexport const text = {\n  onDark: {\n    bold: '#fff',\n    main: '#ccc',\n    mute: '#aaa',\n    demi: header.grey,\n  },\n  onLight: {\n    bold: '#333',\n    main: header.grey,\n    mute: '#ccc',\n  },\n};\n\nexport const statusColorMap = {\n  pending: '#cccccc',\n  progress: '#60aeff',\n  delayed: '#ff9360',\n  complete: '#0bad00',\n  dropped: '#ff5656',\n};\n\nexport const mainColors: { [key in MileColors]: string } = {\n  purple: '#8c0756',\n  violet: '#8933f4',\n  indigo: '#374193',\n  blue: '#1c93ff',\n  azur: '#01e3b3',\n  green: '#0b890c',\n  yellow: '#e7e400',\n  orange: '#ffa900',\n  fire: '#ff5700',\n  pink: '#ff55b8',\n};\n\n// export const W3CSS = {\n//   red: '#f44336',\n//   pink: '#e91e63',\n//   purple: '#9c27b0',\n//   deeppurple: '#673ab7',\n//   indigo: '#3f51b5',\n//   blue: '#2196F3',\n//   green: '#4CAF50',\n//   amber: '#ffc107',\n//   orange: '#ff9800',\n//   bluegray: '#607d8b',\n// };\n\nconst statusColors: { [key in CardTypes]: string } = {\n  pending: '#cccccc',\n  progress: '#60aeff',\n  delayed: '#ff9360',\n  complete: '#0bad00',\n  dropped: '#ff5656',\n};\n\nexport default {\n  logo,\n  header,\n  accent,\n  text,\n  statusColors: statusColors,\n  ...mainColors,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const HeaderBlock = styled.header`\n  display: flex;\n  min-height: 45px;\n  background: ${color.header.dark};\n  color: ${color.text.onDark.main};\n  padding: 0 12px 0 0;\n  font-size: 1.2rem;\n  line-height: 1rem;\n  justify-content: left;\n  align-items: center;\n  user-select: none;\n  transition: 0.3s;\n  & > * {\n    margin-left: 12px;\n  }\n  &.transparent {\n    opacity: 0;\n  }\n`;\n\nexport const Logo = styled(Link)`\n  display: flex;\n  width: 28px;\n  height: 27px;\n  min-width: 28px;\n  border: 1px solid ${color.header.grey};\n  border-radius: 4px;\n  position: relative;\n  sup,\n  sub {\n    display: inline-block;\n    position: absolute;\n    left: 5px;\n    height: 3px;\n    font-size: 0;\n    transition: width 0.2s;\n  }\n  sup {\n    top: 5px;\n    width: 18px;\n    border-top: 2px solid ${color.logo.pink};\n    border-bottom: 2px solid ${color.logo.green};\n  }\n  sub {\n    top: 15px;\n    width: 10px;\n    border-top: 2px solid ${color.logo.yellow};\n    border-bottom: 2px solid ${color.logo.blue};\n  }\n  &:hover sub {\n    width: 18px;\n  }\n`;\n\nexport const RoadmapTitle = styled.h1`\n  margin-top: 1px;\n  margin-bottom: 0;\n  font-size: 13px;\n  font-weight: normal;\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  text-align: center;\n  user-select: all;\n`;\n\nexport const AvatarBlock = styled.button`\n  padding: 0;\n  width: 29px;\n  overflow: hidden;\n  box-sizing: border-box;\n  height: 29px;\n  min-width: 29px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: ${color.text.onDark.mute};\n  transition: 0.2s;\n  position: relative;\n  z-index: 30;\n  cursor: pointer;\n  border: 1px solid ${color.header.grey};\n  background: transparent;\n  /* &.fade-left {\n    transform: translateX(-41px);\n    opacity: 0;\n    pointer-events: none;\n  }\n  &.fade-right {\n    transform: translateX(41px);\n    opacity: 0;\n    pointer-events: none;\n  } */\n  &:hover {\n    color: ${color.logo.green};\n    img {\n      transform: scale(1.2);\n    }\n  }\n  & img {\n    width: 100%;\n    height: 100%;\n    font-size: 0;\n    transition: 0.2s;\n    vertical-align: middle;\n  }\n  & svg:only-child {\n    width: 21px;\n    margin: 3px 0 0;\n  }\n  & svg {\n    fill: currentColor;\n    pointer-events: none;\n    &.online,\n    &.offline {\n      color: transparent;\n      position: absolute;\n      border-radius: 50%;\n      width: 10px;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n    }\n    &.online {\n      color: ${color.accent.stable};\n      background: ${color.text.onDark.demi};\n    }\n    &.offline {\n      color: ${color.accent.danger};\n      background: ${color.text.onDark.bold};\n    }\n  }\n`;\n","export default {\n  ID: {\n    LENGTH: 20,\n    SYMBOLS: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  },\n  DAY: {\n    WIDTH: 30,\n    HEADER: {\n      HEIGHT: 85,\n      MILE_HEIGHT: 125,\n    },\n  },\n  CARD: {\n    HEIGHT: 30,\n    VERTICAL_SPACE: 35,\n    HORIZONTAL_SPACE: 15,\n    RESIZE_TOLERANCE: 7,\n    CARDDECK_MOUSE_POSITION_FIX: [1, 1],\n  },\n  LINE: {\n    MIN_WIDTH: 40,\n    INIT_WIDTH: 150,\n    MIN_WIDTH_COLLAPSE: 10,\n  },\n  MILE: {\n    MARGIN: 8,\n  },\n  LOCALE: navigator.language || 'en-US',\n  COLUMN_MULTIPLIER: 2, // should be even to make sure we can figure out 'today'\n  PLAN: {\n    FREE: {\n      LIMIT: {\n        ROADMAPS: 3,\n      },\n    },\n  },\n  TIME: {\n    DAYS_IN_MONTH: 30,\n    AUTOSAVE_MS: 3000,\n    LAST_ACTIVE: 60000,\n    MILLISECONDS_IN_DAY: 86400000,\n  },\n  URL: {\n    INDEX: '/',\n    LOGIN: '/login/',\n    ROOT: '/plans/',\n    PLAN: '/plan/',\n  },\n};\n","import React, { useMemo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { RoadmapTitle } from 'styles/Header';\n\nimport { State } from 'types/state';\n\nconst RoadmapList = ({ title }: { title: string }): JSX.Element | null => {\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const metas = useSelector((state: State) => state.metas);\n  const roadmapName = useMemo(() => (metas[currentRoadmapID] || { name: title }).name, [metas, currentRoadmapID]);\n  useEffect(() => {\n    if (document.title !== roadmapName) {\n      document.title = roadmapName === title ? title : `${roadmapName} • ${title}`;\n    }\n  }, [roadmapName]);\n\n  return <RoadmapTitle>{roadmapName}</RoadmapTitle>;\n};\n\nexport default React.memo(RoadmapList);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Check from '@material-ui/icons/CheckCircle';\nimport Cancel from '@material-ui/icons/Cancel';\n\nimport { State } from 'types/state';\nimport { getDataConnectionStatus } from 'data/connection';\n\nconst ConnectionStatus = (): JSX.Element | null => {\n  const user = useSelector((state: State) => state.user);\n  const [isConnected, setConnected] = useState(false);\n  useEffect(() => {\n    const notify = (status: boolean) => setConnected(status);\n    const connectionChannel = getDataConnectionStatus(notify);\n    return () => {\n      connectionChannel.close();\n    };\n  }, []);\n\n  return user.id ? isConnected ? <Check className=\"online\" /> : <Cancel className=\"offline\" /> : null;\n};\n\nexport default React.memo(ConnectionStatus);\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel } from 'redux-saga';\n\nexport const getDataConnectionStatus = (callback: (status: boolean) => void): EventChannel<boolean> =>\n  eventChannel(() => {\n    if (typeof firebase.database === 'function') {\n      const listener = firebase.database().ref('.info/connected');\n      listener.on('value', (snapshot) => {\n        callback(snapshot.val());\n      });\n      return () => {\n        listener.off();\n      };\n    }\n    return () => {};\n  });\n","import firebase from 'firebase/app';\n\nexport const writeUserLastActive = (userID: string): void =>\n  void firebase.database().ref(`users/${userID}`).update({\n    lastActive: Date.now(),\n  });\n","import colors from 'constants/colors';\nimport styled from 'styled-components';\n\nexport const DropdownGroup = styled.ul`\n  position: absolute;\n  min-width: 150px;\n  max-width: 300px;\n  background: ${colors.header.lite};\n  font-size: 13px;\n  border-radius: 4px;\n  right: 12px;\n  box-shadow: 0 3px 8px -4px ${colors.header.demi};\n  border: 1px solid ${colors.header.light.border};\n  color: ${colors.text.onLight.main};\n  margin: 4px 0 0;\n  padding: 0;\n  opacity: 0;\n  transition: 0.2s;\n  transform: translateY(-20px);\n  pointer-events: none;\n  z-index: 20;\n  &:before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border: 5px solid transparent;\n    margin: -5px;\n    z-index: -1;\n  }\n  li {\n    list-style: none;\n    padding: 7px 10px;\n    cursor: pointer;\n    & + li {\n      border-top: 1px solid ${colors.header.light.border};\n    }\n    &:first-child {\n      border-radius: 4px 4px 0 0;\n    }\n    &:last-child {\n      border-bottom-left-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n    &:hover {\n      background: ${colors.header.light.background};\n      color: ${colors.accent.active};\n    }\n  }\n`;\n\nexport const DropdownWraper = styled.div`\n  &:hover ${DropdownGroup} {\n    opacity: 1;\n    pointer-events: all;\n    transform: translateY(0);\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { handleAuthOut } from 'data/auth';\n\nimport { DropdownGroup } from 'styles/Common/Dropdown';\n\nimport { State } from 'types/state';\n\nconst Dropdown = (): JSX.Element => {\n  const user = useSelector((state: State) => state.user);\n  const authOut = () => handleAuthOut(user.id);\n  const noProfileEditYet = () => alert('Profile editing will be available in the near future');\n\n  return (\n    <DropdownGroup>\n      <li onClick={noProfileEditYet}>{user.name}</li>\n      <li onClick={authOut}>Log out</li>\n    </DropdownGroup>\n  );\n};\n\nexport default React.memo(Dropdown);\n","import firebase from 'firebase/app';\n\nimport { AuthFetch, AuthSuccess, AuthOut } from 'types/actions';\nimport { writeUserLastActive } from 'data/user';\n\nexport const login = () => {\n  if (typeof firebase.auth === 'function') {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().useDeviceLanguage();\n    void firebase.auth().signInWithRedirect(provider);\n  }\n};\n\nexport const handleAuthOut = (userID: string): void => {\n  writeUserLastActive(userID);\n  if (typeof firebase.auth === 'function') {\n    void firebase.auth().signOut();\n  }\n};\n\nexport const trackAuthChange = ({\n  fetching,\n  success,\n  out,\n}: {\n  fetching: () => AuthFetch;\n  success: (userData: AuthSuccess['payload']) => AuthSuccess;\n  out: () => AuthOut;\n}): void => {\n  fetching();\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user && user.email) {\n      success({\n        id: user.uid,\n        name: user.displayName || '',\n        email: user.email,\n        photoURL: user.photoURL || '',\n      });\n    } else {\n      out();\n    }\n  });\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport UserIcon from '@material-ui/icons/AccountBox';\n\nimport { AvatarBlock } from 'styles/Header';\n\nimport { State } from 'types/state';\nimport ConnectionStatus from 'components/Header/ConnectionStatus';\nimport Dropdown from 'components/Header/Dropdown';\nimport { DropdownWraper } from 'styles/Common/Dropdown';\n\nconst Avatar = (): JSX.Element => {\n  const { name, photoURL } = useSelector((state: State) => state.user);\n\n  return (\n    <DropdownWraper>\n      <AvatarBlock>\n        {photoURL ? <img src={photoURL} alt={name} /> : <UserIcon />}\n        <ConnectionStatus />\n      </AvatarBlock>\n      <Dropdown />\n    </DropdownWraper>\n  );\n};\n\nexport default React.memo(Avatar);\n","import React from 'react';\n\nimport app from 'constants/../../package.json';\n\nimport { HeaderBlock, Logo } from 'styles/Header';\nimport C from 'constants/index';\n\nimport Title from './Title';\n// import Tune from './Tune';\n// import Search from './Search';\nimport Avatar from './Avatar';\n\nconst Header = ({ isLoggedIn }: { isLoggedIn?: boolean }): JSX.Element => {\n  return (\n    <HeaderBlock className={`${isLoggedIn === false ? 'transparent' : ''}`}>\n      <Logo to={C.URL.ROOT} title={`Rebel Plans v${app.version}`}>\n        <sup>Rebel Plans</sup>\n        <sub>Roadmap Creation &amp; Project Planning Tool</sub>\n      </Logo>\n      {/* <Tune /> */}\n      <Title title={app.description} />\n      {/* <Search /> */}\n      <Avatar />\n    </HeaderBlock>\n  );\n};\n\nexport default React.memo(Header);\n","import { customAlphabet } from 'nanoid';\n\nimport C from 'constants/index';\n\nconst nanoid = customAlphabet(C.ID.SYMBOLS, C.ID.LENGTH);\nexport default (): string => nanoid();\n","import nanoid from 'utils/nanoid';\n\nimport { NewCard, NewCardProp, SelectionCancel, SelectionDelete, SelectCard } from 'types/actions';\n\nexport const newCard = ({ line, from, until }: NewCardProp): NewCard => ({\n  type: 'NEW_CARD',\n  payload: {\n    id: nanoid(),\n    isNew: true,\n    line,\n    from,\n    until,\n  },\n});\n\nexport const selectCard = ({ id }: { id: string }): SelectCard => ({\n  type: 'SELECT_CARD',\n  payload: {\n    id,\n    isNew: false,\n  },\n});\n\nexport const selectionCancel = (): SelectionCancel => ({\n  type: 'SELECTION_CANCEL',\n});\n\nexport const selectionDelete = ({ id }: { id: string }): SelectionDelete => ({\n  type: 'SELECTION_DELETE',\n  payload: {\n    id,\n  },\n});\n","import { CSSProperties } from 'react';\n\nimport C from 'constants/index';\nimport { weekendColor as wC } from 'constants/colors';\n\nimport { placeholderInitState } from './subscribtion';\nimport { getDaysDiff, getDaysInterval } from './dates';\n\nimport { PlaceholderData } from 'types/index';\nimport { Card } from 'types/state';\nimport { CardTypes } from 'types/card';\n\nexport const getColumnSize = (): number => Math.ceil(window.innerWidth / C.DAY.WIDTH);\n\nexport const getExtraMonths = (): number => Math.ceil((getColumnSize() * C.COLUMN_MULTIPLIER) / C.TIME.DAYS_IN_MONTH);\n\nexport const getPlaceholderWidth = (x1: number, x2: number): number =>\n  Math.max(Math.round((x2 - x1) / C.DAY.WIDTH + 0.3), 1) || 1;\n\nexport const getPlaceholderData = (x1: number, x2: number, y1: number, shouldSkipAim: boolean): PlaceholderData => {\n  if (shouldSkipAim || (x1 === 0 && y1 === 0)) {\n    return {\n      style: { opacity: '0' },\n    };\n  }\n  if (x2 === 0) {\n    return {\n      style: { transform: `translate(${x1}px, ${y1}px)`, opacity: '1' },\n    };\n  }\n  const size = getPlaceholderWidth(x1, x2);\n  return {\n    style: {\n      transform: `translate(${x1}px, ${y1}px)`,\n      width: String((size - 1) * C.DAY.WIDTH) + 'px',\n    },\n    size,\n  };\n};\n\nexport const getProgressBackgroud = (\n  complete?: number,\n  color1: string = '#0bad00',\n  color2: string = '#ddd'\n): CSSProperties | undefined =>\n  typeof complete === 'number'\n    ? { background: `linear-gradient(to right, ${color1} ${complete}%, ${color2} ${complete}%)` }\n    : undefined;\n\nexport const isAimOnCard = (aim: typeof placeholderInitState, cards: Array<Card>): boolean => {\n  const shortList = cards.filter(\n    (card) =>\n      card.line === aim.line && card.from.localeCompare(aim.date) <= 0 && card.until.localeCompare(aim.date) >= 0\n  );\n  if (shortList.some((card) => card.from === aim.date || card.until === aim.date)) {\n    return true;\n  }\n  return Boolean(shortList.length);\n};\n\nexport const getCardStatus = (from: string, until: string, today: string, progress?: number): CardTypes | undefined => {\n  // No progress => No status\n  if (progress === undefined) {\n    return;\n  }\n  // 'pending':  card is in the future or starting today and progress is zero\n  // 'progress': card is in the future and progress > zero || progress >= proportion of today in the timeframe\n  // 'delayed':  progress < proportion of today in the timeframe\n  // 'complete': progress is 100\n  // 'dropped':  card is in the past and progress is zero\n  if (progress === 100) {\n    return 'complete';\n  }\n  // Today is after Until (Card is in the past)\n  if (today.localeCompare(until) > 0) {\n    return 'dropped';\n  }\n  if (progress === 0) {\n    // From is before Today (Card from past without progress)\n    if (today.localeCompare(from) > 0) {\n      return 'delayed';\n    }\n    // From is not yet reached or Today (Card is in the plan)\n    if (today.localeCompare(from) <= 0) {\n      return 'pending';\n    }\n  }\n  // If progress is between 0 and 100 it's either in progress or delayed\n  const fromToToday = getDaysDiff(from, today);\n  const todayToUntilPlusOne = getDaysInterval(today, until);\n  const proportion = fromToToday / (fromToToday + todayToUntilPlusOne);\n  if (progress / 100 < proportion) {\n    return 'delayed';\n  } else {\n    return 'progress';\n  }\n};\n\nexport const autoscaleTextarea = (textarea: HTMLTextAreaElement, setFocus: boolean = false): void => {\n  textarea.style.height = 'inherit';\n  textarea.style.height = `${textarea.scrollHeight}px`;\n  if (setFocus && Number.isInteger(textarea.selectionStart)) {\n    textarea.selectionStart = textarea.value.length;\n    textarea.selectionEnd = textarea.value.length;\n  }\n};\n\nexport const hasCardChanged = (edited: Card, original?: Card): boolean => {\n  if (!original) {\n    return true;\n  }\n  const editedKeys = Object.keys(edited) as [keyof Card];\n  const originalKeys = Object.keys(original) as [keyof Card];\n  if (editedKeys.length !== originalKeys.length) {\n    return true;\n  }\n  return (\n    editedKeys.some((key) => original[key] !== edited[key]) || originalKeys.some((key) => original[key] !== edited[key])\n  );\n};\n\nexport const isCardValid = (selection: Card): boolean =>\n  selection.id !== '' &&\n  selection.line >= 0 &&\n  selection.text !== '' &&\n  (selection.progress === undefined ||\n    (Number.isInteger(selection.progress) && selection.progress >= 0 && selection.progress <= 100)) &&\n  selection.from.length === 10 &&\n  selection.until.length === 10 &&\n  getDaysDiff(selection.from, selection.until) >= 0;\n\nexport const scrollToToday = (list: HTMLElement, today: HTMLElement, smooth?: boolean): void =>\n  list.scroll({\n    left: today.offsetLeft + (today.parentElement ? today.parentElement.offsetLeft : 0) - window.innerWidth / 2,\n    behavior: smooth ? 'smooth' : 'auto',\n  });\n\nexport const checkInView = (blockLeft: number, blockWidth: number, deckScroll: number, deckWidth: number): boolean =>\n  blockLeft > deckScroll - blockWidth && blockLeft < deckScroll + deckWidth;\n\nexport const getCardsDeckHeight = (maxSize: number): { height: string } => ({\n  height: `${C.DAY.HEADER.HEIGHT + (maxSize + 2) /* starts with 0 and we add 1 more */ * C.CARD.VERTICAL_SPACE}px`,\n});\n\nexport const getMonthBackgroud = (fDay: number, dayWidth: number): string => {\n  /* TODO: Allow customized weekends & make weekend generation a separagte UI function */\n  const daysWidth = (offset: number): number => (offset - fDay) * dayWidth;\n  const relativePart = fDay\n    ? `transparent ${daysWidth(6)}px, ${wC} ${daysWidth(6)}px, ${wC} ${daysWidth(8)}px, transparent ${daysWidth(8)}px`\n    : `${wC} ${dayWidth}px, transparent ${dayWidth}px, transparent ${6 * dayWidth}px, ${wC} ${6 * dayWidth}px`;\n  return `linear-gradient(90deg, #e8e9ea 1px, transparent 1px), linear-gradient(90deg, ${relativePart})`;\n};\n\nexport const getInputIndexInGrandParent = (el: HTMLInputElement): { index: number; total: number } => {\n  if (el instanceof HTMLInputElement) {\n    const parent = el.parentElement;\n    if (parent instanceof HTMLElement) {\n      const grandParent = parent.parentElement;\n      if (grandParent instanceof HTMLElement) {\n        return {\n          index: ([].slice.call(grandParent.children) as HTMLElement[]).indexOf(parent) + 1,\n          total: grandParent.querySelectorAll('input').length,\n        };\n      }\n    }\n  }\n  return {\n    index: 0,\n    total: 0,\n  };\n};\n\nexport const setFocusWithoutRerender = (target: HTMLInputElement, focus: number) => {\n  const grandpa = target.parentElement?.parentElement;\n  const newTarget = grandpa?.querySelectorAll('input')[focus];\n  newTarget?.focus();\n};\n","import C from 'constants/index';\n\nimport { DateType, DateTypeWithWeek, FullDateType } from 'types';\nimport { MoveCard } from 'types/actions';\nimport { Cards } from 'types/state';\n\nimport { getExtraMonths } from 'utils/ui';\n\nexport const getTwoDigitDate = (number: number): string => `0${number}`.slice(-2);\n// export const getDataString = (date: DateType): string => `${date.year}-${date.month}-${date.day}`;\n\nexport const getYMDFromTimestamp = (timestamp: number | Date): DateType => {\n  const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n  return {\n    year: date.getUTCFullYear(),\n    month: date.getUTCMonth() + 1,\n    day: date.getUTCDate(),\n  };\n};\n\nexport const getYMDWFromTimestamp = (timestamp: number | Date): DateTypeWithWeek => {\n  const date = getYMDFromTimestamp(timestamp);\n  const firstDay = new Date(timestamp);\n  firstDay.setUTCHours(0);\n  firstDay.setUTCDate(1);\n  return {\n    ...date,\n    firstWeekDay: firstDay.getUTCDay(),\n  };\n};\n\nexport const getWeekNumber = (timestamp: number): number => {\n  const date = new Date(timestamp);\n  date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));\n  const yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));\n  const dateDiff = date.getTime() - yearStart.getTime();\n  return Math.ceil((dateDiff / C.TIME.MILLISECONDS_IN_DAY + 1) / 7);\n};\nexport const getWeekdayFromTimestamp = (timestamp: number, long: boolean = true): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { weekday: long ? 'long' : 'narrow' });\n};\n\nexport const getMonthNameFromTimestamp = (timestamp: number): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { month: 'long' });\n};\n\nexport const getMonthName = (date: DateType): string => {\n  return new Date(date.year, date.month - 1, date.day).toLocaleDateString(C.LOCALE, { month: 'long' });\n};\n\nexport const getDateForTooltip = (date: DateType): [string, string] => {\n  const dateObject = new Date(date.year, date.month - 1, date.day);\n  return [\n    dateObject.toLocaleDateString(C.LOCALE, { weekday: 'short' }),\n    dateObject.toLocaleDateString(C.LOCALE, { day: 'numeric', month: 'long', year: 'numeric' }),\n  ];\n};\n\n// For now we assume weekends are only Saturdays & Sundays\nexport const isWeekend = (timestamp: number): boolean => new Date(timestamp).getDay() % 6 === 0;\n\nexport const getTodayTimestamp = (): number => {\n  const today = new Date();\n  return Date.UTC(today.getFullYear(), today.getMonth(), today.getDate());\n};\n\nexport const getDataString = (timestamp?: number | Date): string => {\n  if (timestamp instanceof Date) {\n    return timestamp.toISOString().slice(0, 10);\n  }\n  return new Date(timestamp || getTodayTimestamp()).toISOString().slice(0, 10);\n};\n\nexport const getLocalString = (timestamp: number = getTodayTimestamp()): string => {\n  const format = new Intl.DateTimeFormat(C.LOCALE, { dateStyle: 'long', timeStyle: 'short' });\n  return format.format(timestamp);\n};\n\nexport const getLocalDate = (date?: string): string | undefined => {\n  if (date) {\n    const time = new Date(date);\n    return new Intl.DateTimeFormat(C.LOCALE, { dateStyle: 'long' }).format(time);\n  }\n  return undefined;\n};\n\nexport const getFullDateFromTimestamp = (timestamp: number, isToday: boolean = false): FullDateType => ({\n  date: getYMDFromTimestamp(timestamp),\n  dateString: getDataString(timestamp),\n  monthName: getMonthNameFromTimestamp(timestamp),\n  weekDayName: getWeekdayFromTimestamp(timestamp),\n  weekDayShort: getWeekdayFromTimestamp(timestamp, false),\n  weekNumber: getWeekNumber(timestamp),\n  isWeekend: isWeekend(timestamp),\n  isToday,\n});\n\nexport const getDatesArray = (columnSize: number, todayTimestamp: number): FullDateType[] =>\n  Array(columnSize)\n    .fill(todayTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (index - columnSize / 2) * C.TIME.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, todayTimestamp === timestamp);\n    });\n\nexport const extendDatesArray = (datesArray: FullDateType[], extraDays: number, backward?: boolean): FullDateType[] => {\n  const lastDay = datesArray[backward ? 0 : datesArray.length - 1];\n  const lastTimestamp = Date.UTC(lastDay.date.year, lastDay.date.month - 1, lastDay.date.day);\n  const extraArray = Array(extraDays)\n    .fill(lastTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (backward ? index - extraDays : index + 1) * C.TIME.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, false);\n    });\n  return backward ? [...extraArray, ...datesArray] : [...datesArray, ...extraArray];\n};\n\nexport const getDaysDiff = (date1: string | Date, date2: string | Date): number => {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (date2.getTime() - date1.getTime()) / C.TIME.MILLISECONDS_IN_DAY;\n  }\n  return (new Date(date2).getTime() - new Date(date1).getTime()) / C.TIME.MILLISECONDS_IN_DAY;\n};\n\nexport const getDaysInterval = (date1: string, date2: string): number => getDaysDiff(date1, date2) + 1;\n\nexport const getDateFromDiff = (date: string, diff: number): string =>\n  getDataString(new Date(date).getTime() + diff * C.TIME.MILLISECONDS_IN_DAY);\n\nexport const getDaysInMonth = (year: number, month: number): number => new Date(year, month, 0).getDate();\n\nexport const getDaysDiffBetweenMonths = (date1: string, date2: string): number => {\n  const d1 = new Date(date1);\n  const d2 = new Date(date2);\n  d1.setDate(1);\n  d2.setDate(1);\n  return getDaysDiff(d1, d2);\n};\n\nexport const getExpandedDate = (year: number, month: number, offsetMonths: number): string => {\n  const isFuture = offsetMonths > 0;\n  const date = new Date(Date.UTC(year, month - (isFuture ? 0 : 1) + offsetMonths, isFuture ? 0 : 1));\n  return getDataString(date);\n};\n\nexport const getMilisecondsUntilTomorrow = (days: number = 1): number => {\n  const today = new Date();\n  const otherDay = new Date(today.getFullYear(), today.getMonth(), today.getDate() + days);\n  return otherDay.getTime() - today.getTime();\n};\n\nexport const getNewDates = ({ direction, dateDiff }: MoveCard['payload'], dates: string[]): string[] => {\n  switch (direction) {\n    case -1:\n      return [getDateFromDiff(dates[0], dateDiff), dates[1]];\n    case 1:\n      return [dates[0], getDateFromDiff(dates[1], dateDiff)];\n    default:\n      return dates.map((date) => getDateFromDiff(date, dateDiff));\n  }\n};\n\nexport const getMonthList = (from: string, until: string, date?: DateTypeWithWeek, swap = 1): DateTypeWithWeek[] => {\n  const [fromYear, fromMonth] = from.split('-');\n  const [untilYear, untilMonth] = until.split('-');\n  const { year, month } = until === '' && date ? date : { year: untilYear, month: untilMonth };\n  const yearMonth1 = [Number(fromYear), Number(fromMonth)];\n  const yearMonth2 = [Number(year), Number(month)];\n  const min = swap > 0 ? yearMonth1 : yearMonth2;\n  const max = swap < 0 ? yearMonth1 : yearMonth2;\n  const extraMonth = until === '' ? 0 : 1; // We need this extra month to add equal number of months before and after\n  const skipOneMonthForFuture = swap === -1 ? 1 : 0;\n\n  const yearsDiff = max[0] - min[0];\n  const monthsDiff = max[1] - min[1] + extraMonth + yearsDiff * 12;\n\n  // TODO: Ensure there is sufficient months offset around initially rendered months to avoid addition at scroll\n  return Array(monthsDiff)\n    .fill(0)\n    .map((_, index) => getYMDWFromTimestamp(new Date(min[0], min[1] + index + skipOneMonthForFuture)));\n};\n\nexport const getExtendedMonthList = (months: DateTypeWithWeek[], i: number, offset: string): DateTypeWithWeek[] => {\n  const swap = i === 0 ? 1 : -1;\n  const newMonths = getMonthList(offset, '', months[i], swap);\n  Array.prototype[i ? 'push' : 'unshift'].apply(months, newMonths);\n  return months;\n};\n\nexport const getFromUntil = (cards: Cards): { from: string; until: string } =>\n  Object.values(cards).reduce(\n    ({ from, until }, card) => {\n      if (from === '') {\n        return { from: card.from, until: card.until };\n      }\n      return {\n        from: from.localeCompare(card.from) < 0 ? from : card.from,\n        until: until.localeCompare(card.until) > 0 ? until : card.until,\n      };\n    },\n    { from: '', until: '' }\n  );\n\nexport const getUIOffset = (\n  from: string,\n  until: string,\n  todayString: string\n): { fromOffset: string; untilOffset: string } => {\n  const min = from ? (from.localeCompare(todayString) <= 0 ? from : todayString) : todayString;\n  const max = until ? (todayString.localeCompare(until) < 0 ? until : todayString) : todayString;\n\n  const extraMonths = getExtraMonths();\n  return {\n    fromOffset: getExpandedDate(Number(min.slice(0, 4)), Number(min.slice(5, 7)), -extraMonths),\n    untilOffset: getExpandedDate(Number(max.slice(0, 4)), Number(max.slice(5, 7)), extraMonths),\n  };\n};\n","import { getTwoDigitDate } from './dates';\n\nimport { DateTypeWithWeek } from 'types';\n\nexport type SubscribtionStatus = {\n  started?: boolean;\n  x1?: number;\n  x2?: number;\n  y1?: number;\n  line?: number;\n  date?: string;\n  done?: boolean;\n};\nexport type Callback<T> = (status: T) => void;\nexport type SetNotification<T> = (fn: Callback<T>) => void;\nexport type Subscribtion<T> = (status: T) => {\n  notify: SetNotification<T>;\n  update: Callback<T>;\n  setMonths: Callback<DateTypeWithWeek[]>;\n};\n\nexport const subscribtion: Subscribtion<SubscribtionStatus> = (init) => {\n  let status = init;\n  let months: DateTypeWithWeek[] = [];\n  let callItBack: Callback<SubscribtionStatus> | undefined;\n  return {\n    notify: (fn) => {\n      callItBack = fn;\n    },\n    update: (update) => {\n      if (update.date) {\n        const [m, d] = update.date.split('-').map((x) => parseInt(x, 10));\n        update.date = m ? `${months[m].year}-${getTwoDigitDate(months[m].month)}-${getTwoDigitDate(d)}` : status.date;\n      } else {\n        update.date = status.date;\n      }\n      status = update;\n      callItBack && callItBack(status);\n    },\n    setMonths: (newMonths: DateTypeWithWeek[]) => {\n      months = newMonths;\n    },\n  };\n};\n\nexport const placeholderInitState = {\n  started: false,\n  x1: 0,\n  x2: 0,\n  y1: 0,\n  line: 0,\n  date: '',\n  done: false,\n};\nexport const placeholder = subscribtion(placeholderInitState);\n\nexport const passID = (() => {\n  let id = '';\n  return {\n    set: (newID: string) => (id = newID),\n    get: () => id,\n  };\n})();\n","import C from 'constants/index';\n\nimport { placeholder } from './subscribtion';\n\nexport const putPlaceholder = (): void => {\n  placeholder.update({\n    started: true,\n  });\n};\n\nexport const movePlaceholder = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n  const curTarget = e.currentTarget as HTMLUListElement;\n  const target = e.target as HTMLLIElement;\n  if (target.parentElement === curTarget) {\n    const rect: ClientRect = curTarget.getBoundingClientRect();\n    const childRect: ClientRect = target.getBoundingClientRect();\n    const line = Math.floor((e.clientY - rect.top + curTarget.scrollTop - C.DAY.HEADER.HEIGHT) / C.CARD.VERTICAL_SPACE);\n    if (line >= 0) {\n      let month = -1;\n      Array.from(curTarget.children).some((item) => {\n        if (item instanceof HTMLElement && item.offsetWidth) {\n          month = month + 1;\n        }\n        return item === target;\n      });\n      placeholder.update({\n        x1: Math.trunc((target.offsetLeft + e.clientX - childRect.left) / C.DAY.WIDTH) * C.DAY.WIDTH,\n        x2: e.clientX - rect.left + curTarget.scrollLeft,\n        y1: C.DAY.HEADER.HEIGHT + line * C.CARD.VERTICAL_SPACE,\n        date: `${month}-${Math.max(Math.floor((e.clientX - childRect.left) / C.DAY.WIDTH), 0) + 1}`,\n        line,\n      });\n    }\n  }\n};\n\nexport const removePlaceholder = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n  if (e.type === 'mouseup') {\n    placeholder.update({\n      started: false,\n      done: true,\n    });\n  } else {\n    const target = e.relatedTarget as HTMLElement;\n    // TODO: check if we still need `data-form` attribute\n    if (!target || !target.getAttribute || target.getAttribute('data-form') !== 'edit') {\n      placeholder.update({\n        started: false,\n      });\n    }\n  }\n};\n","import C from 'constants/index';\n\nimport { putPlaceholder, movePlaceholder, removePlaceholder } from './placeholderActions';\nimport { passID } from './subscribtion';\n\nimport { MoveCard } from 'types/actions';\n\ntype EventHandler = (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n\ntype CardActions = {\n  pressInZone: EventHandler;\n  moveInZone: EventHandler;\n  releaseInZone: EventHandler;\n  enterZone: EventHandler;\n  leaveZone: EventHandler;\n};\n\nconst [mXFix, mYFix] = C.CARD.CARDDECK_MOUSE_POSITION_FIX;\n\nconst getMousePositionFromCardDeck = (button: HTMLButtonElement, target: HTMLElement): number[] => {\n  if (button === target) {\n    return [button.offsetLeft, button.offsetTop];\n  }\n  if (target instanceof HTMLButtonElement) {\n    return [target.offsetLeft, target.offsetTop];\n  }\n  const cardDeck = button.parentElement as HTMLLIElement;\n  return [target.offsetLeft - cardDeck.offsetLeft - mXFix, target.offsetTop - cardDeck.offsetTop - mYFix];\n};\n\nconst getCoords = (\n  e: React.MouseEvent<HTMLElement, MouseEvent>,\n  coord: number[],\n  el: HTMLButtonElement\n): [number, number] => {\n  const target = e.target as HTMLElement;\n  const nativeEvent = e.nativeEvent;\n  const [mX, mY] = getMousePositionFromCardDeck(el, target);\n  const x = mX + nativeEvent.offsetX - coord[0];\n  const y = mY + nativeEvent.offsetY - coord[1];\n  return [x, y];\n};\n\nexport default (moveCard: (moveCard: MoveCard['payload']) => void): CardActions => {\n  const card = {\n    coord: [0, 0],\n    width: 0,\n    el: null as HTMLButtonElement | null,\n  };\n  const resize = {\n    limit: 0,\n    pressX: 0,\n    direction: 0,\n    extraSize: 0,\n  };\n  let dateTable: HTMLUListElement | null = null;\n  let setAim = false;\n\n  const removeDateTable = () => {\n    if (dateTable) {\n      dateTable.classList.remove('drag');\n      dateTable = null;\n    }\n  };\n\n  const clearDesk = (immidiate: boolean, wasResized: boolean = false): void => {\n    if (!card.el || !dateTable) {\n      return;\n    }\n    if (wasResized) {\n      resize.limit = 0;\n      resize.pressX = 0;\n      resize.direction = 0;\n      resize.extraSize = 0;\n      dateTable.style.cursor = '';\n    }\n    card.el.style.pointerEvents = '';\n    card.el.style.transform = '';\n    card.el.style.opacity = '';\n    card.el.style.zIndex = '';\n    card.el = null;\n    if (immidiate) {\n      removeDateTable();\n    } else {\n      setTimeout(removeDateTable, 10);\n    }\n  };\n\n  const pressInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (card.el) {\n      return;\n    }\n    if (e.target instanceof HTMLButtonElement) {\n      dateTable = e.currentTarget as HTMLUListElement;\n      dateTable.classList.add('drag');\n      card.el = e.target;\n      const { clientWidth, offsetLeft, offsetTop } = card.el;\n      const { offsetX, offsetY, clientX } = e.nativeEvent;\n      if (offsetX < C.CARD.RESIZE_TOLERANCE || clientWidth - offsetX < C.CARD.RESIZE_TOLERANCE) {\n        dateTable.style.cursor = 'ew-resize';\n        resize.pressX = clientX;\n        resize.direction = offsetX < C.CARD.RESIZE_TOLERANCE ? -1 : 1;\n        card.width = parseInt(card.el.style.width, 10);\n        resize.limit = (card.width - C.CARD.HORIZONTAL_SPACE) / -C.DAY.WIDTH;\n        return;\n      }\n      card.coord = [offsetLeft + offsetX, offsetTop + offsetY];\n    } else if (e.target instanceof HTMLDivElement) {\n      setAim = true;\n      putPlaceholder();\n    }\n  };\n  const moveInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (!card.el) {\n      if (e.target instanceof HTMLDivElement) {\n        movePlaceholder(e);\n      }\n      return;\n    }\n    if (!card.el.style.transform) {\n      card.el.style.pointerEvents = 'none';\n      card.el.style.zIndex = '5';\n    }\n    if (resize.direction === 0) {\n      const [x, y] = getCoords(e, card.coord, card.el);\n      if (e.clientY < C.DAY.HEADER.MILE_HEIGHT) {\n        card.el.style.opacity = '0';\n      } else {\n        card.el.style.transform = `translate(${x}px, ${y}px)`;\n        if (card.el.style.opacity !== '') {\n          card.el.style.opacity = '';\n        }\n      }\n    } else {\n      const { clientX } = e.nativeEvent;\n      const diffX = clientX - resize.pressX;\n      const extra =\n        resize.direction < 0\n          ? Math.round((C.CARD.RESIZE_TOLERANCE - diffX) / C.DAY.WIDTH)\n          : Math.ceil((diffX - C.CARD.RESIZE_TOLERANCE) / C.DAY.WIDTH);\n      resize.extraSize = Math.max(extra, resize.limit);\n      const extraX = resize.extraSize * C.DAY.WIDTH;\n      card.el.style.width = `${card.width + extraX}px`;\n      if (resize.direction < 0) {\n        card.el.style.transform = `translateX(${-extraX}px)`;\n      }\n    }\n  };\n  const releaseInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    const id = passID.get();\n    if (resize.direction !== 0) {\n      if (resize.extraSize) {\n        if (id) {\n          moveCard({\n            id,\n            direction: resize.direction,\n            lineDiff: 0,\n            dateDiff: resize.extraSize * resize.direction,\n          });\n        } else {\n          throw Error('Card ID is missing, card will not be resized.');\n        }\n      }\n      clearDesk(card.el === e.target, true);\n      return;\n    }\n    if (card.el) {\n      if (card.el.style.opacity === '0') {\n        return;\n      }\n      if (card.el !== e.target) {\n        const [x, y] = getCoords(e, card.coord, card.el);\n        if (id) {\n          const lineDiff = Math.round(y / C.CARD.VERTICAL_SPACE);\n          const dateDiff = Math.round(x / C.DAY.WIDTH);\n          if (lineDiff || dateDiff) {\n            moveCard({\n              id,\n              direction: 0,\n              lineDiff,\n              dateDiff,\n            });\n          }\n        } else {\n          throw Error('Card ID is missing, card will not be moved.');\n        }\n      }\n      clearDesk(card.el === e.target);\n    } else if (setAim) {\n      setAim = false;\n      removePlaceholder(e);\n    }\n  };\n  const leaveZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (e.type === 'mouseout') {\n      if (\n        e.relatedTarget instanceof HTMLButtonElement ||\n        e.relatedTarget instanceof HTMLHtmlElement ||\n        e.relatedTarget instanceof HTMLSpanElement ||\n        e.relatedTarget === null ||\n        (e.relatedTarget instanceof HTMLElement &&\n          (e.relatedTarget.tagName.toLowerCase() === 'aside' ||\n            e.relatedTarget.parentElement?.tagName.toLowerCase() === 'aside'))\n      ) {\n        removePlaceholder(e);\n        setAim = false;\n      }\n      return;\n    }\n    if (card.el && !(e.target instanceof HTMLButtonElement) && resize.direction === 0) {\n      card.el.style.opacity = '0';\n    }\n  };\n  const enterZone = (): void => {\n    if (setAim) {\n      setAim = false;\n    }\n    if (card.el && card.el.style.opacity !== '') {\n      card.el.style.opacity = '';\n    }\n  };\n\n  return {\n    pressInZone,\n    moveInZone,\n    releaseInZone,\n    enterZone,\n    leaveZone,\n  };\n};\n","import { EditCard, MoveCard } from 'types/actions';\nimport { EditSelection } from 'types/state';\n\nexport const editCard = (props: EditSelection): EditCard => ({\n  type: 'EDIT_CARD',\n  payload: {\n    ...props,\n  },\n});\n\nexport const moveCard = (props: MoveCard['payload']): MoveCard => ({\n  type: 'MOVE_CARD',\n  payload: {\n    ...props,\n  },\n});\n","export type Card = {\n  id: string;\n  line: number;\n  text: string;\n  from: string;\n  until: string;\n  progress?: number;\n};\n\nexport type Lines = {\n  names: {\n    [key: string]: string;\n  };\n};\n\nexport type Long = string;\n\nexport type MileColors =\n  | 'purple'\n  | 'violet'\n  | 'indigo'\n  | 'blue'\n  | 'azur'\n  | 'green'\n  | 'yellow'\n  | 'orange'\n  | 'fire'\n  | 'pink';\n\nexport type Milestone = {\n  id: string;\n  text: string;\n  date: string;\n  from?: never;\n  until?: never;\n  progress?: never;\n  color: MileColors;\n};\n\nexport type Meta = {\n  createdAt: number;\n  name: string;\n  ownerID: string;\n  stats: {\n    cards: number;\n    from: string;\n    until: string;\n  };\n};\n\nexport enum ElementType {\n  card = 'card',\n  line = 'line',\n  milestone = 'milestone',\n  none = '',\n}\n\nexport type List<Type> = {\n  [key: string]: Type;\n};\n\nexport type Cards = List<Card>;\nexport type Longs = List<Long>;\nexport type Miles = List<Milestone>;\n\nexport interface PersistentState {\n  cards: Cards;\n  lines: Lines;\n  longs: Longs;\n  milestones: Miles;\n}\n\nexport interface FetchedData extends PersistentState {\n  roadmapID: string;\n}\n\nexport type SelectedElement = Card | Milestone | undefined;\n\nexport type EditSelection = Card;\n\nexport interface Selection extends EditSelection {\n  isNew: boolean;\n  type: ElementType;\n}\n\nexport interface UserSettings {\n  lineNameWidth: number;\n}\n\nexport interface State extends PersistentState {\n  selection: Selection;\n  user: {\n    id: string;\n    name: string;\n    email: string;\n    photoURL: string;\n    fetchig: boolean;\n    roadmaps: {\n      [key: string]: UserSettings;\n    };\n    roadmapsSet: boolean;\n  };\n  metas: List<Meta>;\n  ui: {\n    currentRoadmapID: string;\n    todayTimestamp: number;\n    cardsPosition: string;\n    fromOffset: string;\n    untilOffset: string;\n  };\n}\n","import styled from 'styled-components';\n\nexport const PlaceholderBlock = styled.span`\n  position: absolute;\n  display: block;\n  height: 26px;\n  line-height: 28px;\n  border: ${(props: { solid: boolean }) => (props.solid ? '1px dashed #999' : '1px dashed #ddd')};\n  border-radius: 5px;\n  padding: 0 13px 0 12px;\n  box-shadow: 0 2px 5px -2px rgba(0, 0, 0, 0.2);\n  margin: 1px 2px;\n  background: rgba(255, 255, 255, 0.5);\n  pointer-events: none;\n  left: 0;\n  top: 0;\n`;\n\nexport const PlaceholderContent = styled.span`\n  display: inline-block;\n  font-weight: lighter;\n  position: absolute;\n  text-align: right;\n  font-size: 12px;\n  color: #999;\n  right: 7px;\n  left: 7px;\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { newCard } from 'state/actions/selection';\nimport { placeholder, placeholderInitState } from 'utils/subscribtion';\nimport { isAimOnCard, getPlaceholderData, getPlaceholderWidth } from 'utils/ui';\nimport { getDateFromDiff } from 'utils/dates';\n\nimport { PlaceholderBlock, PlaceholderContent } from 'styles/Placeholder';\n\nimport { State, ElementType } from 'types/state';\n\nconst Placeholder = (): JSX.Element => {\n  const [aim, setAim] = useState(placeholderInitState);\n  const cards = useSelector((state: State) => state.cards);\n  const memoizedCards = useMemo(() => Object.values(cards), [cards]);\n  const isAimHoversCard = useMemo(() => isAimOnCard(aim, memoizedCards), [aim, memoizedCards]);\n  const selectionType = useSelector((state: State) => state.selection.type);\n  useEffect(() => {\n    if (selectionType === ElementType.none) {\n      setAim(placeholderInitState);\n    }\n  }, [selectionType]);\n  const dispatch = useDispatch();\n\n  placeholder.notify(({ started, x1, x2, y1, line, date = '', done = false }) => {\n    if (started !== undefined && !isAimHoversCard) {\n      if (started && started !== aim.started) {\n        setAim({\n          ...aim,\n          started,\n          date: date,\n          x2: aim.x1,\n        });\n      } else if (aim.started && done) {\n        dispatch(\n          newCard({\n            line: aim.line,\n            from: aim.date,\n            until: getDateFromDiff(aim.date, getPlaceholderWidth(aim.x1, aim.x2) - 1),\n          })\n        );\n      } else {\n        setAim(placeholderInitState);\n      }\n    }\n    if (x1 !== undefined && y1 !== undefined && line !== undefined) {\n      if (aim.started === false) {\n        if (aim.x1 !== x1 || aim.y1 !== y1) {\n          setAim({\n            ...aim,\n            x1,\n            y1,\n            line,\n            date,\n          });\n        }\n      } else if (x2 !== undefined) {\n        setAim({\n          ...aim,\n          x2,\n        });\n      }\n    }\n  });\n\n  const shouldSkipAim = (aim.x1 === 0 && aim.y1 === 0) || isAimHoversCard;\n  const { style, size } = getPlaceholderData(aim.x1, aim.x2, aim.y1, shouldSkipAim);\n\n  return (\n    <PlaceholderBlock solid={aim.started} style={style}>\n      <PlaceholderContent>{size}</PlaceholderContent>\n    </PlaceholderBlock>\n  );\n};\n\nexport default React.memo(Placeholder);\n","import React from 'react';\n\nconst Day = ({\n  day,\n  weekDay,\n  tip,\n  isToday,\n}: {\n  day: number;\n  weekDay: string;\n  tip: string;\n  isToday: boolean;\n}): JSX.Element => {\n  const className = isToday ? 'today' : undefined;\n  return (\n    <span className={className} data-weekday={weekDay} title={tip}>\n      {day}\n    </span>\n  );\n};\n\nexport default Day;\n","import React from 'react';\n\nimport { getDateForTooltip, getMonthName } from 'utils/dates';\nimport Day from 'components/Deck/Day';\n\nimport { DateType } from 'types';\n\nconst Month = ({ date, today }: { date: DateType; today: DateType }): JSX.Element => {\n  const monthName = `${getMonthName(date)} ${date.year}`;\n  const days = Array(date.day)\n    .fill(date)\n    .map(({ year, month }: { year: number; month: number }, i: number) => {\n      const day = i + 1;\n      const isToday = today.year === year && today.month === month && today.day === day;\n      const [weekDay, tip] = getDateForTooltip({ year, month, day });\n      return <Day key={day} day={day} weekDay={weekDay} tip={tip} isToday={isToday} />;\n    });\n\n  return (\n    <React.Fragment>\n      <aside className=\"monthname\">{monthName}</aside>\n      <aside className=\"days\">{days}</aside>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Month);\n","import styled from 'styled-components';\n\nimport C from 'constants/index';\nimport { getMonthBackgroud } from 'utils/ui';\n\nexport const DeckBlock = styled.section`\n  font-size: 0;\n  width: 100vw;\n  height: 100%;\n  overflow: scroll;\n  white-space: nowrap;\n  position: relative;\n  user-select: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const DeckInner = styled.section`\n  display: flex;\n  min-height: calc(100vh - 45px);\n`;\n\nexport const MonthsBlock = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n  box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.2);\n  background-image: ${({ firstDay }: { firstDay: number }) => getMonthBackgroud(firstDay, C.DAY.WIDTH)};\n  background-size: ${C.DAY.WIDTH}px 100%, ${C.DAY.WIDTH * 7}px 100%;\n  .monthname {\n    height: 54px;\n    font-size: 12px;\n    width: 100%;\n    padding: 8px 12px 3px;\n    margin-top: -100%;\n    position: sticky;\n    top: 0;\n    z-index: 8;\n    cursor: default;\n    background: #f7f8f9;\n    box-sizing: border-box;\n    color: #bbb;\n    box-shadow: rgba(0, 0, 0, 0.2) 2px 2px 2px, rgba(0, 0, 0, 0.06) 1px 0 0 inset;\n    pointer-events: all;\n  }\n  .days {\n    top: 25px;\n    position: sticky;\n    margin-top: -100%;\n    z-index: 9;\n    cursor: default;\n    user-select: none;\n    span {\n      width: 14px;\n      display: inline-block;\n      height: 14px;\n      font-size: 12px;\n      line-height: 14px;\n      padding: 8px 7px 7px 9px;\n      text-align: center;\n      color: #999;\n      position: relative;\n      z-index: 1;\n      &:before {\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        left: 6px;\n        top: 5px;\n        border-radius: 50px;\n        z-index: -1;\n      }\n      &.today {\n        color: #fff;\n        &:hover {\n          color: #f00;\n          &:after {\n            background: #f00;\n          }\n        }\n        &:before {\n          content: '';\n          background: #f00;\n        }\n      }\n      &:hover {\n        transform: translateY(3px);\n        font-size: 10px;\n        padding-bottom: 4px;\n        &:before {\n          content: '';\n          background: transparent;\n          border: 1px solid currentColor;\n          left: 6px;\n          top: 1px;\n          border-radius: 3px;\n          width: 18px;\n          height: 18px;\n        }\n        &:after {\n          content: attr(data-weekday);\n          position: absolute;\n          width: 20px;\n          height: 8px;\n          background: #999;\n          font-size: 7px;\n          color: #fff;\n          line-height: 8px;\n          top: 2px;\n          border-radius: 3px 3px 0 0;\n          left: 6px;\n        }\n      }\n    }\n  }\n`;\n\nexport const Today = styled.mark`\n  position: absolute;\n  top: 0;\n  width: 2px;\n  height: 100%;\n  background: linear-gradient(#f00, #8c0756);\n  pointer-events: none;\n`;\n\nexport const TodayScroll = styled.button`\n  border: none;\n  font-size: 12px;\n  position: absolute;\n  right: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition > 0 ? '0' : '100%')};\n  transform: ${({ scrollPosition }: { scrollPosition: number }) =>\n    scrollPosition === 0\n      ? 'translate(0)'\n      : scrollPosition > 0\n      ? 'translate(-12px)'\n      : 'translate(100%) translate(12px)'};\n  background: #f7f8f9;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  margin: 3px auto;\n  line-height: 24px;\n  padding: 0 7px;\n  transition: box-shadow 0.1s, transform 0.1s, opacity 0.1s;\n  cursor: pointer;\n  z-index: 10;\n  color: #555;\n  user-select: none;\n  opacity: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? '0' : '1')};\n  pointer-events: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? 'none' : undefined)};\n  &:hover {\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  }\n  &:before {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition < 0 && `\"\\\\276E\"`};\n    color: #f00;\n    margin: 0 7px 0 3px;\n  }\n  &:after {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition > 0 && `\"\\\\276F\"`};\n    color: #f00;\n    margin: 0 3px 0 7px;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Month from 'components/Deck/Month';\nimport { getYMDFromTimestamp } from 'utils/dates';\n\nimport C from 'constants/index';\n\nimport { MonthsBlock, Today } from 'styles/DateTable';\n\nimport { DateTypeWithWeek } from 'types';\nimport { State } from 'types/state';\n\nconst MonthsList = ({\n  todayRef,\n  months,\n  children,\n}: {\n  todayRef: React.RefObject<HTMLElement>;\n  months: DateTypeWithWeek[];\n  children: JSX.Element;\n}): JSX.Element => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const today = useMemo(() => getYMDFromTimestamp(todayTimestamp), [todayTimestamp]);\n  const cardsPosition = useSelector((state: State) => state.ui.cardsPosition);\n  const [cardsYear, cardsMonth] = useMemo(() => cardsPosition.split('-').map((val) => Number(val)), [cardsPosition]);\n  const todayStyle = useMemo(() => ({ left: `${today.day * C.DAY.WIDTH - C.DAY.WIDTH / 2}px` }), [today]);\n\n  const MonthBlock = useMemo(\n    () =>\n      function MonthMemo(\n        key: string,\n        monthStyle: {\n          width: string;\n        },\n        firstWeekDay: number,\n        isToday: boolean,\n        date: DateTypeWithWeek\n      ): JSX.Element {\n        return (\n          <MonthsBlock key={key} style={monthStyle} firstDay={firstWeekDay}>\n            {isToday && <Today ref={todayRef} style={todayStyle} />}\n            <Month date={date} today={today} />\n          </MonthsBlock>\n        );\n      },\n    [todayRef, todayStyle, today]\n  );\n\n  return (\n    <React.Fragment>\n      {months.map((date: DateTypeWithWeek) => {\n        const { year, month, day, firstWeekDay } = date;\n        const key = `${year}-${month}`;\n        const monthStyle = { width: `${day * C.DAY.WIDTH}px` };\n        const isToday = today.year === year && today.month === month;\n        if (cardsYear === year && cardsMonth === month) {\n          return (\n            <React.Fragment key={key}>\n              {children}\n              {MonthBlock(key, monthStyle, firstWeekDay, isToday, date)}\n            </React.Fragment>\n          );\n        }\n        return MonthBlock(key, monthStyle, firstWeekDay, isToday, date);\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default MonthsList;\n","import styled from 'styled-components';\n\nimport { CardTypes } from 'types/card';\nimport C from 'constants/index';\nimport colors, { statusColorMap } from 'constants/colors';\n\nexport const CardWaraper = styled.section`\n  display: inline-block;\n  position: relative;\n  z-index: 2;\n`;\n\nexport const DeckLineCounter = styled.aside`\n  float: left;\n  position: sticky;\n  left: 0;\n  width: 0;\n  z-index: 8;\n  &:hover div {\n    border-color: #aaa;\n    color: ${colors.text.onLight.bold};\n    &[data-name]:after {\n      transform: translate(6px);\n    }\n    &:hover:after {\n      transform: translateX(100%);\n    }\n  }\n  section {\n    width: 20px;\n    padding: ${C.DAY.HEADER.HEIGHT}px 0 5px;\n    min-height: calc(100vh - 135px);\n    &.edit {\n      width: 150px;\n      background: #f7f8f9e6;\n      border-right: 1px solid #ccc;\n      padding-bottom: 5px;\n      position: relative;\n      aside {\n        position: fixed;\n        top: 99px;\n        left: 150px;\n        width: 6px;\n        height: calc(100% - 99px);\n        margin-left: -6px;\n        cursor: ew-resize;\n        z-index: 1;\n        &.drag:before {\n          content: '';\n          width: 2000px;\n          height: 100%;\n          margin-left: -1000px;\n          position: absolute;\n        }\n        hr {\n          position: absolute;\n          top: 50%;\n          left: 2px;\n          height: 26px;\n          border-width: 0;\n          border-left: 2px dotted #ccc;\n          margin-top: -12px;\n        }\n        &.drag hr,\n        &:hover hr {\n          border-color: #999;\n        }\n      }\n      button {\n        display: inline-block;\n        position: absolute;\n        top: 61px;\n        right: 7px;\n        color: #aaa;\n        line-height: 0;\n        font-size: 17px;\n        cursor: pointer;\n        border-radius: 4px;\n        padding: 10px 4px 8px;\n        border: 1px solid #ccc;\n        &:hover {\n          background: #d9d9de;\n          color: #333;\n        }\n      }\n      &:not(.hidden) div {\n        border-radius: 0;\n        border-color: #ccc;\n        color: ${colors.text.onLight.bold};\n        cursor: default;\n        &:after {\n          content: none;\n        }\n        input {\n          position: absolute;\n          left: 12px;\n          border: 1px solid #ccc;\n          margin: -1px;\n          border-radius: 0 4px 4px 0;\n          padding: 5px;\n          border-left: 0;\n          font-size: 12px;\n          line-height: 18px;\n          background: #f7f8f9;\n          width: calc(100% - 28px);\n        }\n      }\n    }\n    &.edit.hidden div input {\n      display: none;\n    }\n  }\n  div {\n    color: ${colors.text.onLight.mute};\n    width: 11px;\n    height: 28px;\n    font-size: 9px;\n    line-height: 28px;\n    text-align: center;\n    padding: 0 1px 0 0;\n    margin-top: 5px;\n    border: 1px solid #ddd;\n    border-left: none;\n    background: ${colors.header.lite};\n    border-radius: 0 4px 4px 0;\n    letter-spacing: -0.1em;\n    transition: 0.1s;\n    cursor: pointer;\n    &:first-of-type {\n      margin-top: 0;\n    }\n    &:after {\n      content: '+';\n      letter-spacing: 0;\n      display: inline-block;\n      background: ${colors.logo.yellow};\n      border: inherit;\n      padding: 0 5px 0 7px;\n      border-radius: inherit;\n      z-index: -1;\n      right: -10px;\n      position: absolute;\n      margin-top: -1px;\n      transition: 0.1s;\n    }\n    &[data-name]:after {\n      content: attr(data-name);\n    }\n  }\n`;\n\nexport const CardBlockText = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const CardStatusSVG = styled.svg.attrs({\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 300 300',\n})`\n  background: ${({ type }: { type: CardTypes }) => statusColorMap[type]};\n  border-radius: 50%;\n  padding: 2px;\n  fill: #fff;\n`;\n\nexport const CardBlockProgress = styled.mark`\n  position: absolute;\n  display: block;\n  left: 4px;\n  right: 4px;\n  bottom: 3px;\n  height: 2px;\n  background: transparent;\n  overflow: hidden;\n  opacity: 0.4;\n  border-radius: 0 0 2px 2px;\n  transition: 0.1s;\n`;\n\nexport const CardBlock = styled.button`\n  border: none;\n  text-align: left;\n  box-sizing: content-box;\n  font-size: 12px;\n  position: absolute;\n  background: #fff;\n  border-radius: 4px;\n  margin: 0 2px;\n  line-height: 28px;\n  padding: 0 5px 0 5px;\n  border: 1px solid #ccc;\n  transition: box-shadow 0.1s, opacity 0.1s;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 2px 3px -1px rgba(0, 0, 0, 0.3);\n  }\n  &:hover ${CardBlockProgress} {\n    opacity: 1;\n  }\n  & ${CardStatusSVG} {\n    position: absolute;\n    width: 0;\n    top: 3px;\n    right: 3px;\n    transform: translate(50%, -50%);\n    z-index: 2;\n    transition: 0.1s;\n  }\n  &:hover ${CardStatusSVG} {\n    width: 8px;\n    opacity: 1;\n  }\n  &.resized {\n    line-height: 28px;\n    border: 1px dashed #e2e2e2;\n    padding: 0 4px 0 6px;\n    cursor: ew-resize;\n  }\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    width: 5px;\n    bottom: 0;\n    opacity: 0;\n    cursor: ew-resize;\n  }\n  &:before {\n    left: 0;\n  }\n  &:after {\n    right: 0;\n  }\n  &:focus {\n    outline: none;\n  }\n  & * {\n    pointer-events: none;\n  }\n`;\n","import React from 'react';\n\nimport { CardStatusSVG } from 'styles/CardBlock';\n\nimport { CardTypes } from 'types/card';\n\n// Pending     — gray (empty circle)\n// In progress — blue (chart pie)\n// Delayed     - organge (exclamation)\n// Complete    - green (check)\n// Dropped     — red (cross)\n\nconst cardCases = (type: CardTypes): string => {\n  switch (type) {\n    case 'pending':\n      return 'M59 120a30 30 0 100 60 30 30 0 000-60zm93 0a30 30 0 100 60 30 30 0 000-60zm89 0a30 30 0 100 60 30 30 0 000-60z';\n    case 'progress':\n      return 'M150 150V15A135 135 0 1133.087 217.5L150 150';\n    case 'delayed':\n      return 'M150 21c-17 0-29 8-29 22v128c0 14 12 22 29 22 16 0 29-9 29-22V43c0-14-13-22-29-22zm0 201a29 29 0 100 58 29 29 0 000-58';\n    case 'complete':\n      return 'M119 260c-2 2-6 4-9 4s-7-2-10-4l-75-76c-8-8-8-20 0-28l9-10c8-7 21-7 29 0l47 48L237 66c8-8 21-8 29 0l9 10c8 8 8 20 0 28L119 260zm0 0';\n    case 'dropped':\n      return 'M185 150l66-66c8-7 8-19 0-27l-8-8c-8-8-20-8-27 0l-66 66-66-66c-7-8-19-8-27 0l-8 8c-8 8-8 20 0 27l66 66-66 66c-8 7-8 19 0 27l8 8c8 8 20 8 27 0l66-66 66 66c7 8 19 8 27 0l8-8c8-8 8-20 0-27l-66-66zm0 0';\n  }\n};\n\nconst CardStatus = ({ type, className }: { type?: CardTypes; className?: string }): JSX.Element | null =>\n  type ? (\n    <CardStatusSVG type={type} className={className}>\n      <path d={cardCases(type)} />\n    </CardStatusSVG>\n  ) : null;\n\nexport default React.memo(CardStatus);\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getProgressBackgroud, getCardStatus } from 'utils/ui';\nimport { selectCard, selectionDelete } from 'state/actions/selection';\nimport { removePlaceholder } from 'utils/placeholderActions';\nimport CardStatus from 'assets/CardStatus';\nimport { passID } from 'utils/subscribtion';\nimport { getDataString } from 'utils/dates';\n\nimport CLR from 'constants/colors';\n\nimport { CardBlock, CardBlockProgress, CardBlockText } from 'styles/CardBlock';\n\nimport { Card, State } from 'types/state';\n\ntype Props = {\n  card: Card;\n  style: {\n    width: string;\n    top: string;\n  };\n};\n\nconst RoadmapCard = ({ card, style }: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const todayString = useMemo(() => getDataString(todayTimestamp), [todayTimestamp]);\n  const typeS = useMemo(() => getCardStatus(card.from, card.until, todayString, card.progress), [card, todayString]);\n  const progS = useMemo(() => getProgressBackgroud(card.progress, typeS ? CLR.statusColors[typeS] : ''), [card, typeS]);\n\n  const clickCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    if (\n      (e.target as HTMLButtonElement)?.parentElement?.parentElement?.classList.contains('drag') ||\n      e.altKey ||\n      e.ctrlKey ||\n      e.metaKey ||\n      e.shiftKey\n    ) {\n      return;\n    }\n    dispatch(\n      selectCard({\n        id: card.id,\n      })\n    );\n  };\n\n  const handleDoubleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (e.altKey) {\n      dispatch(\n        selectionDelete({\n          id: card.id,\n        })\n      );\n    }\n  };\n  const handleContextMenu = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleMouseDown = () => {\n    passID.set(card.id);\n  };\n\n  // TODO: Optimize rendering reducing new objects\n  return (\n    <CardBlock\n      style={style}\n      onClick={clickCard}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={removePlaceholder}\n      onTouchStart={handleMouseDown}\n      onMouseDown={handleMouseDown}\n      title={card.text}\n    >\n      <CardStatus type={typeS} />\n      <CardBlockProgress style={progS} />\n      <CardBlockText>{card.text}</CardBlockText>\n    </CardBlock>\n  );\n};\n\nexport default React.memo(RoadmapCard);\n","import React, { useMemo, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Card from 'components/Deck/Card';\nimport { getDaysDiff, getDaysInterval } from 'utils/dates';\nimport { getCardsDeckHeight } from 'utils/ui';\n\nimport C from 'constants/index';\n\nimport { CardWaraper } from 'styles/CardBlock';\n\nimport { State } from 'types/state';\n\nconst CardsDeck = ({ setLines }: { setLines: React.Dispatch<React.SetStateAction<number>> }): JSX.Element => {\n  const cardsObject = useSelector((state: State) => state.cards);\n  const lineNames = useSelector((state: State) => state.lines.names);\n  const { cardsPosition } = useSelector((state: State) => state.ui);\n  const lineSize = useRef(-1);\n  // Ading 1 because lines count starts with 0\n  useEffect(() => (lineSize.current >= 0 ? setLines(lineSize.current + 1) : void null), [lineSize.current]);\n  const cards = useMemo(\n    () =>\n      Object.values(cardsObject).map((card) => {\n        const dayOffset = getDaysDiff(cardsPosition, card.from);\n        const dayDiff = getDaysInterval(card.from, card.until);\n        const style = {\n          left: `${dayOffset * C.DAY.WIDTH}px`,\n          width: `${dayDiff * C.DAY.WIDTH - C.CARD.HORIZONTAL_SPACE}px`,\n          top: `${C.DAY.HEADER.HEIGHT + card.line * C.CARD.VERTICAL_SPACE}px`,\n        };\n        lineSize.current = Math.max(lineSize.current, card.line);\n        return <Card key={card.id} card={card} style={style} />;\n      }),\n    [cardsObject, cardsPosition]\n  );\n  const maxLine = Object.keys(lineNames).reduce((acc, val) => Math.max(acc, parseInt(val, 10)), 0) - 1;\n  lineSize.current = Math.max(lineSize.current, maxLine);\n  const wrapperStyle = useMemo(() => getCardsDeckHeight(lineSize.current), [lineSize.current]);\n\n  return <CardWaraper style={wrapperStyle}>{cards}</CardWaraper>;\n};\n\nexport default React.memo(CardsDeck);\n","import {\n  AuthFetch,\n  AuthSuccess,\n  AuthOut,\n  SetAccountRoadmaps,\n  AddAccountRoadmap,\n  RemoveAccountRoadmap,\n  SetAccountRoadmapSetting,\n  SetCurrentRoadmap,\n  RemoveCurrentRoadmap,\n  RoadmapDataFetch,\n} from 'types/actions';\nimport { State } from 'types/state';\n\nexport const authFetch = (): AuthFetch => ({\n  type: 'AUTH_FETCH',\n});\n\nexport const authSuccess = (userData: AuthSuccess['payload']): AuthSuccess => ({\n  type: 'AUTH_SUCCESS',\n  payload: {\n    ...userData,\n  },\n});\n\nexport const authOut = (): AuthOut => ({\n  type: 'AUTH_OUT',\n});\n\nexport const setAccountRoadmaps = (roadmaps: State['user']['roadmaps'], meta: State['metas']): SetAccountRoadmaps => ({\n  type: 'SET_ACCOUNT_ROADMAPS',\n  payload: {\n    roadmaps,\n    meta,\n  },\n});\n\nexport const addAccountRoadmap = (roadmapName: string): AddAccountRoadmap => ({\n  type: 'ADD_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapName,\n  },\n});\n\nexport const removeAccountRoadmap = (roadmapID: string): RemoveAccountRoadmap => ({\n  type: 'REMOVE_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapID,\n  },\n});\n\nexport const setAccountRoadmapSetting = ({\n  roadmapID,\n  settingName,\n  settingValue,\n}: SetAccountRoadmapSetting['payload']): SetAccountRoadmapSetting => ({\n  type: 'SET_ACCOUNT_ROADMAP_SETTING',\n  payload: {\n    roadmapID,\n    settingName,\n    settingValue,\n  },\n});\n\nexport const setCurrentRoadmap = (currentRoadmapID: string): SetCurrentRoadmap => ({\n  type: 'SET_CURRENT_ROADMAP',\n  payload: {\n    currentRoadmapID,\n  },\n});\n\nexport const removeCurrentRoadmap = (): RemoveCurrentRoadmap => ({\n  type: 'REMOVE_CURRENT_ROADMAP',\n});\n\nexport const roadmapDataFetch = (roadmapData: RoadmapDataFetch['payload']): RoadmapDataFetch => ({\n  type: 'ROADMAP_DATA_FETCH',\n  payload: {\n    ...roadmapData,\n  },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { editLineName } from 'state/actions/lines';\nimport { setAccountRoadmapSetting } from 'state/actions/user';\nimport C from 'constants/index';\nimport { DeckLineCounter } from 'styles/CardBlock';\nimport { State } from 'types/state';\nimport { getInputIndexInGrandParent, setFocusWithoutRerender } from 'utils/ui';\n\nconst DeckLines = ({ lineCount }: { lineCount: number }) => {\n  const dispatch = useDispatch();\n  const lineNames = useSelector((state: State) => state.lines.names);\n  const roadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const lineNameWidth = useSelector((state: State) => state.user.roadmaps[roadmapID].lineNameWidth);\n  const [drag, setDrag] = useState(false);\n  const [maxLine, setMaxLine] = useState(lineCount);\n  const [editState, setEditState] = useState(lineNameWidth > 0);\n  const inputPanel = useRef<HTMLElement>(null);\n  const inputHandler = useRef<HTMLElement>(null);\n  const nextFocusInputIndex = useRef(-1);\n  const panelWidth = useRef(lineNameWidth);\n\n  useEffect(() => {\n    const maxName = Object.keys(lineNames).reduce((acc, val) => Math.max(acc, parseInt(val, 10)), 1);\n    setMaxLine(Math.max(maxName, lineCount));\n  }, [lineNames, lineCount]);\n\n  useEffect(() => {\n    const newPanelWidth = editState ? panelWidth.current : 0;\n    if (newPanelWidth !== lineNameWidth) {\n      dispatch(setAccountRoadmapSetting({ roadmapID, settingName: 'lineNameWidth', settingValue: newPanelWidth }));\n    }\n  }, [editState, panelWidth.current]);\n\n  const saveLine = (target: HTMLInputElement): boolean => {\n    const line = getInputIndexInGrandParent(target).index;\n    const text = target.value;\n    if (line && text !== lineNames[line] && !(text === '' && lineNames[line] === undefined)) {\n      dispatch(editLineName({ line, text }));\n      return true;\n    }\n    return false;\n  };\n  const moveFocus = (target: HTMLInputElement, reverse: boolean): number => {\n    const { index, total } = getInputIndexInGrandParent(target);\n    const isEdge = (index === 1 && reverse) || (index === total && !reverse);\n    if (isEdge) {\n      nextFocusInputIndex.current = total;\n    } else {\n      nextFocusInputIndex.current = index + (reverse ? -2 : 0);\n    }\n    return nextFocusInputIndex.current;\n  };\n\n  const handleEditOpen = (e: React.SyntheticEvent) => {\n    panelWidth.current = C.LINE.INIT_WIDTH;\n    setEditState(true);\n    if (e.target instanceof HTMLDivElement && e.target.parentElement) {\n      nextFocusInputIndex.current = ([].slice.call(e.target.parentElement.children) as HTMLElement[]).indexOf(e.target);\n    } else {\n      nextFocusInputIndex.current = -1;\n    }\n  };\n  const handleEditClose = () => setEditState(false);\n\n  const handleInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (e.relatedTarget instanceof HTMLInputElement) {\n      nextFocusInputIndex.current = getInputIndexInGrandParent(e.relatedTarget).index - 1;\n    }\n    const saved = saveLine(e.target);\n    if (saved && e.relatedTarget instanceof HTMLButtonElement) {\n      e.relatedTarget.click();\n    }\n  };\n\n  const handleInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (!(e.target instanceof HTMLInputElement)) {\n      return;\n    }\n    switch (e.key.toLocaleLowerCase()) {\n      case 'escape':\n        return setEditState(false);\n      case 'enter':\n        const saved = saveLine(e.target);\n        const focus = moveFocus(e.target, e.shiftKey);\n        return !saved && setFocusWithoutRerender(e.target, focus);\n    }\n  };\n\n  const handlePressToDrag = () => (nextFocusInputIndex.current = -1) && setDrag(true);\n  const handleMoveToDrag = (e: React.MouseEvent) => {\n    if (drag && inputPanel.current && inputHandler.current) {\n      if (e.clientX > C.LINE.MIN_WIDTH_COLLAPSE) {\n        panelWidth.current = Math.max(e.clientX + 3, C.LINE.MIN_WIDTH);\n        inputPanel.current.className = 'edit';\n      } else {\n        panelWidth.current = 0;\n        inputPanel.current.className = 'edit hidden';\n      }\n      inputPanel.current.style.width = panelWidth.current + 'px';\n      inputHandler.current.style.left = panelWidth.current + 'px';\n      inputHandler.current.className = 'drag';\n    }\n  };\n  const handleReleaseResize = () => {\n    setDrag(false);\n    if (panelWidth.current === 0) {\n      setEditState(false);\n    }\n  };\n  const handleDragOut = () => panelWidth.current <= C.LINE.MIN_WIDTH_COLLAPSE && handleReleaseResize();\n\n  const EditNames = () => (\n    <section className=\"edit\" ref={inputPanel} style={{ width: panelWidth.current + 'px' }}>\n      {Array(maxLine + 1)\n        .fill(0)\n        .map((_, i) => (\n          <div key={i}>\n            {i === maxLine ? '+' : i + 1}\n            <input\n              type=\"text\"\n              defaultValue={lineNames[i + 1]}\n              onBlur={handleInputBlur}\n              onKeyDown={handleInputKeyDown}\n              autoFocus={i === nextFocusInputIndex.current}\n            />\n          </div>\n        ))}\n      <button type=\"button\" onClick={handleEditClose}>\n        &times;\n      </button>\n      <aside\n        ref={inputHandler}\n        onMouseDown={handlePressToDrag}\n        onMouseMove={handleMoveToDrag}\n        onMouseUp={handleReleaseResize}\n        onMouseOut={handleDragOut}\n        style={{ left: panelWidth.current + 'px' }}\n      >\n        <hr />\n      </aside>\n    </section>\n  );\n\n  const ShowNames = () => (\n    <section onClick={handleEditOpen}>\n      {Array(maxLine)\n        .fill(0)\n        .map((_, i) => (\n          <div key={i} data-name={lineNames[i + 1]}>\n            {i + 1}\n          </div>\n        ))}\n    </section>\n  );\n\n  return <DeckLineCounter>{editState ? <EditNames /> : <ShowNames />}</DeckLineCounter>;\n};\n\nexport default React.memo(DeckLines);\n","import { EditLineName } from 'types/actions';\n\nexport const editLineName = (props: EditLineName['payload']): EditLineName => ({\n  type: 'EDIT_LINE_NAME',\n  payload: {\n    ...props,\n  },\n});\n","import { SetTodayTimestamp, SetUIOffset } from 'types/actions';\n\nexport const setUIOffset = (offset: SetUIOffset['payload']): SetUIOffset => ({\n  type: 'SET_UI_OFFSET',\n  payload: {\n    ...offset,\n  },\n});\n\nexport const setTodayTimestamp = (timestamp: number): SetTodayTimestamp => ({\n  type: 'SET_TODAY_TIMESTAMP',\n  payload: {\n    timestamp,\n  },\n});\n","import React, { useRef, useState, useLayoutEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getDaysDiffBetweenMonths, getExpandedDate, getMonthList, getExtendedMonthList } from 'utils/dates';\nimport { getExtraMonths, scrollToToday } from 'utils/ui';\nimport cardActions from 'utils/cardActions';\nimport { placeholder } from 'utils/subscribtion';\nimport { moveCard } from 'state/actions/cards';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport MonthsList from 'components/Deck/MonthsList';\nimport CardsDeck from 'components/Deck/CardsDeck';\nimport DeckLines from 'components/Deck/DeckLines';\nimport { setUIOffset } from 'state/actions/ui';\n\nimport C from 'constants/index';\n\nimport { DeckBlock, DeckInner, TodayScroll } from 'styles/DateTable';\n\nimport { MoveCard } from 'types/actions';\nimport { State } from 'types/state';\nimport { DateTypeWithWeek } from 'types/index';\n\nconst Deck = (): JSX.Element | null => {\n  const dispatch = useDispatch();\n  const listRef = useRef<HTMLElement>(null);\n  const todayRef = useRef<HTMLElement>(null);\n  const scroll = useRef({\n    days: 0,\n    left: 0,\n    fire: false,\n    ready: true,\n    position: 0,\n  });\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [months, setMonths] = useState([] as DateTypeWithWeek[]);\n  const hasMonths = useMemo(() => months.length > 0, [months.length]);\n  const fromOffset = useSelector((state: State) => state.ui.fromOffset);\n  const untilOffset = useSelector((state: State) => state.ui.untilOffset);\n  const lastOffset = useRef({ fromOffset, untilOffset });\n  const updateMonths = (newMonths: DateTypeWithWeek[]): void => {\n    setMonths(newMonths);\n    placeholder.setMonths(newMonths);\n  };\n  useLayoutEffect(() => {\n    // This effect makes the initial scroll to `today`\n    if (scroll.current.ready && listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current);\n      scroll.current.position = listRef.current.scrollLeft;\n      scroll.current.ready = false;\n    }\n  }, [hasMonths]);\n  useLayoutEffect(() => {\n    // This effect moves deck's scroll while user scrolls and when new months are added in front of existing dates\n    if (scroll.current.fire && listRef.current) {\n      listRef.current.scrollLeft = scroll.current.left;\n      scroll.current.fire = false;\n    }\n  }, [fromOffset, untilOffset]);\n  useMemo(() => {\n    // This function tracks offsets updates and adds new months before or after existing set\n    if (fromOffset && untilOffset) {\n      if (months.length === 0) {\n        // First time\n        updateMonths(getMonthList(fromOffset, untilOffset));\n      } else {\n        if (lastOffset.current.fromOffset !== fromOffset) {\n          updateMonths(getExtendedMonthList(months, 0, fromOffset));\n        } else if (lastOffset.current.untilOffset !== untilOffset) {\n          updateMonths(getExtendedMonthList(months, months.length - 1, untilOffset));\n        }\n      }\n    }\n    lastOffset.current = {\n      fromOffset,\n      untilOffset,\n    };\n  }, [months, fromOffset, untilOffset]);\n\n  const { pressInZone, moveInZone, releaseInZone, enterZone, leaveZone } = useMemo(() => {\n    const remoteDispatch = (cardDetails: MoveCard['payload']) => dispatch(moveCard(cardDetails));\n    return cardActions(remoteDispatch);\n  }, [dispatch]);\n\n  const showScrollButton = () => {\n    const list = listRef.current;\n    const scrollCurrent = scroll.current;\n    if (list && scrollCurrent) {\n      const todayElement = todayRef.current;\n      if (todayElement) {\n        const todayLeft = todayElement.getBoundingClientRect().left;\n        if (todayLeft < 0) {\n          setScrollPosition(-1);\n        } else if (todayLeft > list.offsetWidth) {\n          setScrollPosition(1);\n        } else {\n          setScrollPosition(0);\n        }\n      }\n      scrollCurrent.position = list.scrollLeft;\n    }\n  };\n\n  const renderPastOrFuture = (direction: number) => {\n    if (direction < 0 && listRef.current) {\n      const firstMonth = months[0];\n      const newDate = getExpandedDate(firstMonth.year, firstMonth.month, -getExtraMonths());\n      dispatch(\n        setUIOffset({\n          fromOffset: newDate,\n          untilOffset: untilOffset,\n        })\n      );\n      const extraLeftOffset = getDaysDiffBetweenMonths(newDate, fromOffset) * C.DAY.WIDTH;\n      scroll.current.left = listRef.current.scrollLeft + extraLeftOffset;\n      scroll.current.fire = true;\n    } else {\n      const lastMonth = months[months.length - 1];\n      const newDate = getExpandedDate(lastMonth.year, lastMonth.month, getExtraMonths());\n      dispatch(\n        setUIOffset({\n          fromOffset: fromOffset,\n          untilOffset: newDate,\n        })\n      );\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    if (listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current, true);\n      e.currentTarget.blur();\n    }\n  };\n\n  const scollDeck = (e: React.UIEvent<HTMLElement>) => {\n    const deck = e.currentTarget as HTMLElement;\n    const days = Math.floor(deck.scrollLeft / C.DAY.WIDTH);\n    if (scroll.current.days !== days) {\n      scroll.current.days = days;\n      showScrollButton();\n      // TODO: If window width stays the same daysVisible & daysTotal can be cached\n      const daysVisible = Math.ceil(deck.offsetWidth / C.DAY.WIDTH);\n      const daysTotal = Math.ceil(deck.scrollWidth / C.DAY.WIDTH);\n      if (days <= daysVisible) {\n        renderPastOrFuture(-1);\n      } else if (days >= daysTotal - daysVisible * 2) {\n        renderPastOrFuture(1);\n      }\n    }\n  };\n\n  const [lineCount, setLines] = useState(0);\n  const Months = useMemo(\n    () => (\n      <MonthsList todayRef={todayRef} months={months}>\n        <CardsDeck setLines={setLines} />\n      </MonthsList>\n    ),\n    [months, months.length, todayRef]\n  );\n\n  if (!months.length) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <TodayScroll scrollPosition={scrollPosition} tabIndex={scrollPosition ? undefined : -1} onClick={handleClick}>\n        Today\n      </TodayScroll>\n      <DeckBlock\n        ref={listRef}\n        onScroll={scollDeck}\n        onMouseEnter={enterZone}\n        onMouseOut={leaveZone}\n        onMouseLeave={leaveZone}\n      >\n        <DeckLines lineCount={lineCount} />\n        <DeckInner onMouseDown={pressInZone} onMouseMove={moveInZone} onMouseUp={releaseInZone}>\n          {Months}\n          <Placeholder />\n        </DeckInner>\n      </DeckBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Deck);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectionCancel } from 'state/actions/selection';\nimport { placeholder } from 'utils/subscribtion';\nimport Deck from 'components/Deck/Deck';\n\nimport { State } from 'types/state';\n\nconst Roadmap = (): JSX.Element | null => {\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const cancelAction = (e: KeyboardEvent): void => {\n      if (e.key.toLocaleLowerCase() === 'escape') {\n        e.preventDefault();\n        dispatch(selectionCancel());\n        placeholder.update({\n          started: false,\n        });\n      }\n    };\n    document.addEventListener('keydown', cancelAction);\n    return () => {\n      document.removeEventListener('keydown', cancelAction);\n    };\n  }, [dispatch]);\n\n  return currentRoadmapID ? <Deck /> : null;\n};\n\nexport default React.memo(Roadmap);\n","import { keyframes } from 'styled-components';\n\nexport const shake = keyframes`\n  8%, 41% {\n    transform: translateX(-10px);\n  }\n  25%, 58% {\n    transform: translateX(10px);\n  }\n  75% {\n    transform: translateX(-5px);\n  }\n  92% {\n    transform: translateX(5px);\n  }\n  0%, 100% {\n    transform: translateX(0);\n  }\n`;\n\nexport const rotate = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const move = keyframes`\n  from { transform: translateX(-52%) }\n  to { transform: translateX(150%) }\n`;\n","import styled from 'styled-components';\nimport { shake } from 'styles/Keyframes';\n\nexport const EditScreen = styled.section`\n  background: rgba(0, 0, 0, 0.2);\n  position: absolute;\n  overflow-y: scroll;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 100;\n`;\n\nexport const EditForm = styled.form`\n  background: #f7f8f9;\n  width: 600px;\n  max-width: 90%;\n  box-sizing: border-box;\n  margin: 15vh auto;\n  padding: 17px 20px 13px;\n  box-shadow: 0 0 0 0 #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n  transition: box-shadow 0.3s;\n  user-select: none;\n  &.invalid {\n    animation: ${shake} 0.3s linear;\n    box-shadow: 0 0 0 1px #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const EditExtra = styled.div`\n  background: #e7e7ec;\n  margin: 12px -20px -13px;\n  padding: 19px;\n  font-size: 12px;\n  border-radius: 0 0 5px 5px;\n  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Fieldset = styled.fieldset`\n  margin: 0;\n  padding: 0;\n  border: none;\n  display: inline-flex;\n  flex-wrap: wrap;\n  & > label,\n  & > span,\n  & > input {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 14px;\n  line-height: 27px;\n  background: #d9d9de;\n  border: 1px solid #999;\n  margin: 0 -5px 0 0;\n  padding: 0 13px 0 9px;\n  border-radius: 3px;\n  z-index: 3;\n`;\n\nexport const LabelWarp = styled(FormLabel).attrs({\n  as: 'span',\n})`\n  padding-left: ${({ join }: { join?: boolean }) => join && '13px'};\n  & + input[type='text'] {\n    width: 25px;\n    text-align: right;\n  }\n`;\n\nexport const FormInput = styled.input.attrs({\n  type: 'text',\n})`\n  background: #efeff3;\n  border: 1px solid #999;\n  border-radius: 3px;\n  margin: 0 5px 0 0;\n  padding: 0 7px 0 8px;\n  width: 75px;\n  font-size: 14px;\n  line-height: 27px;\n  z-index: 5;\n  &:focus {\n    background: #f7f8f9;\n  }\n  &::last-child {\n    margin-right: 0;\n  }\n  &:invalid,\n  &:invalid:focus {\n    border-color: #d22121;\n    outline-color: #d22121;\n  }\n`;\n\nexport const FormInputWrap = styled(FormInput).attrs({\n  as: 'span',\n})`\n  width: auto;\n  margin-right: -5px;\n`;\n\nexport const RangeInput = styled.input.attrs({\n  type: 'range',\n})`\n  height: 5px;\n  display: block;\n  margin: 11px 0 0;\n  appearance: none;\n  background: #2196f3;\n  border-radius: 4px;\n  box-shadow: inset 0 0px 1px 0px #333;\n  &::-webkit-slider-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &::-moz-range-thumb,\n  &::-ms-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &:disabled {\n    background: #999;\n  }\n  & + input[type='text'] {\n    width: 24px;\n    text-align: right;\n  }\n`;\n\nexport const EditExtraFields = styled.div`\n  flex: 1;\n  line-height: 0;\n  & hr {\n    background: transparent;\n    border: none;\n    margin: 0 auto;\n    padding-right: 5px;\n  }\n  & svg {\n    width: 15px;\n    height: 15px;\n    margin: 3px;\n    opacity: 0;\n    z-index: 1;\n    transform: translate(-40px, 0) scale(0.1);\n    transition: transform ease-in 0.1s, opacity ease-in 0.1s;\n    &.active {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`;\n\nexport const EditExtraActions = styled.div`\n  flex: 0;\n`;\n\nexport const EditEntry = styled.textarea.attrs((props) => ({\n  placeholder: props.placeholder ? props.placeholder : 'Task name',\n  rows: 1,\n}))`\n  font: inherit;\n  width: 100%;\n  padding: 0;\n  border: none;\n  background: transparent;\n  overflow: hidden;\n  resize: none;\n  &:focus {\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\nconst hoverColor = ({ action }: { action?: string }) => (action === 'danger' ? '#d22121' : '#5e88ad');\n\nexport const Button = styled.button.attrs({\n  type: 'button',\n})`\n  border: none;\n  width: 100%;\n  margin: 0;\n  padding: 6px 10px 5px;\n  font-size: 12px;\n  z-index: 1;\n  position: relative;\n  color: #777;\n  background: #f7f8f9;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px #999;\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n    z-index: 2;\n    cursor: pointer;\n    color: ${hoverColor};\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px ${hoverColor};\n  }\n  svg {\n    width: 23px;\n    display: none;\n    fill: currentColor;\n    margin: -3px -7px -5px;\n  }\n  & + & {\n    margin-top: -1px;\n  }\n  &:disabled {\n    color: #ccc;\n    background: #eee;\n  }\n  &:first-child {\n    border-radius: 3px 3px 0 0;\n  }\n  &:last-child {\n    border-radius: 0 0 3px 3px;\n  }\n  @media (max-width: 768px) {\n    span {\n      display: none;\n    }\n    svg {\n      display: inline-block;\n    }\n  }\n`;\n","import React, { useState, ChangeEvent } from 'react';\n\nimport { LabelWarp, RangeInput, FormInput } from 'styles/EditScreen';\n\ntype Props = {\n  id: string;\n  min: number;\n  max: number;\n  value: number;\n  disabled: boolean;\n  change?: (value: number) => void;\n  save: () => void;\n  title?: string;\n  join?: boolean;\n};\n\nconst Range = ({ id, min, max, value, disabled, change, save, title, join }: Props): JSX.Element => {\n  const [val, setVal] = useState(value);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const newVal = Math.min(Math.max(parseInt(e.target.value, 10), min), max);\n    if (!Number.isNaN(newVal)) {\n      setVal(newVal);\n      if (change) {\n        change(newVal);\n      }\n    }\n  };\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <label htmlFor={id}>{title}</label> : null}\n      <LabelWarp join={join}>\n        <RangeInput id={id} min={min} max={max} disabled={disabled} value={val} onChange={handleChange} />\n      </LabelWarp>\n      <FormInput value={val} onChange={handleChange} onKeyDown={handleKeyDown} disabled={disabled} />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Range);\n","import styled from 'styled-components';\n\nexport const SwitchBlock = styled.label`\n  position: relative;\n  display: block;\n  width: 38px;\n  height: 21px;\n  margin: 3px 0;\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n    &:checked + span {\n      background-color: #2196f3;\n    }\n    &:focus + span {\n      box-shadow: 0 0 0 1px #efeff3, 0 0 0 3px #025fcc, 0 0 0 4px #fff;\n    }\n    &:checked + span:before {\n      transform: translateX(17px);\n    }\n  }\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #999;\n    transition: 0.1s;\n    border-radius: 12px;\n    &:before {\n      position: absolute;\n      content: '';\n      height: 17px;\n      width: 17px;\n      left: 2px;\n      bottom: 2px;\n      background-color: white;\n      transition: 0.1s;\n      border-radius: 50%;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { FormInputWrap, FormLabel } from 'styles/EditScreen';\nimport { SwitchBlock } from 'styles/Form/Switch';\n\ntype Props = { id: string; value: boolean; toggle: (value: boolean) => void; title?: string };\n\nconst Switch = ({ id, value, toggle, title }: Props): JSX.Element => {\n  const handleToggle = () => toggle(!value);\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <FormLabel htmlFor={id}>{title}</FormLabel> : null}\n      <FormInputWrap>\n        <SwitchBlock>\n          <input type=\"checkbox\" id={id} defaultChecked={value} onChange={handleToggle} />\n          <span />\n        </SwitchBlock>\n      </FormInputWrap>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Switch);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { Fieldset, FormLabel, FormInput } from 'styles/EditScreen';\n\ntype DateInputProps = {\n  date?: string;\n  setDate: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  save: () => void;\n  title: string;\n  setFocus?: boolean;\n};\n\nconst DateInput = ({ date, setDate, save, title, setFocus }: DateInputProps): JSX.Element | null => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, []);\n\n  const name = title.toLowerCase();\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n\n  return date === undefined ? null : (\n    <Fieldset>\n      <FormLabel htmlFor={name}>{title}</FormLabel>\n      <FormInput\n        id={name}\n        ref={setFocus ? inputRef : undefined}\n        value={date}\n        onChange={setDate}\n        onKeyDown={handleKeyDown}\n        required\n        pattern=\"([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))\"\n      />\n    </Fieldset>\n  );\n};\n\nexport default React.memo(DateInput);\n","import styled from 'styled-components';\n\nexport const EditorWrap = styled.div`\n  line-height: normal;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 6px 7px 6px 6px;\n  margin-right: 19px;\n  .public-DraftEditor-content span[style*='font-family: monospace'] {\n    color: #670000;\n    padding: 0 2px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n  .public-DraftStyleDefault-pre {\n    padding: 3px 4px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    white-space: pre;\n    font-family: monospace;\n    pre {\n      margin: 0;\n    }\n  }\n\n  .DraftEditor-editorContainer,\n  .DraftEditor-root,\n  .public-DraftEditor-content {\n    height: inherit;\n    text-align: initial;\n  }\n  .public-DraftEditor-content[contenteditable='true'] {\n    -webkit-user-modify: read-write-plaintext-only;\n  }\n  .DraftEditor-root {\n    position: relative;\n  }\n  .DraftEditor-editorContainer {\n    background-color: rgba(255, 255, 255, 0);\n    border-left: 0.1px solid transparent;\n    position: relative;\n    z-index: 1;\n  }\n  .public-DraftEditor-block {\n    position: relative;\n  }\n  .DraftEditor-alignLeft .public-DraftStyleDefault-block {\n    text-align: left;\n  }\n  .DraftEditor-alignLeft .public-DraftEditorPlaceholder-root {\n    left: 0;\n    text-align: left;\n  }\n  .DraftEditor-alignCenter .public-DraftStyleDefault-block {\n    text-align: center;\n  }\n  .DraftEditor-alignCenter .public-DraftEditorPlaceholder-root {\n    margin: 0 auto;\n    text-align: center;\n    width: 100%;\n  }\n  .DraftEditor-alignRight .public-DraftStyleDefault-block {\n    text-align: right;\n  }\n  .DraftEditor-alignRight .public-DraftEditorPlaceholder-root {\n    right: 0;\n    text-align: right;\n  }\n  .public-DraftEditorPlaceholder-root {\n    color: #9197a3;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n  }\n  .public-DraftEditorPlaceholder-hasFocus {\n    color: #bdc1c9;\n  }\n  .DraftEditorPlaceholder-hidden {\n    display: none;\n  }\n  .public-DraftStyleDefault-block {\n    position: relative;\n    white-space: pre-wrap;\n    line-height: 1.2em;\n  }\n  .public-DraftStyleDefault-ltr {\n    direction: ltr;\n    text-align: left;\n  }\n  .public-DraftStyleDefault-rtl {\n    direction: rtl;\n    text-align: right;\n  }\n  .public-DraftStyleDefault-listLTR {\n    direction: ltr;\n  }\n  .public-DraftStyleDefault-listRTL {\n    direction: rtl;\n  }\n  .public-DraftStyleDefault-ol,\n  .public-DraftStyleDefault-ul {\n    margin: 16px 0;\n    padding: 0;\n  }\n  .public-DraftStyleDefault-depth0.public-DraftStyleDefault-listLTR {\n    margin-left: 2.5em;\n  }\n  .public-DraftStyleDefault-depth0.public-DraftStyleDefault-listRTL {\n    margin-right: 2.5em;\n  }\n  .public-DraftStyleDefault-depth1.public-DraftStyleDefault-listLTR {\n    margin-left: 5em;\n  }\n  .public-DraftStyleDefault-depth1.public-DraftStyleDefault-listRTL {\n    margin-right: 5em;\n  }\n  .public-DraftStyleDefault-depth2.public-DraftStyleDefault-listLTR {\n    margin-left: 7.5em;\n  }\n  .public-DraftStyleDefault-depth2.public-DraftStyleDefault-listRTL {\n    margin-right: 7.5em;\n  }\n  .public-DraftStyleDefault-depth3.public-DraftStyleDefault-listLTR {\n    margin-left: 10em;\n  }\n  .public-DraftStyleDefault-depth3.public-DraftStyleDefault-listRTL {\n    margin-right: 10em;\n  }\n  .public-DraftStyleDefault-depth4.public-DraftStyleDefault-listLTR {\n    margin-left: 12.5em;\n  }\n  .public-DraftStyleDefault-depth4.public-DraftStyleDefault-listRTL {\n    margin-right: 12.5em;\n  }\n  .public-DraftStyleDefault-unorderedListItem {\n    list-style-type: square;\n    position: relative;\n  }\n  .public-DraftStyleDefault-unorderedListItem.public-DraftStyleDefault-depth0 {\n    list-style-type: disc;\n  }\n  .public-DraftStyleDefault-unorderedListItem.public-DraftStyleDefault-depth1 {\n    list-style-type: circle;\n  }\n  .public-DraftStyleDefault-orderedListItem {\n    list-style-type: none;\n    position: relative;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-listLTR:before {\n    left: -2.5em;\n    position: absolute;\n    text-align: right;\n    width: 2em;\n    line-height: 1.2em;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-listRTL:before {\n    position: absolute;\n    right: -2.5em;\n    text-align: left;\n    width: 2em;\n    line-height: 1.2em;\n  }\n  .public-DraftStyleDefault-orderedListItem:before {\n    content: counter(ol0) '. ';\n    counter-increment: ol0;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth1:before {\n    content: counter(ol1, lower-alpha) '. ';\n    counter-increment: ol1;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth2:before {\n    content: counter(ol2, lower-roman) '. ';\n    counter-increment: ol2;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth3:before {\n    content: counter(ol3) '. ';\n    counter-increment: ol3;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth4:before {\n    content: counter(ol4, lower-alpha) '. ';\n    counter-increment: ol4;\n  }\n  .public-DraftStyleDefault-depth0.public-DraftStyleDefault-reset {\n    counter-reset: ol0;\n  }\n  .public-DraftStyleDefault-depth1.public-DraftStyleDefault-reset {\n    counter-reset: ol1;\n  }\n  .public-DraftStyleDefault-depth2.public-DraftStyleDefault-reset {\n    counter-reset: ol2;\n  }\n  .public-DraftStyleDefault-depth3.public-DraftStyleDefault-reset {\n    counter-reset: ol3;\n  }\n  .public-DraftStyleDefault-depth4.public-DraftStyleDefault-reset {\n    counter-reset: ol4;\n  }\n`;\n","import { EditLong } from 'types/actions';\n\nexport const editLong = (props: EditLong['payload']): EditLong => ({\n  type: 'EDIT_LONG',\n  payload: {\n    ...props,\n  },\n});\n","import debounce from 'lodash/debounce';\nimport { convertToRaw, convertFromRaw, ContentState } from 'draft-js';\n\nimport { RawDraftContentState, RawDraftState, RawDraftBlock } from 'types/editor';\n\nimport C from 'constants/index';\n\nexport const debouncedSave = debounce((func: () => void) => func(), C.TIME.AUTOSAVE_MS);\n\nexport const cleanRaw = (raw: RawDraftContentState): RawDraftState => ({\n  ...raw,\n  blocks: raw.blocks.map((block) => {\n    const newBlock = Object.assign({}, block) as RawDraftBlock;\n    if (block.type === 'unstyled') {\n      delete newBlock.type;\n    }\n    if (block.depth === 0) {\n      delete newBlock.depth;\n    }\n    if (block.inlineStyleRanges.length === 0) {\n      delete newBlock.inlineStyleRanges;\n    }\n    if (block.entityRanges.length === 0) {\n      delete newBlock.entityRanges;\n    }\n    if (block.data && Object.keys(block.data).length === 0) {\n      delete newBlock.data;\n    }\n    return newBlock;\n  }),\n});\n\nexport const convertToJSON = (context: ContentState) => JSON.stringify(cleanRaw(convertToRaw(context)));\n\nexport const convertFromJSON = (initialRaw: string) => convertFromRaw(JSON.parse(initialRaw));\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Editor, EditorState, RichUtils, getDefaultKeyBinding, KeyBindingUtil, DraftHandleValue } from 'draft-js';\n\nimport { EditorWrap } from 'styles/Editor';\nimport { editLong } from 'state/actions/longs';\nimport { State } from 'types/state';\nimport { debouncedSave, convertToJSON, convertFromJSON } from 'utils/editor';\n\nconst styleMap = {\n  STRIKETHROUGH: {\n    textDecoration: 'line-through',\n  },\n  HIGHLIGHT: {\n    backgroundColor: '#edff00',\n  },\n};\n\nconst LongEditor = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const cardID = useSelector((state: State) => state.selection.id);\n  const rawState = useSelector((state: State) => state.longs[cardID]);\n  const [editorState, setEditorState] = useState(() =>\n    rawState ? EditorState.createWithContent(convertFromJSON(rawState)) : EditorState.createEmpty()\n  );\n  const dispatchEdit = (long: string) => dispatch(editLong({ cardID, long }));\n  const saveLong = (state: EditorState) => {\n    const context = state.getCurrentContent();\n    const plainText = context.getPlainText();\n    if (plainText.trim().length) {\n      const newRawState = convertToJSON(context);\n      if (rawState !== newRawState) {\n        dispatchEdit(newRawState);\n      }\n    } else if (rawState !== undefined) {\n      dispatchEdit('');\n    }\n  };\n\n  const handleTab = (e: React.KeyboardEvent) => changeState(RichUtils.onTab(e, editorState, 4));\n\n  const myKeyBindingFn = (e: React.KeyboardEvent): string | null => {\n    if (KeyBindingUtil.hasCommandModifier(e)) {\n      switch (e.code) {\n        case 'KeyB':\n          return 'bold';\n        case 'KeyM':\n          return 'code';\n        case 'KeyI':\n          return 'italic';\n        case 'KeyH':\n          return 'highlight';\n        case 'KeyU':\n          return 'underline';\n        case 'KeyS':\n          return 'strikethrough';\n        case 'BracketLeft':\n          return 'indent-minus';\n        case 'BracketRight':\n          return 'indent-plus';\n      }\n      if (e.shiftKey) {\n        switch (e.code) {\n          case 'KeyX':\n            return 'strikethrough';\n        }\n      }\n    }\n    return getDefaultKeyBinding(e);\n  };\n  const handleKeyCommand = (command: string): DraftHandleValue => {\n    switch (command) {\n      case 'bold':\n      case 'code':\n      case 'italic':\n      case 'strikethrough':\n      case 'underline':\n      case 'highlight':\n        const state =\n          RichUtils.handleKeyCommand(editorState, command) ||\n          RichUtils.toggleInlineStyle(editorState, command.toUpperCase());\n        if (state) {\n          changeState(state);\n          return 'handled';\n        }\n        return 'not-handled';\n      case 'indent-minus':\n      case 'indent-plus':\n        const reverse = command.split('-')[1] === 'plus' ? false : true;\n        const event = { shiftKey: reverse, preventDefault: () => undefined } as React.KeyboardEvent;\n        handleTab(event);\n        return 'handled';\n      default:\n        return 'not-handled';\n    }\n  };\n\n  const changeState = (state: EditorState) => {\n    setEditorState(state);\n    if (state.getCurrentContent() !== editorState.getCurrentContent()) {\n      debouncedSave(() => saveLong(state));\n    }\n  };\n\n  // Firing debounce with latest changes on blur\n  const saveState = () => debouncedSave.flush();\n\n  // Canceling debounce on componentDidUnmount\n  useEffect(() => () => debouncedSave.cancel(), []);\n\n  return (\n    <EditorWrap>\n      <Editor\n        editorState={editorState}\n        onChange={changeState}\n        onBlur={saveState}\n        onTab={handleTab}\n        placeholder=\"Add more context...\"\n        handleKeyCommand={handleKeyCommand}\n        keyBindingFn={myKeyBindingFn}\n        customStyleMap={styleMap}\n      />\n    </EditorWrap>\n  );\n};\n\nexport default React.memo(LongEditor);\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport Save from '@material-ui/icons/Save';\nimport Revert from '@material-ui/icons/NotInterested';\nimport Delete from '@material-ui/icons/DeleteForever';\n\nimport CardStatus from 'assets/CardStatus';\nimport { getCardStatus } from 'utils/ui';\nimport { getDataString } from 'utils/dates';\n\nimport { Button } from 'styles/Form/Button';\nimport { EditExtra, EditExtraActions, EditExtraFields, Fieldset } from 'styles/EditScreen';\n\nimport Range from './Range';\nimport Switch from './Switch';\nimport DateInput from './DateInput';\nimport Editor from './Editor';\n\nimport { EditSelection, State } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\ntype EditFieldsProps = {\n  selection: EditSelection;\n  setSelection: React.Dispatch<React.SetStateAction<EditSelection>>;\n  cardDispatch: CardDispatch;\n  setFocus: boolean;\n};\n\nconst EditFields = ({ selection, setSelection, cardDispatch, setFocus }: EditFieldsProps): JSX.Element | null => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const todayString = useMemo(() => getDataString(todayTimestamp), [todayTimestamp]);\n\n  const progress = selection.progress || 0;\n  const isProgressOn = Number.isFinite(selection.progress);\n  const setProgress = (value: number) =>\n    setSelection({\n      ...selection,\n      progress: value,\n    });\n  const setProgressOn = (value: boolean) => {\n    if (value) {\n      selection.progress = progress;\n    } else {\n      delete selection.progress;\n    }\n    setSelection({ ...selection });\n  };\n  const setDate = (type: 'from' | 'until') => (e: React.ChangeEvent<HTMLInputElement>) =>\n    setSelection({\n      ...selection,\n      [type]: e.target.value,\n    });\n\n  const setFrom = setDate('from');\n  const setUntil = setDate('until');\n\n  const { from, until } = selection;\n\n  return (\n    <EditExtra>\n      <EditExtraFields>\n        <DateInput date={from} setDate={setFrom} save={cardDispatch.save} title=\"From\" setFocus={setFocus} />\n        <DateInput date={until} setDate={setUntil} save={cardDispatch.save} title=\"Until\" />\n\n        <Fieldset>\n          <Switch id=\"showProgress\" value={isProgressOn} toggle={setProgressOn} title=\"Completion\" />\n          <Range\n            id=\"progress\"\n            min={0}\n            max={100}\n            disabled={!isProgressOn}\n            value={progress}\n            change={setProgress}\n            save={cardDispatch.save}\n            join={true}\n          />\n          {from && until && typeof progress === 'number' && (\n            <CardStatus\n              type={getCardStatus(from, until, todayString, progress)}\n              className={isProgressOn ? 'active' : undefined}\n            />\n          )}\n        </Fieldset>\n        <Editor />\n      </EditExtraFields>\n      <EditExtraActions>\n        <Button onClick={cardDispatch.save} title=\"Save changes\" action={'primary'}>\n          <Save />\n          <span>Save</span>\n        </Button>\n        <Button onClick={cardDispatch.cancel} title=\"Revert changes\">\n          <Revert />\n          <span>Revert</span>\n        </Button>\n        <Button onClick={cardDispatch.delete} title=\"Delete card\" action={'danger'}>\n          <Delete />\n          <span>Delete</span>\n        </Button>\n      </EditExtraActions>\n    </EditExtra>\n  );\n};\n\nexport default React.memo(EditFields);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditEntry } from 'styles/EditScreen';\n\nimport { EditSelection } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\nconst EditTitle = ({\n  selection,\n  setSelection,\n  cardDispatch,\n  enforceExtraFields,\n}: {\n  selection: EditSelection;\n  setSelection: React.Dispatch<React.SetStateAction<EditSelection>>;\n  cardDispatch: CardDispatch;\n  enforceExtraFields: React.Dispatch<React.SetStateAction<boolean>> | undefined;\n}): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, [selection.id]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    autoscaleTextarea(e.target as HTMLTextAreaElement);\n    setSelection({\n      ...selection,\n      text: e.target.value,\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      cardDispatch.save();\n    } else if (e.key.toLocaleLowerCase() === 'tab') {\n      if (enforceExtraFields) {\n        e.preventDefault();\n        enforceExtraFields(true);\n      }\n    }\n  };\n\n  return (\n    <EditEntry\n      ref={inputRef}\n      autoFocus={true}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      value={selection.text}\n    />\n  );\n};\n\nexport default React.memo(EditTitle);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // TODO: shallowEqual\n\nimport { editCard } from 'state/actions/cards';\nimport { selectionCancel, selectionDelete } from 'state/actions/selection';\nimport { hasCardChanged, isCardValid } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm } from 'styles/EditScreen';\n\nimport EditFields from './EditFields';\nimport EditTitle from './EditTitle';\n\nimport { EditSelection, State } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\nconst DefaultState = {\n  id: '',\n  text: '',\n  line: 0,\n  from: '',\n  until: '',\n} as EditSelection;\n\nconst EditScreen = (): JSX.Element | null => {\n  const dispatch = useDispatch();\n  const selection = useSelector((state: State) => state.selection);\n  const selectedElement = useSelector((state: State) => (selection.isNew ? undefined : state.cards[selection.id]));\n  const [isExtraFieldsEnforced, enforceExtraFields] = useState(selectedElement !== undefined);\n  const [newSelection, setNewSelection] = useState(DefaultState);\n  const [isInvalid, setInvalid] = useState(false);\n  useEffect(() => {\n    if (isInvalid) {\n      setTimeout(() => setInvalid(false), 500);\n    }\n  }, [isInvalid]);\n  useEffect(() => {\n    if (selection.id === '') {\n      enforceExtraFields(selectedElement !== undefined);\n    } else {\n      setNewSelection({\n        id: (selectedElement || selection).id,\n        text: (selectedElement || selection).text,\n        line: (selectedElement || selection).line,\n        from: (selectedElement || selection).from,\n        until: (selectedElement || selection).until,\n        progress: (selectedElement || selection).progress,\n      });\n    }\n    return () => {\n      setNewSelection(DefaultState);\n    };\n  }, [selection, selectedElement]);\n\n  if (selection.type === '' || newSelection.id === '') {\n    return null;\n  }\n\n  const cardDispatch: CardDispatch = {\n    save: () => {\n      if (isCardValid(newSelection)) {\n        return dispatch(hasCardChanged(newSelection, selectedElement) ? editCard(newSelection) : selectionCancel());\n      } else {\n        // TODO: Show user incorrect fields\n        setInvalid(true);\n        return;\n      }\n    },\n    cancel: () => dispatch(selectionCancel()),\n    delete: () => {\n      dispatch(\n        selectedElement\n          ? selectionDelete({\n              id: newSelection.id,\n            })\n          : selectionCancel()\n      );\n    },\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      cardDispatch.cancel();\n    }\n  };\n\n  const hasExtraFields = isExtraFieldsEnforced || Boolean(selectedElement);\n  return (\n    <Screen onClick={handleClick} data-form=\"edit\">\n      <EditForm className={isInvalid ? 'invalid' : undefined}>\n        <EditTitle\n          selection={newSelection}\n          setSelection={setNewSelection}\n          cardDispatch={cardDispatch}\n          enforceExtraFields={hasExtraFields ? undefined : enforceExtraFields}\n        />\n        {hasExtraFields ? (\n          <EditFields\n            selection={newSelection}\n            setSelection={setNewSelection}\n            cardDispatch={cardDispatch}\n            setFocus={isExtraFieldsEnforced}\n          />\n        ) : null}\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(EditScreen);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMatch, useNavigate, useLocation, PathMatch } from 'react-router-dom';\n\nimport Roadmap from 'components/Roadmap/Roadmap';\nimport EditScreen from 'components/EditScreen/EditScreen';\nimport { setCurrentRoadmap, removeCurrentRoadmap } from 'state/actions/user';\nimport C from 'constants/index';\n\nimport { State } from 'types/state';\n\nconst RoadmapScreen = (): JSX.Element => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const routeID = (useMatch(`${C.URL.PLAN}:id`) as PathMatch).params.id || '';\n  const roadmapsSet = useSelector((state: State) => state.user.roadmapsSet);\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const userRoadmapIDs = Object.keys(useSelector((state: State) => state.user.roadmaps));\n  useEffect(() => {\n    if (roadmapsSet) {\n      // TODO: Split two conditions if we want to create a roadmap for users without it\n      if (userRoadmapIDs.length && userRoadmapIDs.includes(routeID)) {\n        if (currentRoadmapID !== routeID) {\n          // We need to mark a roadmap as loaded to clean the state when navigating away\n          dispatch(setCurrentRoadmap(routeID));\n        }\n      } else {\n        // Account's roadmap list is loaded, but it's empty or doesn't contain the requested ID\n        navigate(C.URL.ROOT);\n      }\n    }\n    return () => {\n      // One of the roadmaps was loaded & rendered and we navigating away from this page\n      if (currentRoadmapID && location.pathname !== document.location.pathname) {\n        dispatch(removeCurrentRoadmap());\n      }\n    };\n  }, [navigate, location, dispatch, roadmapsSet, currentRoadmapID, routeID, userRoadmapIDs]);\n\n  return (\n    <React.Fragment>\n      <Roadmap />\n      <EditScreen />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(RoadmapScreen);\n","import styled, { css } from 'styled-components';\n\nimport color from 'constants/colors';\nimport { rotate } from 'styles/Keyframes';\n\nexport const SpinnerMixin = css`\n  width: ${({ size = 50 }: { size?: number }) => `${size}px`};\n  height: ${({ size = 50 }: { size?: number }) => (size ? `${size}px` : '50px')};\n  margin: auto;\n  border: ${({ size = 50 }: { size?: number }) => `${Math.ceil(size / 10)}px solid transparent`};\n  border-top-color: ${({ size }: { size?: number }) => (size ? color.logo.green : color.text.onDark.main)};\n  border-radius: 50%;\n  animation: ${rotate} 1s linear infinite;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const Spinner = styled.div`\n  ${SpinnerMixin}\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const RoadmapList = styled.section`\n  margin: 20px 5vw;\n  display: flex;\n  flex-flow: wrap;\n`;\n\nexport const RoadmapListTitle = styled.span`\n  display: inline-block;\n  width: 100%;\n  padding: 0 5px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nexport const RoadmapListBubble = styled.span`\n  color: #777;\n  padding: 1px 3px 1px 4px;\n  border-radius: 4px;\n  font-weight: 100;\n  letter-spacing: 0.05em;\n  font-size: 12px;\n  float: right;\n  border: 1px solid #999;\n  cursor: help;\n`;\n\nexport const RoadmapListItem = styled(Link)`\n  display: flex;\n  flex: 1 1 30%;\n  min-width: 250px;\n  margin: 10px 5px 0;\n  padding: 15px 17px 15px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  text-decoration: none;\n  flex-flow: column wrap;\n  background: hsl(190deg 100% 45%);\n  text-align: center;\n  color: #ffffff;\n  &:hover {\n    filter: brightness(1.3);\n  }\n  &:nth-of-type(5n - 4) {\n    background: hsl(240deg 100% 71%);\n  }\n  &:nth-of-type(5n - 3) {\n    background: hsl(9deg 100% 71%);\n  }\n  &:nth-of-type(5n - 2) {\n    background: hsl(280deg 100% 71%);\n  }\n  &:nth-of-type(5n - 1) {\n    background: hsl(0deg 60% 54%);\n  }\n  span {\n    width: 50px;\n    height: 50px;\n    display: block;\n    margin: 0 auto;\n    line-height: 50px;\n    text-align: center;\n    border-radius: 6px;\n    border: 1px solid #fff6;\n    &:empty {\n      display: none;\n    }\n  }\n  p {\n    flex-grow: 1;\n    font-size: 20px;\n    font-weight: 900;\n    line-height: 1.1em;\n    letter-spacing: -0.02em;\n  }\n  small {\n    font-size: 10px;\n    display: block;\n  }\n  time:not(:empty) + time:not(:empty) {\n    &:before {\n      content: '•';\n      padding: 0 5px;\n    }\n    &:after {\n      content: '';\n      display: block;\n      height: 12px;\n    }\n  }\n  footer {\n    margin: 0 auto;\n    font-size: 10px;\n    padding: 12px 3em 0;\n    border-top: 1px solid #fff6;\n  }\n`;\n\nexport const RoadmapListAdd = styled.button.attrs({\n  type: 'button',\n})`\n  width: 100%;\n  margin: 10px 5px 0;\n  padding: 10px;\n  border-radius: 4px;\n  appearance: none;\n  background: none;\n  border: 1px solid #aaa;\n  font-size: 16px;\n  color: #aaa;\n  cursor: pointer;\n  &:hover {\n    color: ${color.accent.active};\n    border-color: ${color.accent.active};\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getLocalString, getLocalDate } from 'utils/dates';\n\nimport C from 'constants/index';\n\nimport { Spinner } from 'styles/Common/Spinner';\nimport { RoadmapList, RoadmapListTitle, RoadmapListBubble, RoadmapListItem, RoadmapListAdd } from 'styles/Overview';\n\nimport { State } from 'types/state';\n\nconst limit = C.PLAN.FREE.LIMIT.ROADMAPS;\n\nconst Overview = ({ showInput }: { showInput: (value: boolean) => void }): JSX.Element | null => {\n  const userRoadmapsSet = useSelector((state: State) => state.user.roadmapsSet);\n  const userRoadmaps = useSelector((state: State) => state.user.roadmaps);\n  const metas = useSelector((state: State) => state.metas);\n  const user = useSelector((state: State) => state.user);\n  if (!user.fetchig && !user.id) {\n    return <Spinner />;\n  }\n  if (!userRoadmapsSet) {\n    return null;\n  }\n  const roadmapsIDs = Object.keys(userRoadmaps);\n  const createRoadmap = () => showInput(true);\n  return (\n    <RoadmapList>\n      <RoadmapListTitle>\n        Your plans\n        <RoadmapListBubble title={`${limit} plans are available in your account`}>\n          {roadmapsIDs.length}/{limit}\n        </RoadmapListBubble>\n      </RoadmapListTitle>\n      {roadmapsIDs\n        .sort((a, b) => metas[a] && metas[b] && metas[a].createdAt - metas[b].createdAt)\n        .map(\n          (id, index) =>\n            index < limit && (\n              <RoadmapListItem key={id} to={`${C.URL.PLAN}${id}/`}>\n                <span title={`${metas[id].stats?.cards} cards`}>{metas[id].stats?.cards}</span>\n                <p>{metas[id].name}</p>\n                <small>\n                  <time>{getLocalDate(metas[id].stats?.from)}</time>\n                  <time>{getLocalDate(metas[id].stats?.until)}</time>\n                </small>\n                <footer>\n                  <small>Created: {getLocalString(metas[id].createdAt)}</small>\n                </footer>\n              </RoadmapListItem>\n            )\n        )}\n      {roadmapsIDs.length < limit && <RoadmapListAdd onClick={createRoadmap}>Create a new plan</RoadmapListAdd>}\n    </RoadmapList>\n  );\n};\n\nexport default React.memo(Overview);\n","import React, { useLayoutEffect, useRef } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm, EditEntry } from 'styles/EditScreen';\n\nconst handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n  autoscaleTextarea(e.target as HTMLTextAreaElement);\n};\n\ntype Props = {\n  isShowingInput: boolean;\n  showInput: (value: boolean) => void;\n  roadmapName: string;\n  setRoadmapName: (value: string) => void;\n};\n\nconst SingleLineInput = ({ isShowingInput, showInput, roadmapName, setRoadmapName }: Props): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, []);\n\n  if (!isShowingInput) {\n    return null;\n  }\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      showInput(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      const { value } = e.currentTarget;\n      if (value !== '' && roadmapName !== value) {\n        setRoadmapName(value);\n      }\n      showInput(false);\n    } else if (e.key.toLocaleLowerCase() === 'escape') {\n      showInput(false);\n    }\n  };\n\n  return (\n    <Screen onClick={handleClick}>\n      <EditForm>\n        <EditEntry\n          ref={inputRef}\n          autoFocus={true}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Roadmap name\"\n        />\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(SingleLineInput);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Overview from 'components/Overview/Overview';\nimport SingleLineInput from 'components/Overview/SingleLineInput';\nimport { addAccountRoadmap } from 'state/actions/user';\n\nconst OverviewScreen = (): JSX.Element => {\n  const [isShowingInput, showInput] = useState(false);\n  const [roadmapName, setRoadmapName] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (roadmapName) {\n      dispatch(addAccountRoadmap(roadmapName));\n    }\n  }, [dispatch, roadmapName]);\n  return (\n    <React.Fragment>\n      <Overview showInput={showInput} />\n      <SingleLineInput\n        isShowingInput={isShowingInput}\n        showInput={showInput}\n        roadmapName={roadmapName}\n        setRoadmapName={setRoadmapName}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(OverviewScreen);\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport Roadmap from 'components/Screens/Roadmap';\nimport Overview from 'components/Screens/Overview';\nimport C from 'constants/index';\n\nconst RoutesComponent = (): JSX.Element => (\n  <Routes>\n    <Route path={`${C.URL.PLAN}:id`} element={<Roadmap />} />\n    <Route path={`${C.URL.ROOT}`} element={<Overview />} />\n  </Routes>\n);\n\nexport default React.memo(RoutesComponent);\n","import styled from 'styled-components';\nimport { SpinnerMixin } from 'styles/Common/Spinner';\n\nexport const MainBlock = styled.main`\n  overflow: scroll;\n  position: relative;\n  height: calc(100vh - 45px);\n  &:empty:before {\n    content: '';\n    ${SpinnerMixin}\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport Header from 'components/Header/Header';\nimport Routes from 'components/Core/Routes';\nimport { getMilisecondsUntilTomorrow, getTodayTimestamp } from 'utils/dates';\nimport { setTodayTimestamp } from 'state/actions/ui';\nimport C from 'constants/index';\n\nimport { MainBlock } from 'styles/Main';\nimport { State } from 'types/state';\nimport { login } from 'data/auth';\n\nlet timeout: number;\n\nconst Core = (): JSX.Element => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const manageTimer = () => {\n      if (document.hidden) {\n        window.clearTimeout(timeout);\n      } else {\n        const newTimestamp = getTodayTimestamp();\n        if (todayTimestamp !== newTimestamp) {\n          dispatch(setTodayTimestamp(newTimestamp));\n        } else {\n          timeout = window.setTimeout(() => {\n            dispatch(setTodayTimestamp(getTodayTimestamp()));\n          }, getMilisecondsUntilTomorrow());\n        }\n      }\n    };\n    manageTimer();\n    document.addEventListener('visibilitychange', manageTimer);\n    return () => {\n      document.removeEventListener('visibilitychange', manageTimer);\n    };\n  }, [dispatch, todayTimestamp]);\n\n  const { fetchig, id: userID } = useSelector((state: State) => state.user);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const isLoginPage = location.pathname === C.URL.LOGIN;\n  const isLoggedIn = !fetchig && userID !== '';\n\n  useEffect(() => {\n    if (isLoginPage) {\n      if (!fetchig && userID === '') {\n        // Not yet logged in\n        login();\n      } else if (!fetchig && userID !== '') {\n        // Logged In Successfuly\n        navigate(C.URL.ROOT);\n      }\n    } else if (!fetchig && userID === '') {\n      // Logged out\n      window.location.assign(C.URL.INDEX);\n    }\n  }, [navigate, isLoginPage, fetchig, userID]);\n\n  return (\n    <React.Fragment>\n      <Header isLoggedIn={isLoggedIn} />\n      <MainBlock>{fetchig ? null : <Routes />}</MainBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Core);\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/analytics';\n\nexport default (saveAnalyticsState: (analyticsState: firebase.analytics.Analytics) => void): void => {\n  firebase.initializeApp({\n    apiKey: 'AIzaSyDDHltlwPJGgqYbVyQ83VV6HMwT5TqNFg8',\n    authDomain: 'auth.rebelplans.com',\n    databaseURL: 'https://rebel-plans-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'rebel-plans',\n    messagingSenderId: '29847344796',\n    appId: '1:29847344796:web:2c601da3e5bfe5cd4a3f59',\n    measurementId: 'G-01YJX8T51M',\n  });\n  if (process.env.NODE_ENV && process.env.NODE_ENV !== 'development' && saveAnalyticsState) {\n    saveAnalyticsState(firebase.analytics());\n  }\n};\n","import { getTodayTimestamp } from 'utils/dates';\n\nimport { ElementType, State } from 'types/state';\n\nexport default {\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    photoURL: '',\n    fetchig: false,\n    roadmaps: {},\n    roadmapsSet: false,\n  },\n  cards: {},\n  lines: {\n    names: {},\n  },\n  longs: {},\n  milestones: {},\n  selection: {\n    id: '',\n    isNew: false,\n    line: 0,\n    type: ElementType.none,\n    text: '',\n    from: '',\n    until: '',\n  },\n  metas: {},\n  ui: {\n    currentRoadmapID: '',\n    todayTimestamp: getTodayTimestamp(),\n    cardsPosition: '',\n    fromOffset: '',\n    untilOffset: '',\n  },\n} as State;\n","import produce from 'immer';\n\nimport initialState from 'state/initialState';\nimport { getDataString, getFromUntil, getUIOffset } from 'utils/dates';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['ui'];\n\nexport default (state: StatePart = initialState.ui, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'SET_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: action.payload.currentRoadmapID,\n        };\n      });\n    case 'REMOVE_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: '',\n          cardsPosition: '',\n          fromOffset: '',\n          untilOffset: '',\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.ui;\n    case 'ROADMAP_DATA_FETCH':\n      // TODO: Ignore if the data fetch is actually data submit\n      if (state.cardsPosition !== '' && state.fromOffset !== '' && state.untilOffset !== '') {\n        return state;\n      }\n      return produce(state, (nextState: StatePart) => {\n        // TODO: store these values in DB and use them also in UI as default offset\n        let { from, until } = getFromUntil(action.payload.cards);\n        const todayString = getDataString(nextState.todayTimestamp);\n        const { fromOffset, untilOffset } = getUIOffset(from, until, todayString);\n        if (!from || !until) {\n          from = from || todayString;\n          until = until || todayString;\n        }\n        return {\n          ...nextState,\n          cardsPosition: `${from.slice(0, 7)}-01`,\n          fromOffset: fromOffset,\n          untilOffset: untilOffset,\n        };\n      });\n    case 'SET_UI_OFFSET':\n      return state.fromOffset === action.payload.fromOffset && state.untilOffset === action.payload.untilOffset\n        ? state\n        : produce(state, (nextState: StatePart) => {\n            return {\n              ...nextState,\n              ...action.payload,\n            };\n          });\n    case 'SET_TODAY_TIMESTAMP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          todayTimestamp: action.payload.timestamp,\n        };\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport cards from './cards';\nimport lines from './lines';\nimport longs from './longs';\nimport milestones from './milestones';\nimport selection from './selection';\nimport metas from './metas';\nimport user from './user';\nimport ui from './ui';\n\nexport default combineReducers({\n  cards,\n  lines,\n  longs,\n  milestones,\n  selection,\n  metas,\n  user,\n  ui,\n});\n","import produce from 'immer';\n\nimport { getNewDates } from 'utils/dates';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['cards'];\n\nexport default (state = initialState.cards, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'EDIT_CARD':\n      return produce(state, (nextState: StatePart) => {\n        if (!Number.isInteger(action.payload.progress)) {\n          delete action.payload.progress;\n        }\n        nextState[action.payload.id] = { ...action.payload };\n        return nextState;\n      });\n    case 'MOVE_CARD':\n      return produce(state, (nextState: StatePart) => {\n        const card = nextState[action.payload.id];\n        const [from, until] = getNewDates(action.payload, [card.from, card.until]);\n        const line = Math.max(card.line + action.payload.lineDiff, 0);\n        nextState[action.payload.id] = {\n          ...nextState[action.payload.id],\n          line,\n          from,\n          until,\n        };\n        return nextState;\n      });\n    case 'SELECTION_DELETE':\n      if (state[action.payload.id] !== undefined) {\n        return produce(state, (nextState: StatePart) => {\n          delete nextState[action.payload.id];\n          return nextState;\n        });\n      }\n      return state;\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.cards,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.cards;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['lines'];\n\nexport default (state = initialState.lines, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.lines,\n      };\n    case 'EDIT_LINE_NAME':\n      return produce(state, (nextState: StatePart) => {\n        if (action.payload.text.length) {\n          return {\n            ...nextState,\n            names: {\n              ...nextState.names,\n              [action.payload.line]: action.payload.text,\n            },\n          };\n        }\n        delete nextState.names[action.payload.line];\n        return nextState;\n      });\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.lines;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['longs'];\n\nexport default (state = initialState.longs, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.longs,\n      };\n    case 'EDIT_LONG':\n      return produce(state, (nextState: StatePart) => ({\n        ...nextState,\n        [action.payload.cardID]: action.payload.long,\n      }));\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.longs;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['milestones'];\n\nexport default (state = initialState.milestones, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'ADD_MILESTONE':\n      return produce(state, (nextState: StatePart) => {\n        nextState[action.payload.id] = { ...action.payload };\n        return nextState;\n      });\n    case 'DELETE_MILESTONE':\n      return produce(state, (nextState: StatePart) => {\n        Object.values(nextState).forEach((milestone) => {\n          if (milestone.date === action.payload.date) {\n            delete nextState[milestone.id];\n          }\n        });\n        return nextState;\n      });\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.milestones,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.milestones;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State, ElementType } from 'types/state';\n\ntype StatePart = State['selection'];\n\nexport default (state = initialState.selection, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'NEW_CARD':\n    case 'SELECT_CARD':\n      return produce(state, (nextState: StatePart) => ({\n        ...nextState,\n        ...action.payload,\n        type: ElementType.card,\n      }));\n    case 'SELECTION_CANCEL':\n    case 'SELECTION_DELETE':\n    case 'EDIT_CARD':\n      return produce(state, () => initialState.selection);\n    case 'AUTH_OUT':\n      return initialState.selection;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['metas'];\n\nexport default (state: StatePart = initialState.metas, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload.meta,\n        };\n      });\n    case 'ROADMAP_UPDATE_META':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          [action.payload.roadmapID]: {\n            ...nextState[action.payload.roadmapID],\n            stats: action.payload.stats,\n          },\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.metas;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['user'];\n\nexport default (state: StatePart = initialState.user, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'AUTH_FETCH':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          fetchig: true,\n        };\n      });\n    case 'AUTH_SUCCESS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload,\n          fetchig: false,\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.user;\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          roadmaps: {\n            ...nextState.roadmaps,\n            ...action.payload.roadmaps,\n          },\n          roadmapsSet: true,\n        };\n      });\n    case 'SET_ACCOUNT_ROADMAP_SETTING':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          roadmaps: {\n            ...nextState.roadmaps,\n            [action.payload.roadmapID]: {\n              ...nextState.roadmaps[action.payload.roadmapID],\n              [action.payload.settingName]: action.payload.settingValue,\n            },\n          },\n        };\n      });\n    case 'REMOVE_ACCOUNT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        delete nextState.roadmaps[action.payload.roadmapID];\n        return nextState;\n      });\n    default:\n      return state;\n  }\n};\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel, END } from 'redux-saga';\n\nimport { EditLineName } from 'types/actions';\nimport { Card, Meta, PersistentState } from 'types/state';\n\nexport const getRoadmapContent = (roadmapID: string): EventChannel<PersistentState> =>\n  eventChannel((emiter) => {\n    const listener = firebase.database().ref(`roadmaps/${roadmapID}`);\n    listener.on('value', (snapshot) => {\n      const value = snapshot.val() as PersistentState;\n      if (value) {\n        emiter(value);\n      } else {\n        // This roadmap hasn't been found or access is denied\n        emiter(END);\n        listener.off();\n      }\n    });\n    return () => {\n      listener.off();\n    };\n  });\n\nexport const fetchAccountDetails = (userID: string): Promise<firebase.database.DataSnapshot> =>\n  firebase.database().ref(`users/${userID}`).once('value');\n\nexport const fetchRoadmapMeta = (roadmapID: string): Promise<firebase.database.DataSnapshot> =>\n  firebase.database().ref(`roadmaps/${roadmapID}/meta/`).once('value');\n\nexport const updateRemoteMeta = (roadmapID: string, stats: Meta['stats']): void => {\n  const ref = firebase.database().ref(`roadmaps/${roadmapID}/meta/stats/`);\n  void ref.update({\n    ...stats,\n  });\n};\n\nexport const updateRemoteCardData = (currentRoadmapID: string, card: Card | { id: string }): void => {\n  const { id, ...content } = card;\n  const ref = firebase.database().ref(`roadmaps/${currentRoadmapID}/cards/${id}`);\n  if (Object.keys(content).length) {\n    void ref.update({\n      progress: null,\n      ...content,\n    });\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const updateRemoteLineData = (currentRoadmapID: string, { line, text }: EditLineName['payload']): void => {\n  const ref = firebase.database().ref(`roadmaps/${currentRoadmapID}/lines/names/`);\n  void ref.update({ [line]: text.length ? text : null });\n};\n\nexport const updateRemoteLong = (roadmapID: string, cardID: string, long: string): void => {\n  const ref = firebase.database().ref(`roadmaps/${roadmapID}/longs/${cardID}/`);\n  if (long) {\n    void ref.set(long);\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const addRemoteAccountRoadmap = async (userID: string, time: number, roadmapName: string): Promise<string> => {\n  const roadmapID = firebase.database().ref(`users/${userID}/roadmaps/`).push().key;\n  if (roadmapID) {\n    await firebase\n      .database()\n      .ref(`users/${userID}/roadmaps/`)\n      .update({\n        [roadmapID]: {\n          lineNameWidth: 0,\n          // owner: true,\n          // dayZoom: C.DAY.WIDTH,\n        },\n      });\n    await firebase\n      .database()\n      .ref(`roadmaps/${roadmapID}/meta/`)\n      .update({\n        name: roadmapName,\n        createdAt: time,\n        ownerID: userID,\n        stats: {\n          from: '',\n          cards: 0,\n          until: '',\n        },\n      });\n    return roadmapID;\n  }\n  return '';\n};\n\ntype SettingProp = {\n  userID: string;\n  roadmapID: string;\n  settingName: string;\n  settingValue: string | number | undefined;\n};\n\nexport const setAccountRoadmapSetting = ({ userID, roadmapID, settingName, settingValue }: SettingProp): void => {\n  const ref = firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}/${settingName}`);\n  if (settingValue !== undefined) {\n    void ref.set(settingValue);\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const removeRemoteAccountRoadmap = (userID: string, roadmapID: string): void => {\n  void firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}/`).remove();\n};\n","import firebase from 'firebase/app';\n\nimport { State } from 'types/state';\n\nexport const createAccount = (user: State['user']): void =>\n  void firebase.database().ref(`users/${user.id}`).set({\n    name: user.name,\n  });\n","import firebase from 'firebase';\nimport { put, fork, take, call, select, TakeEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { fetchAccountDetails, fetchRoadmapMeta } from 'data/data';\nimport { createAccount } from 'data/newUser';\nimport { setAccountRoadmaps } from 'state/actions/user';\n\nimport { AuthSuccess } from 'types/actions';\nimport { Meta, State } from 'types/state';\n\nfunction* fetchUserRoadmapsData(userID: string) {\n  const snapshot = (yield call(fetchAccountDetails, userID)) as firebase.database.DataSnapshot;\n  const value = (yield snapshot.val()) as {\n    roadmaps?: State['user']['roadmaps'];\n  } | null;\n  if (!value) {\n    const user = (yield select((state: State) => state.user)) as State['user'];\n    yield call(createAccount, user);\n  }\n  if (value?.roadmaps) {\n    const roadmapIDs = Object.keys(value.roadmaps);\n    if (roadmapIDs.length) {\n      const metas = {} as State['metas'];\n      for (const roadmapID of roadmapIDs) {\n        try {\n          const snapshot = (yield call(fetchRoadmapMeta, roadmapID)) as firebase.database.DataSnapshot;\n          metas[roadmapID] = snapshot.val() as Meta;\n        } catch (error: unknown) {\n          // TODO: Log this error in the storage\n          // console.error(error);\n          delete value.roadmaps[roadmapID];\n        }\n      }\n      yield put(setAccountRoadmaps(value.roadmaps, metas));\n    } else {\n      yield put(setAccountRoadmaps({}, {}));\n    }\n  } else {\n    yield put(setAccountRoadmaps({}, {}));\n  }\n}\n\nexport function* watchAuth(): Generator<TakeEffect | ForkEffect<void>, void, AuthSuccess> {\n  while (true) {\n    const action = yield take('AUTH_SUCCESS');\n    if (typeof action.payload?.id === 'string') {\n      yield fork(fetchUserRoadmapsData, action.payload.id);\n    }\n  }\n}\n","import { fork, select, put } from 'redux-saga/effects';\nimport equal from 'fast-deep-equal';\n\nimport { updateRemoteMeta } from 'data/data';\n\nimport { Cards, Meta, State } from 'types/state';\nimport { roadmapUpdateMeta } from 'state/actions/metas';\n\nexport function* updateMeta(roadmapID: string, cards: Cards) {\n  const oldStats = (yield select((state: State) => state.metas[roadmapID].stats)) as Meta['stats'];\n  const newStats = Object.values(cards).reduce(\n    (acc, val) => {\n      acc.cards++;\n      acc.from = acc.from ? (acc.from.localeCompare(val.from) > 0 ? val.from : acc.from) : val.from;\n      acc.until = acc.until ? (acc.until.localeCompare(val.until) > 0 ? acc.until : val.until) : val.until;\n      return acc;\n    },\n    { cards: 0, from: '', until: '' }\n  );\n  const stats = {\n    ...oldStats,\n    ...newStats,\n  };\n  if (!equal(oldStats, stats)) {\n    yield put(roadmapUpdateMeta({ roadmapID, stats }));\n    yield fork(updateRemoteMeta, roadmapID, stats);\n  }\n}\n","import { RoadmapUpdateMeta } from 'types/actions';\n\nexport const roadmapUpdateMeta = ({ roadmapID, stats }: RoadmapUpdateMeta['payload']): RoadmapUpdateMeta => ({\n  type: 'ROADMAP_UPDATE_META',\n  payload: {\n    roadmapID,\n    stats,\n  },\n});\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteCardData } from 'data/data';\nimport { updateMeta } from 'state/sagas/meta';\n\nimport { CardEditActions } from 'types/actions';\nimport { Cards, State } from 'types/state';\n\ntype ChangeActions = CardEditActions | Cards | string | undefined;\n\nexport function* watchCardChange(): Generator<TakeEffect | SelectEffect | ForkEffect<unknown>, void, ChangeActions> {\n  while (true) {\n    const action = (yield take(['EDIT_CARD', 'MOVE_CARD', 'SELECTION_DELETE'])) as CardEditActions;\n    const cards = (yield select((state: State) => state.cards)) as Cards;\n    const card = cards[action.payload.id];\n    const currentRoadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (currentRoadmapID) {\n      yield fork(updateRemoteCardData, currentRoadmapID, card || { id: action.payload.id });\n      yield fork(updateMeta, currentRoadmapID, cards);\n    }\n  }\n}\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteLineData } from 'data/data';\n\nimport { EditLineName } from 'types/actions';\nimport { State } from 'types/state';\n\nexport function* watchLineChange(): Generator<\n  TakeEffect | SelectEffect | ForkEffect<unknown>,\n  void,\n  EditLineName | string\n> {\n  while (true) {\n    const action = (yield take('EDIT_LINE_NAME')) as EditLineName;\n    const currentRoadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (currentRoadmapID) {\n      yield fork(updateRemoteLineData, currentRoadmapID, action.payload);\n    }\n  }\n}\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteLong } from 'data/data';\n\nimport { EditLong } from 'types/actions';\nimport { State } from 'types/state';\n\nexport function* watchLongChange(): Generator<TakeEffect | SelectEffect | ForkEffect<void>, void, EditLong | string> {\n  while (true) {\n    const { payload } = (yield take(['EDIT_LONG'])) as EditLong;\n    const roadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (roadmapID && payload.cardID) {\n      yield fork(updateRemoteLong, roadmapID, payload.cardID, payload.long);\n    }\n  }\n}\n","import { FetchedData } from 'types/state';\n\nexport const getKeyWithTrueValue = (arr: Array<[string, boolean]> = []): string | undefined =>\n  (arr.find((pair) => pair[1]) || [])[0];\n\nexport const hydrateWithIDs = (data: FetchedData): FetchedData => {\n  (Object.keys(data) as Array<keyof typeof data>).forEach((type) => {\n    if (type === 'cards' || type === 'milestones') {\n      const obj = data[type];\n      (Object.keys(obj) as Array<keyof typeof obj>).forEach((key) => {\n        const string = String(key);\n        obj[string].id = string;\n      });\n    }\n    if (type === 'lines') {\n      data.lines.names = Object.assign({}, data.lines.names);\n    }\n  });\n  return data;\n};\n","import {\n  put,\n  fork,\n  take,\n  call,\n  select,\n  race,\n  TakeEffect,\n  ForkEffect,\n  SelectEffect,\n  CallEffect,\n  PutEffect,\n} from 'redux-saga/effects';\nimport equal from 'fast-deep-equal';\n\nimport { getRoadmapContent, addRemoteAccountRoadmap } from 'data/data';\nimport { removeAccountRoadmap, roadmapDataFetch, setAccountRoadmaps } from 'state/actions/user';\nimport { hydrateWithIDs } from 'utils/arrays';\n\nimport C from 'constants/index';\n\nimport { AddAccountRoadmap, SetAccountRoadmaps, SetCurrentRoadmap } from 'types/actions';\nimport { PersistentState, State } from 'types/state';\n\nfunction* fetchCurrentRoadmapData(currentRoadmapID: string) {\n  const channel = getRoadmapContent(currentRoadmapID);\n  let isCancelled = false;\n  try {\n    while (true) {\n      const { roadmapData } = (yield race({\n        roadmapData: take(channel),\n        cancel: take('REMOVE_CURRENT_ROADMAP'),\n      })) as { roadmapData: PersistentState };\n      if (roadmapData) {\n        // TODO: Warn about changes in meta (it will not be auto-updated)\n        // TODO: Consider storing IDs in DB (use more space, but faster and we can compare values with Redux store)\n        if (roadmapData.cards === undefined && roadmapData.milestones === undefined) {\n          // New roadmaps are empty and will fail check with previous (also empty) state, so we have this shortcut\n          yield put(\n            roadmapDataFetch({\n              cards: {},\n              lines: {\n                names: {},\n              },\n              longs: {},\n              milestones: {},\n              roadmapID: currentRoadmapID,\n            })\n          );\n        } else {\n          const hydratedData = hydrateWithIDs({\n            cards: roadmapData.cards || {},\n            lines: roadmapData.lines || {\n              names: {},\n            },\n            longs: roadmapData.longs || {},\n            milestones: roadmapData.milestones || {},\n            roadmapID: currentRoadmapID,\n          });\n          const cards: PersistentState['cards'] = yield select((state) => state.cards);\n          const lines: PersistentState['lines'] = yield select((state) => state.lines);\n          const longs: PersistentState['longs'] = yield select((state) => state.longs);\n          const milestones: PersistentState['milestones'] = yield select((state) => state.milestones);\n          const equalCards = equal(hydratedData.cards, cards);\n          const equalLines = equal(hydratedData.lines, lines);\n          const equalLongs = equal(hydratedData.longs, longs);\n          const equalMiles = equal(hydratedData.milestones, milestones);\n          if (!equalCards || !equalLongs || !equalLines || !equalMiles) {\n            yield put(roadmapDataFetch(hydratedData));\n          }\n        }\n      } else {\n        isCancelled = true;\n        channel.close();\n      }\n    }\n  } finally {\n    if (!isCancelled) {\n      // Error in data fetch: requested roadmap doesn't exist. Removing its ID from user account.\n      yield put(removeAccountRoadmap(currentRoadmapID));\n    }\n  }\n}\n\nexport function* watchCurrentRoadmapChange(): Generator<TakeEffect | ForkEffect<void>, void, SetCurrentRoadmap> {\n  while (true) {\n    const { currentRoadmapID } = (yield take(['SET_CURRENT_ROADMAP'])).payload;\n    if (typeof currentRoadmapID === 'string' && currentRoadmapID.length === C.ID.LENGTH) {\n      yield fork(fetchCurrentRoadmapData, currentRoadmapID);\n    }\n  }\n}\n\nexport function* watchAddRoadmap(): Generator<\n  TakeEffect | SelectEffect | CallEffect<string> | PutEffect<SetAccountRoadmaps> | ForkEffect<void>,\n  void,\n  AddAccountRoadmap | string\n> {\n  while (true) {\n    const { roadmapName } = ((yield take(['ADD_ACCOUNT_ROADMAP'])) as AddAccountRoadmap).payload;\n    if (typeof roadmapName === 'string' && roadmapName.length) {\n      const userID = (yield select((state: State) => state.user.id)) as string;\n      const createdAt = Date.now();\n      const roadmapID = (yield call(addRemoteAccountRoadmap, userID, createdAt, roadmapName)) as string;\n      yield put(\n        setAccountRoadmaps(\n          {\n            [roadmapID]: {\n              lineNameWidth: 0,\n            },\n          },\n          {\n            [roadmapID]: {\n              createdAt,\n              name: roadmapName,\n              ownerID: userID,\n              stats: {\n                from: '',\n                cards: 0,\n                until: '',\n              },\n            },\n          }\n        )\n      );\n    }\n  }\n}\n","export const setRecurrentEvent = (fn: () => void, timeout: number): (() => void) => {\n  let eventActive = true;\n  const recurrentEvent = (func: () => void, time: number): void => {\n    setTimeout(() => {\n      if (eventActive) {\n        func();\n        recurrentEvent(func, time);\n      }\n    }, time);\n  };\n  return (() => {\n    fn();\n    recurrentEvent(fn, timeout);\n    return () => {\n      eventActive = false;\n    };\n  })();\n};\n","import { take, select, call } from 'redux-saga/effects';\n\nimport { writeUserLastActive } from 'data/user';\nimport { setAccountRoadmapSetting } from 'data/data';\nimport { AuthSuccess, SetAccountRoadmapSetting } from 'types/actions';\nimport { setRecurrentEvent } from 'utils/recurrent';\nimport C from 'constants/index';\nimport { State } from 'types/state';\n\nexport function* sendLastActive() {\n  let stopSending = () => {};\n  while (true) {\n    const actionLogin = (yield take('AUTH_SUCCESS')) as AuthSuccess;\n    if (typeof actionLogin.payload?.id === 'string') {\n      stopSending = setRecurrentEvent(() => writeUserLastActive(actionLogin.payload.id), C.TIME.LAST_ACTIVE);\n    }\n    yield take('AUTH_OUT');\n    stopSending();\n  }\n}\n\nexport function* listenRoadmapSettingChange() {\n  while (true) {\n    const action = (yield take('SET_ACCOUNT_ROADMAP_SETTING')) as SetAccountRoadmapSetting;\n    const userID = (yield select((state: State) => state.user.id)) as string;\n    const { roadmapID, settingName, settingValue } = action.payload;\n    yield call(setAccountRoadmapSetting, { userID, roadmapID, settingName, settingValue });\n  }\n}\n","import firebase from 'firebase/app';\n\nexport const analytics = (() => {\n  let savedAnalyticsState: firebase.analytics.Analytics | undefined;\n  return {\n    saveAnalyticsState: (analyticsState: firebase.analytics.Analytics) => {\n      savedAnalyticsState = analyticsState;\n    },\n    act: () => savedAnalyticsState,\n  };\n})();\n","import { take, TakeEffect } from 'redux-saga/effects';\n\nimport { analytics } from 'utils/analytics';\n\nimport { Actions } from 'types/actions';\n\nimport app from 'constants/../../package.json';\n\nexport function* sendAnalytics(): Generator<TakeEffect, void, Actions> {\n  while (true) {\n    const action = yield take('*');\n    if (action.type === 'AUTH_SUCCESS') {\n      analytics.act()?.logEvent('login', {\n        method: 'Google',\n        uuid: action.payload.id,\n        app_version: app.version,\n      });\n    }\n  }\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchAuth } from './auth';\nimport { watchCardChange } from './card';\nimport { watchLineChange } from './line';\nimport { watchLongChange } from './long';\nimport { watchAddRoadmap, watchCurrentRoadmapChange } from './roadmap';\nimport { sendLastActive, listenRoadmapSettingChange } from './user';\nimport { sendAnalytics } from './analytics';\n\nexport default function* rootSaga(): Generator<unknown, void, unknown> {\n  yield all([\n    watchAuth(),\n    watchCardChange(),\n    watchLineChange(),\n    watchLongChange(),\n    watchAddRoadmap(),\n    watchCurrentRoadmapChange(),\n    sendLastActive(),\n    listenRoadmapSettingChange(),\n    sendAnalytics(),\n  ]);\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body, main, section {\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n  input {\n    font-family: Helvetica, Arial, sans-serif;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { enableAllPlugins } from 'immer';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Core from 'components/Core/Core';\nimport createStore from 'state/store';\n\nimport { GlobalStyle } from 'styles/Global';\n\nenableAllPlugins();\nconst store = createStore();\nconst rootAppNode = document.body.firstElementChild;\n\nif (rootAppNode) {\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <GlobalStyle />\n        <Core />\n      </BrowserRouter>\n    </Provider>,\n    rootAppNode\n  );\n}\n","import { createStore, applyMiddleware, Store, CombinedState } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport dataInit from 'data';\nimport { trackAuthChange } from 'data/auth';\nimport rootReducer from 'state/reducers';\nimport rootSaga from 'state/sagas';\nimport { authFetch, authOut, authSuccess } from 'state/actions/user';\n\nimport { Actions, AuthSuccess } from 'types/actions';\nimport { State } from 'types/state';\n\nimport { analytics } from 'utils/analytics';\n// import { loadState, saveState } from './localStorage';\n\nexport default (): Store<CombinedState<State>, Actions> => {\n  // Firebase initialization\n  dataInit(analytics.saveAnalyticsState);\n\n  // const persistedState = loadState();\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = applyMiddleware(sagaMiddleware);\n  const composedMiddleware = composeWithDevTools({ trace: true, traceLimit: 25 })(middleware);\n\n  const store = createStore(rootReducer, composedMiddleware);\n  sagaMiddleware.run(rootSaga);\n\n  // Starting authorization and provinging two callbacks for succesful & failed fetching auth data\n  trackAuthChange({\n    fetching: () => store.dispatch(authFetch()),\n    success: (userData: AuthSuccess['payload']) => store.dispatch(authSuccess(userData)),\n    out: () => store.dispatch(authOut()),\n  });\n\n  // const store = createStore(rootReducer, persistedState, composedMiddleware);\n  // store.subscribe(() => {\n  //   const { selection, ...stateRest } = store.getState();\n  //   saveState(stateRest);\n  // });\n\n  return store;\n};\n","import React from 'react';\n\nconst SvgIcon = (props: { children?: JSX.Element; className?: string }): JSX.Element => {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      {props?.children}\n    </svg>\n  );\n};\n\nexport default React.memo(SvgIcon);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkroadmap\"] = self[\"webpackChunkroadmap\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [559,814], () => (__webpack_require__(9251)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","weekendColor","logo","pink","green","yellow","blue","header","dark","demi","grey","lite","light","border","background","statusColorMap","pending","progress","delayed","complete","dropped","accent","danger","stable","active","text","onDark","bold","main","mute","onLight","statusColors","purple","violet","indigo","azur","orange","fire","HeaderBlock","styled","color","Logo","Link","RoadmapTitle","AvatarBlock","ID","LENGTH","SYMBOLS","DAY","WIDTH","HEADER","HEIGHT","MILE_HEIGHT","CARD","VERTICAL_SPACE","HORIZONTAL_SPACE","RESIZE_TOLERANCE","CARDDECK_MOUSE_POSITION_FIX","LINE","MIN_WIDTH","INIT_WIDTH","MIN_WIDTH_COLLAPSE","MILE","MARGIN","LOCALE","navigator","language","COLUMN_MULTIPLIER","PLAN","FREE","LIMIT","ROADMAPS","TIME","DAYS_IN_MONTH","AUTOSAVE_MS","LAST_ACTIVE","MILLISECONDS_IN_DAY","URL","INDEX","LOGIN","ROOT","RoadmapList","title","currentRoadmapID","useSelector","state","ui","metas","roadmapName","useMemo","name","useEffect","document","React","ConnectionStatus","user","useState","isConnected","setConnected","callback","connectionChannel","status","eventChannel","firebase","listener","ref","on","snapshot","val","off","close","id","Check","className","Cancel","writeUserLastActive","userID","update","lastActive","Date","now","DropdownGroup","colors","DropdownWraper","Dropdown","onClick","alert","signOut","Avatar","photoURL","src","alt","UserIcon","Header","isLoggedIn","to","C","app","Title","nanoid","customAlphabet","selectionDelete","type","payload","getExtraMonths","Math","ceil","window","innerWidth","getPlaceholderWidth","x1","x2","max","round","getCardStatus","from","until","today","undefined","localeCompare","fromToToday","getDaysDiff","getDaysInterval","autoscaleTextarea","textarea","setFocus","style","height","scrollHeight","Number","isInteger","selectionStart","value","length","selectionEnd","scrollToToday","list","smooth","scroll","left","offsetLeft","parentElement","behavior","getInputIndexInGrandParent","el","HTMLInputElement","parent","HTMLElement","grandParent","index","slice","call","children","indexOf","total","querySelectorAll","callItBack","months","getTwoDigitDate","number","getYMDFromTimestamp","timestamp","date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","getYMDWFromTimestamp","firstDay","setUTCHours","setUTCDate","firstWeekDay","getUTCDay","getTodayTimestamp","UTC","getFullYear","getMonth","getDate","getDataString","toISOString","getLocalDate","time","Intl","DateTimeFormat","dateStyle","format","date1","date2","getTime","getDateFromDiff","diff","getExpandedDate","offsetMonths","isFuture","getNewDates","dates","direction","dateDiff","map","getMonthList","swap","split","fromYear","fromMonth","untilYear","untilMonth","yearMonth1","yearMonth2","min","extraMonth","skipOneMonthForFuture","yearsDiff","monthsDiff","Array","fill","_","getExtendedMonthList","i","offset","newMonths","prototype","apply","getFromUntil","cards","Object","values","reduce","card","getUIOffset","todayString","extraMonths","fromOffset","untilOffset","placeholderInitState","started","y1","line","done","placeholder","notify","fn","x","parseInt","m","d","setMonths","passID","set","newID","get","removePlaceholder","e","target","relatedTarget","getAttribute","mXFix","mYFix","getCoords","coord","nativeEvent","button","offsetTop","HTMLButtonElement","cardDeck","getMousePositionFromCardDeck","mX","mY","offsetX","offsetY","ElementType","PlaceholderBlock","props","solid","PlaceholderContent","Placeholder","aim","setAim","memoizedCards","isAimHoversCard","shortList","filter","some","Boolean","isAimOnCard","selectionType","selection","none","dispatch","useDispatch","isNew","newCard","shouldSkipAim","opacity","transform","size","width","String","getPlaceholderData","weekDay","tip","isToday","Month","monthName","toLocaleDateString","getMonthName","days","dateObject","weekday","getDateForTooltip","Day","key","DeckBlock","DeckInner","MonthsBlock","fDay","dayWidth","daysWidth","relativePart","wC","Today","TodayScroll","scrollPosition","todayRef","todayTimestamp","cardsPosition","cardsYear","cardsMonth","todayStyle","MonthBlock","monthStyle","CardWaraper","DeckLineCounter","CardBlockText","CardStatusSVG","xmlns","viewBox","CardBlockProgress","CardBlock","cardCases","CardStatus","RoadmapCard","typeS","progS","color1","color2","getProgressBackgroud","CLR","handleMouseDown","classList","contains","altKey","ctrlKey","metaKey","shiftKey","onContextMenu","preventDefault","stopPropagation","onDoubleClick","onMouseEnter","onTouchStart","onMouseDown","CardsDeck","setLines","cardsObject","lineNames","lines","names","lineSize","useRef","current","dayOffset","dayDiff","top","Card","maxLine","keys","acc","wrapperStyle","maxSize","setAccountRoadmaps","roadmaps","meta","roadmapDataFetch","roadmapData","DeckLines","lineCount","roadmapID","lineNameWidth","drag","setDrag","setMaxLine","editState","setEditState","inputPanel","inputHandler","nextFocusInputIndex","panelWidth","maxName","newPanelWidth","settingName","settingValue","setAccountRoadmapSetting","saveLine","handleEditOpen","HTMLDivElement","handleEditClose","handleInputBlur","click","handleInputKeyDown","reverse","isEdge","toLocaleLowerCase","saved","focus","grandpa","newTarget","setFocusWithoutRerender","handlePressToDrag","handleMoveToDrag","clientX","handleReleaseResize","handleDragOut","EditNames","defaultValue","onBlur","onKeyDown","autoFocus","onMouseMove","onMouseUp","onMouseOut","ShowNames","setUIOffset","setTodayTimestamp","Deck","listRef","ready","position","setScrollPosition","hasMonths","lastOffset","updateMonths","useLayoutEffect","scrollLeft","moveCard","cardDetails","resize","limit","pressX","extraSize","dateTable","removeDateTable","remove","clearDesk","immidiate","wasResized","cursor","pointerEvents","zIndex","setTimeout","pressInZone","currentTarget","add","clientWidth","moveInZone","y","clientY","diffX","extra","extraX","curTarget","rect","getBoundingClientRect","childRect","floor","scrollTop","item","offsetWidth","trunc","movePlaceholder","releaseInZone","Error","lineDiff","enterZone","leaveZone","HTMLHtmlElement","HTMLSpanElement","tagName","toLowerCase","renderPastOrFuture","firstMonth","newDate","extraLeftOffset","d1","d2","setDate","lastMonth","Months","MonthsList","tabIndex","blur","onScroll","deck","scrollCurrent","todayElement","todayLeft","showScrollButton","daysVisible","daysTotal","scrollWidth","onMouseLeave","Roadmap","cancelAction","addEventListener","removeEventListener","shake","keyframes","rotate","EditScreen","EditForm","EditExtra","Fieldset","FormLabel","LabelWarp","attrs","as","join","FormInput","FormInputWrap","RangeInput","EditExtraFields","EditExtraActions","EditEntry","rows","hoverColor","action","Button","Range","disabled","change","save","setVal","handleChange","newVal","isNaN","htmlFor","onChange","SwitchBlock","Switch","toggle","defaultChecked","DateInput","inputRef","select","required","pattern","EditorWrap","debouncedSave","debounce","func","styleMap","STRIKETHROUGH","textDecoration","HIGHLIGHT","backgroundColor","LongEditor","cardID","rawState","longs","EditorState","initialRaw","convertFromRaw","JSON","parse","editorState","setEditorState","dispatchEdit","long","handleTab","changeState","RichUtils","getCurrentContent","context","getPlainText","trim","newRawState","stringify","raw","convertToRaw","blocks","block","newBlock","assign","depth","inlineStyleRanges","entityRanges","data","convertToJSON","saveLong","cancel","Editor","flush","onTab","handleKeyCommand","command","toUpperCase","keyBindingFn","KeyBindingUtil","code","getDefaultKeyBinding","customStyleMap","EditFields","setSelection","cardDispatch","isProgressOn","isFinite","setFrom","setUntil","Save","Revert","Delete","EditTitle","enforceExtraFields","DefaultState","selectedElement","isExtraFieldsEnforced","newSelection","setNewSelection","isInvalid","setInvalid","isCardValid","edited","original","editedKeys","originalKeys","hasCardChanged","delete","hasExtraFields","Screen","RoadmapScreen","navigate","useNavigate","location","useLocation","routeID","useMatch","params","roadmapsSet","userRoadmapIDs","includes","setCurrentRoadmap","pathname","SpinnerMixin","css","Spinner","RoadmapListTitle","RoadmapListBubble","RoadmapListItem","RoadmapListAdd","Overview","showInput","userRoadmapsSet","userRoadmaps","fetchig","roadmapsIDs","sort","a","b","createdAt","stats","timeStyle","getLocalString","SingleLineInput","isShowingInput","setRoadmapName","OverviewScreen","addAccountRoadmap","RoutesComponent","Routes","Route","path","element","timeout","MainBlock","Core","manageTimer","hidden","clearTimeout","newTimestamp","getMilisecondsUntilTomorrow","isLoginPage","provider","useDeviceLanguage","signInWithRedirect","login","email","milestones","combineReducers","initialState","produce","nextState","forEach","milestone","getRoadmapContent","emiter","END","fetchAccountDetails","once","fetchRoadmapMeta","updateRemoteMeta","updateRemoteCardData","content","updateRemoteLineData","updateRemoteLong","addRemoteAccountRoadmap","push","ownerID","createAccount","fetchUserRoadmapsData","watchAuth","roadmapIDs","f","put","take","fork","updateMeta","oldStats","newStats","equal","watchCardChange","watchLineChange","watchLongChange","hydrateWithIDs","obj","string","fetchCurrentRoadmapData","watchCurrentRoadmapChange","watchAddRoadmap","channel","isCancelled","race","hydratedData","equalCards","equalLines","equalLongs","equalMiles","setRecurrentEvent","eventActive","recurrentEvent","sendLastActive","listenRoadmapSettingChange","stopSending","actionLogin","savedAnalyticsState","analytics","analyticsState","sendAnalytics","logEvent","method","uuid","app_version","rootSaga","all","GlobalStyle","createGlobalStyle","enableAllPlugins","store","saveAnalyticsState","apiKey","authDomain","databaseURL","projectId","messagingSenderId","appId","measurementId","fetching","success","out","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","composedMiddleware","composeWithDevTools","trace","traceLimit","createStore","rootReducer","run","userData","authSuccess","onAuthStateChanged","uid","displayName","rootAppNode","body","firstElementChild","ReactDOM","Provider","BrowserRouter","SvgIcon","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","amdO","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","this","Function","hmd","create","prop","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}