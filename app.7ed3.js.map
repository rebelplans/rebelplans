{"version":3,"file":"app.7ed3.js","mappings":"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","sources":["webpack://roadmap/webpack/runtime/chunk loaded","webpack://roadmap/./src/constants/colors.ts","webpack://roadmap/./src/styles/Header.ts","webpack://roadmap/./src/constants/index.ts","webpack://roadmap/./src/components/Header/Title.tsx","webpack://roadmap/./src/components/Header/ConnectionStatus.tsx","webpack://roadmap/./src/data/connection.ts","webpack://roadmap/./src/data/user.ts","webpack://roadmap/./src/styles/Common/Dropdown.ts","webpack://roadmap/./src/components/Header/Dropdown.tsx","webpack://roadmap/./src/data/auth.ts","webpack://roadmap/./src/components/Header/Avatar.tsx","webpack://roadmap/./src/components/Header/Header.tsx","webpack://roadmap/./src/utils/nanoid.ts","webpack://roadmap/./src/state/actions/selection.ts","webpack://roadmap/./src/utils/ui.ts","webpack://roadmap/./src/utils/dates.ts","webpack://roadmap/./src/utils/subscribtion.ts","webpack://roadmap/./src/utils/placeholderActions.ts","webpack://roadmap/./src/utils/cardActions.ts","webpack://roadmap/./src/state/actions/cards.ts","webpack://roadmap/./src/types/state.ts","webpack://roadmap/./src/styles/Placeholder.ts","webpack://roadmap/./src/components/Placeholder/Placeholder.tsx","webpack://roadmap/./src/components/Deck/Day.tsx","webpack://roadmap/./src/styles/MileBlock.ts","webpack://roadmap/./src/components/Deck/Mile.tsx","webpack://roadmap/./src/components/Deck/Month.tsx","webpack://roadmap/./src/styles/DateTable.ts","webpack://roadmap/./src/components/Deck/MonthsList.tsx","webpack://roadmap/./src/styles/CardBlock.ts","webpack://roadmap/./src/assets/CardStatus.tsx","webpack://roadmap/./src/components/Deck/Card.tsx","webpack://roadmap/./src/components/Deck/CardsDeck.tsx","webpack://roadmap/./src/state/actions/user.ts","webpack://roadmap/./src/components/Deck/DeckLines.tsx","webpack://roadmap/./src/state/actions/lines.ts","webpack://roadmap/./src/state/actions/ui.ts","webpack://roadmap/./src/components/Deck/Deck.tsx","webpack://roadmap/./src/components/Roadmap/Roadmap.tsx","webpack://roadmap/./src/styles/Keyframes.ts","webpack://roadmap/./src/styles/EditScreen.ts","webpack://roadmap/./src/styles/Form/Button.ts","webpack://roadmap/./src/components/EditScreen/Range.tsx","webpack://roadmap/./src/styles/Form/Switch.ts","webpack://roadmap/./src/components/EditScreen/Switch.tsx","webpack://roadmap/./src/components/EditScreen/DateInput.tsx","webpack://roadmap/./src/styles/Editor.ts","webpack://roadmap/./src/state/actions/longs.ts","webpack://roadmap/./src/utils/editor.ts","webpack://roadmap/./src/components/EditScreen/Editor.tsx","webpack://roadmap/./src/components/EditScreen/EditFields.tsx","webpack://roadmap/./src/components/EditScreen/EditTitle.tsx","webpack://roadmap/./src/state/actions/miles.ts","webpack://roadmap/./src/components/EditScreen/EditScreen.tsx","webpack://roadmap/./src/components/Screens/Roadmap.tsx","webpack://roadmap/./src/styles/Common/Spinner.ts","webpack://roadmap/./src/styles/Overview.ts","webpack://roadmap/./src/components/Overview/OverviewBadge.tsx","webpack://roadmap/./src/components/Overview/AccessState.tsx","webpack://roadmap/./src/components/Overview/Overview.tsx","webpack://roadmap/./src/components/Overview/SingleLineInput.tsx","webpack://roadmap/./src/components/Screens/Overview.tsx","webpack://roadmap/./src/components/Core/Routes.tsx","webpack://roadmap/./src/styles/Main.ts","webpack://roadmap/./src/components/Core/Core.tsx","webpack://roadmap/./src/data/index.ts","webpack://roadmap/./src/state/initialState.ts","webpack://roadmap/./src/state/reducers/ui.ts","webpack://roadmap/./src/state/reducers/index.ts","webpack://roadmap/./src/state/reducers/cards.ts","webpack://roadmap/./src/state/reducers/lines.ts","webpack://roadmap/./src/state/reducers/longs.ts","webpack://roadmap/./src/state/reducers/miles.ts","webpack://roadmap/./src/state/reducers/selection.ts","webpack://roadmap/./src/state/reducers/metas.ts","webpack://roadmap/./src/state/reducers/user.ts","webpack://roadmap/./src/constants/defaults.ts","webpack://roadmap/./src/data/data.ts","webpack://roadmap/./src/data/newUser.ts","webpack://roadmap/./src/state/sagas/roadmaps.ts","webpack://roadmap/./src/state/sagas/auth.ts","webpack://roadmap/./src/state/sagas/meta.ts","webpack://roadmap/./src/state/actions/metas.ts","webpack://roadmap/./src/state/sagas/card.ts","webpack://roadmap/./src/state/sagas/line.ts","webpack://roadmap/./src/state/sagas/long.ts","webpack://roadmap/./src/state/sagas/mile.ts","webpack://roadmap/./src/utils/arrays.ts","webpack://roadmap/./src/state/sagas/roadmap.ts","webpack://roadmap/./src/utils/recurrent.ts","webpack://roadmap/./src/state/sagas/user.ts","webpack://roadmap/./src/utils/analytics.ts","webpack://roadmap/./src/state/sagas/analytics.ts","webpack://roadmap/./src/state/sagas/index.ts","webpack://roadmap/./src/styles/Global.ts","webpack://roadmap/./src/404.tsx","webpack://roadmap/./src/state/store.ts","webpack://roadmap/./src/assets/SvgIcon.tsx","webpack://roadmap/webpack/bootstrap","webpack://roadmap/webpack/runtime/amd options","webpack://roadmap/webpack/runtime/compat get default export","webpack://roadmap/webpack/runtime/define property getters","webpack://roadmap/webpack/runtime/global","webpack://roadmap/webpack/runtime/harmony module decorator","webpack://roadmap/webpack/runtime/hasOwnProperty shorthand","webpack://roadmap/webpack/runtime/make namespace object","webpack://roadmap/webpack/runtime/jsonp chunk loading","webpack://roadmap/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { CardTypes } from 'types/card';\n\nexport const weekendColor = 'rgba(106,148,184,0.06)';\n\nexport const logo = {\n  pink: '#ec4af4',\n  green: '#84ff00',\n  yellow: '#edff00',\n  blue: '#4ba4f5',\n};\n\nexport const header = {\n  dark: '#191919',\n  demi: '#333333',\n  grey: '#696969',\n  lite: '#f7f8f9',\n  light: {\n    border: '#ccc',\n    background: '#eee',\n  },\n};\n\nexport const accent = {\n  danger: '#ff3e84',\n  stable: logo.green,\n  active: logo.blue,\n};\n\nexport const text = {\n  onDark: {\n    bold: '#fff',\n    main: '#ccc',\n    mute: '#aaa',\n    demi: header.grey,\n  },\n  onLight: {\n    bold: '#333',\n    main: header.grey,\n    mute: '#ccc',\n  },\n};\n\nexport const statusColorMap = {\n  pending: '#cccccc',\n  progress: '#60aeff',\n  delayed: '#ff9360',\n  complete: '#0bad00',\n  dropped: '#ff5656',\n};\n\n// export const mainColors = {\n//   purple: '#8c0756',\n//   violet: '#8933f4',\n//   indigo: '#374193',\n//   blue: '#1c93ff',\n//   azur: '#01e3b3',\n//   green: '#0b890c',\n//   yellow: '#e7e400',\n//   orange: '#ffa900',\n//   fire: '#ff5700',\n//   pink: '#ff55b8',\n// };\n\n// export const W3CSS = {\n//   red: '#f44336',\n//   pink: '#e91e63',\n//   purple: '#9c27b0',\n//   deeppurple: '#673ab7',\n//   indigo: '#3f51b5',\n//   blue: '#2196F3',\n//   green: '#4CAF50',\n//   amber: '#ffc107',\n//   orange: '#ff9800',\n//   bluegray: '#607d8b',\n// };\n\nconst statusColors: { [key in CardTypes]: string } = {\n  pending: '#cccccc',\n  progress: '#60aeff',\n  delayed: '#ff9360',\n  complete: '#0bad00',\n  dropped: '#ff5656',\n};\n\nexport default {\n  logo,\n  header,\n  accent,\n  text,\n  statusColors: statusColors,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const HeaderBlock = styled.header`\n  display: flex;\n  min-height: 45px;\n  background: ${color.header.dark};\n  color: ${color.text.onDark.main};\n  padding: 0 12px 0 0;\n  font-size: 1.2rem;\n  line-height: 1rem;\n  justify-content: left;\n  align-items: center;\n  user-select: none;\n  transition: 0.3s;\n  & > * {\n    margin-left: 12px;\n  }\n  &.transparent {\n    opacity: 0;\n  }\n`;\n\nexport const Logo = styled(Link)`\n  display: flex;\n  width: 28px;\n  height: 27px;\n  min-width: 28px;\n  border: 1px solid ${color.header.grey};\n  border-radius: 4px;\n  position: relative;\n  sup,\n  sub {\n    display: inline-block;\n    position: absolute;\n    left: 5px;\n    height: 3px;\n    font-size: 0;\n    transition: width 0.2s;\n  }\n  sup {\n    top: 5px;\n    width: 18px;\n    border-top: 2px solid ${color.logo.pink};\n    border-bottom: 2px solid ${color.logo.green};\n  }\n  sub {\n    top: 15px;\n    width: 10px;\n    border-top: 2px solid ${color.logo.yellow};\n    border-bottom: 2px solid ${color.logo.blue};\n  }\n  &:hover sub {\n    width: 18px;\n  }\n`;\n\nexport const RoadmapTitle = styled.h1`\n  margin-top: 1px;\n  margin-bottom: 0;\n  font-size: 13px;\n  font-weight: normal;\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  text-align: center;\n  user-select: all;\n`;\n\nexport const AvatarBlock = styled.button`\n  padding: 0;\n  width: 29px;\n  overflow: hidden;\n  box-sizing: border-box;\n  height: 29px;\n  min-width: 29px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: ${color.text.onDark.mute};\n  transition: 0.2s;\n  position: relative;\n  z-index: 30;\n  cursor: pointer;\n  border: 1px solid ${color.header.grey};\n  background: transparent;\n  /* &.fade-left {\n    transform: translateX(-41px);\n    opacity: 0;\n    pointer-events: none;\n  }\n  &.fade-right {\n    transform: translateX(41px);\n    opacity: 0;\n    pointer-events: none;\n  } */\n  &:hover {\n    color: ${color.logo.green};\n    img {\n      transform: scale(1.2);\n    }\n  }\n  & img {\n    width: 100%;\n    height: 100%;\n    font-size: 0;\n    transition: 0.2s;\n    vertical-align: middle;\n  }\n  & svg:only-child {\n    width: 21px;\n    margin: 3px 0 0;\n  }\n  & svg {\n    fill: currentColor;\n    pointer-events: none;\n    &.online,\n    &.offline {\n      color: transparent;\n      position: absolute;\n      border-radius: 50%;\n      width: 10px;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n    }\n    &.online {\n      color: ${color.accent.stable};\n      background: ${color.text.onDark.demi};\n    }\n    &.offline {\n      color: ${color.accent.danger};\n      background: ${color.text.onDark.bold};\n    }\n  }\n`;\n","export default {\n  ID: {\n    LENGTH: 20,\n    SYMBOLS: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  },\n  DAY: {\n    WIDTH: 30,\n    HEADER: {\n      HEIGHT: 85,\n      MILE_HEIGHT: 125,\n    },\n  },\n  CARD: {\n    HEIGHT: 30,\n    VERTICAL_SPACE: 35,\n    HORIZONTAL_SPACE: 15,\n    RESIZE_TOLERANCE: 7,\n    CARDDECK_MOUSE_POSITION_FIX: [1, 1],\n  },\n  LINE: {\n    MIN_WIDTH: 40,\n    INIT_WIDTH: 150,\n    MIN_WIDTH_COLLAPSE: 10,\n  },\n  MILE: {\n    MARGIN: 8,\n  },\n  LOCALE: navigator.language || 'en-US',\n  COLUMN_MULTIPLIER: 2, // should be even to make sure we can figure out 'today'\n  PLAN: {\n    FREE: {\n      LIMIT: {\n        ROADMAPS: 3,\n      },\n    },\n  },\n  TIME: {\n    DAYS_IN_MONTH: 30,\n    AUTOSAVE_MS: 3000,\n    LAST_ACTIVE: 60000,\n    MILLISECONDS_IN_DAY: 86400000,\n  },\n  URL: {\n    INDEX: '/',\n    SIGNUP: '/#signup',\n    LOGIN: '/login/',\n    ROOT: '/plans/',\n    PLAN: '/plan/',\n  },\n};\n","import React, { useMemo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { RoadmapTitle } from 'styles/Header';\n\nimport { State } from 'types/state';\n\nconst RoadmapList = ({ title }: { title: string }): JSX.Element | null => {\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const metas = useSelector((state: State) => state.metas);\n  const roadmapName = useMemo(() => (metas[currentRoadmapID] || { name: title }).name, [metas, currentRoadmapID]);\n  useEffect(() => {\n    if (document.title !== roadmapName) {\n      document.title = roadmapName === title ? title : `${roadmapName} • ${title}`;\n    }\n  }, [roadmapName]);\n\n  return <RoadmapTitle>{roadmapName}</RoadmapTitle>;\n};\n\nexport default React.memo(RoadmapList);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Check from '@material-ui/icons/CheckCircle';\nimport Cancel from '@material-ui/icons/Cancel';\n\nimport { State } from 'types/state';\nimport { getDataConnectionStatus } from 'data/connection';\n\nconst ConnectionStatus = (): JSX.Element | null => {\n  const user = useSelector((state: State) => state.user);\n  const [isConnected, setConnected] = useState(false);\n  useEffect(() => {\n    const notify = (status: boolean) => setConnected(status);\n    const connectionChannel = getDataConnectionStatus(notify);\n    return () => {\n      connectionChannel.close();\n    };\n  }, []);\n\n  return user.id ? isConnected ? <Check className=\"online\" /> : <Cancel className=\"offline\" /> : null;\n};\n\nexport default React.memo(ConnectionStatus);\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel } from 'redux-saga';\n\nexport const getDataConnectionStatus = (callback: (status: boolean) => void): EventChannel<boolean> =>\n  eventChannel(() => {\n    if (typeof firebase.database === 'function') {\n      const listener = firebase.database().ref('.info/connected');\n      listener.on('value', (snapshot) => {\n        callback(snapshot.val());\n      });\n      return () => {\n        listener.off();\n      };\n    }\n    return () => {};\n  });\n","import firebase from 'firebase/app';\n\nexport const writeUserLastActive = (userID: string): void =>\n  void firebase.database().ref(`users/${userID}`).update({\n    lastActive: Date.now(),\n  });\n","import colors from 'constants/colors';\nimport styled from 'styled-components';\n\nexport const DropdownGroup = styled.ul`\n  position: absolute;\n  min-width: 150px;\n  max-width: 300px;\n  background: ${colors.header.lite};\n  font-size: 13px;\n  border-radius: 4px;\n  right: 12px;\n  box-shadow: 0 3px 8px -4px ${colors.header.demi};\n  border: 1px solid ${colors.header.light.border};\n  color: ${colors.text.onLight.main};\n  margin: 4px 0 0;\n  padding: 0;\n  opacity: 0;\n  transition: 0.2s;\n  transform: translateY(-20px);\n  pointer-events: none;\n  z-index: 20;\n  &:before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border: 5px solid transparent;\n    margin: -5px;\n    z-index: -1;\n  }\n  li {\n    list-style: none;\n    padding: 7px 10px;\n    cursor: pointer;\n    & + li {\n      border-top: 1px solid ${colors.header.light.border};\n    }\n    &:first-child {\n      border-radius: 4px 4px 0 0;\n    }\n    &:last-child {\n      border-bottom-left-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n    &:hover {\n      background: ${colors.header.light.background};\n      color: ${colors.accent.active};\n    }\n  }\n`;\n\nexport const DropdownWraper = styled.div`\n  &:hover ${DropdownGroup} {\n    opacity: 1;\n    pointer-events: all;\n    transform: translateY(0);\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { handleAuthOut } from 'data/auth';\n\nimport { DropdownGroup } from 'styles/Common/Dropdown';\n\nimport { State } from 'types/state';\n\nconst Dropdown = (): JSX.Element => {\n  const user = useSelector((state: State) => state.user);\n  const authOut = () => handleAuthOut(user.id);\n  const noProfileEditYet = () => alert('Profile editing will be available in the near future');\n\n  return (\n    <DropdownGroup>\n      <li onClick={noProfileEditYet}>{user.name}</li>\n      <li onClick={authOut}>Log out</li>\n    </DropdownGroup>\n  );\n};\n\nexport default React.memo(Dropdown);\n","import firebase from 'firebase/app';\n\nimport { AuthFetch, AuthSuccess, AuthOut } from 'types/actions';\nimport { writeUserLastActive } from 'data/user';\n\nexport const login = () => {\n  if (typeof firebase.auth === 'function') {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().useDeviceLanguage();\n    void firebase.auth().signInWithRedirect(provider);\n  }\n};\n\nexport const handleAuthOut = (userID: string): void => {\n  writeUserLastActive(userID);\n  if (typeof firebase.auth === 'function') {\n    void firebase.auth().signOut();\n  }\n};\n\nexport const trackAuthChange = ({\n  fetching,\n  success,\n  out,\n}: {\n  fetching: () => AuthFetch;\n  success: (userData: AuthSuccess['payload']) => AuthSuccess;\n  out: () => AuthOut;\n}): void => {\n  fetching();\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user && user.email) {\n      success({\n        id: user.uid,\n        name: user.displayName || '',\n        email: user.email,\n        photoURL: user.photoURL || '',\n      });\n    } else {\n      out();\n    }\n  });\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport UserIcon from '@material-ui/icons/AccountBox';\n\nimport { AvatarBlock } from 'styles/Header';\n\nimport { State } from 'types/state';\nimport ConnectionStatus from 'components/Header/ConnectionStatus';\nimport Dropdown from 'components/Header/Dropdown';\nimport { DropdownWraper } from 'styles/Common/Dropdown';\n\nconst Avatar = (): JSX.Element => {\n  const { name, photoURL } = useSelector((state: State) => state.user);\n\n  return (\n    <DropdownWraper>\n      <AvatarBlock>\n        {photoURL ? <img src={photoURL} alt={name} /> : <UserIcon />}\n        <ConnectionStatus />\n      </AvatarBlock>\n      <Dropdown />\n    </DropdownWraper>\n  );\n};\n\nexport default React.memo(Avatar);\n","import React from 'react';\n\nimport app from 'constants/../../package.json';\n\nimport { HeaderBlock, Logo } from 'styles/Header';\nimport C from 'constants/index';\n\nimport Title from './Title';\n// import Tune from './Tune';\n// import Search from './Search';\nimport Avatar from './Avatar';\n\nconst Header = ({ isLoggedIn }: { isLoggedIn?: boolean }): JSX.Element => {\n  return (\n    <HeaderBlock className={`${isLoggedIn === false ? 'transparent' : ''}`}>\n      <Logo to={C.URL.ROOT} title={`Rebel Plans v${app.version}`}>\n        <sup>Rebel Plans</sup>\n        <sub>Roadmap Creation &amp; Project Planning Tool</sub>\n      </Logo>\n      {/* <Tune /> */}\n      <Title title={app.description} />\n      {/* <Search /> */}\n      <Avatar />\n    </HeaderBlock>\n  );\n};\n\nexport default React.memo(Header);\n","import { customAlphabet } from 'nanoid';\n\nimport C from 'constants/index';\n\nconst nanoid = customAlphabet(C.ID.SYMBOLS, C.ID.LENGTH);\nexport default (): string => nanoid();\n","import nanoid from 'utils/nanoid';\n\nimport { NewCard, NewCardProp, SelectionCancel, SelectionDelete, SelectCard, NewMile, SelectMile } from 'types/actions';\n\n// TODO: Actions should not generate IDs\n// TODO: Remove isNew and replace with empty string\n\nexport const newCard = ({ line, from, until }: NewCardProp): NewCard => ({\n  type: 'NEW_CARD',\n  payload: {\n    id: nanoid(),\n    isNew: true,\n    line,\n    from,\n    until,\n  },\n});\n\nexport const selectCard = ({ id }: { id: string }): SelectCard => ({\n  type: 'SELECT_CARD',\n  payload: {\n    id,\n    isNew: false,\n  },\n});\n\nexport const newMile = (date: string): NewMile => ({\n  type: 'NEW_MILE',\n  payload: {\n    id: nanoid(),\n    date,\n    isNew: true,\n  },\n});\n\nexport const selectMile = ({ id }: SelectMile['payload']): SelectMile => ({\n  type: 'SELECT_MILE',\n  payload: {\n    id,\n  },\n});\n\nexport const selectionCancel = (): SelectionCancel => ({\n  type: 'SELECTION_CANCEL',\n});\n\nexport const selectionDelete = ({ id }: { id: string }): SelectionDelete => ({\n  type: 'SELECTION_DELETE',\n  payload: {\n    id,\n  },\n});\n","import { CSSProperties } from 'react';\n\nimport C from 'constants/index';\nimport { weekendColor as wC } from 'constants/colors';\n\nimport { placeholderInitState } from './subscribtion';\nimport { getDaysDiff, getDaysInterval } from './dates';\n\nimport { PlaceholderData } from 'types/index';\nimport { Card } from 'types/state';\nimport { CardTypes } from 'types/card';\n\nexport const getColumnSize = (): number => Math.ceil(window.innerWidth / C.DAY.WIDTH);\n\nexport const getExtraMonths = (): number => Math.ceil((getColumnSize() * C.COLUMN_MULTIPLIER) / C.TIME.DAYS_IN_MONTH);\n\nexport const getPlaceholderWidth = (x1: number, x2: number): number =>\n  Math.max(Math.round((x2 - x1) / C.DAY.WIDTH + 0.3), 1) || 1;\n\nexport const getPlaceholderData = (x1: number, x2: number, y1: number, shouldSkipAim: boolean): PlaceholderData => {\n  if (shouldSkipAim || (x1 === 0 && y1 === 0)) {\n    return {\n      style: { opacity: '0' },\n    };\n  }\n  if (x2 === 0) {\n    return {\n      style: { transform: `translate(${x1}px, ${y1}px)`, opacity: '1' },\n    };\n  }\n  const size = getPlaceholderWidth(x1, x2);\n  return {\n    style: {\n      transform: `translate(${x1}px, ${y1}px)`,\n      width: String((size - 1) * C.DAY.WIDTH) + 'px',\n    },\n    size,\n  };\n};\n\nexport const getProgressBackgroud = (\n  complete?: number,\n  color1: string = '#0bad00',\n  color2: string = '#ddd'\n): CSSProperties | undefined =>\n  typeof complete === 'number'\n    ? { background: `linear-gradient(to right, ${color1} ${complete}%, ${color2} ${complete}%)` }\n    : undefined;\n\nexport const isAimOnCard = (aim: typeof placeholderInitState, cards: Array<Card>): boolean => {\n  const shortList = cards.filter(\n    (card) =>\n      card.line === aim.line && card.from.localeCompare(aim.date) <= 0 && card.until.localeCompare(aim.date) >= 0\n  );\n  if (shortList.some((card) => card.from === aim.date || card.until === aim.date)) {\n    return true;\n  }\n  return Boolean(shortList.length);\n};\n\nexport const getCardStatus = (from: string, until: string, today: string, progress?: number): CardTypes | undefined => {\n  // No progress => No status\n  if (progress === undefined) {\n    return;\n  }\n  // 'pending':  card is in the future or starting today and progress is zero\n  // 'progress': card is in the future and progress > zero || progress >= proportion of today in the timeframe\n  // 'delayed':  progress < proportion of today in the timeframe\n  // 'complete': progress is 100\n  // 'dropped':  card is in the past and progress is zero\n  if (progress === 100) {\n    return 'complete';\n  }\n  // Today is after Until (Card is in the past)\n  if (today.localeCompare(until) > 0) {\n    return 'dropped';\n  }\n  if (progress === 0) {\n    // From is before Today (Card from past without progress)\n    if (today.localeCompare(from) > 0) {\n      return 'delayed';\n    }\n    // From is not yet reached or Today (Card is in the plan)\n    if (today.localeCompare(from) <= 0) {\n      return 'pending';\n    }\n  }\n  // If progress is between 0 and 100 it's either in progress or delayed\n  const fromToToday = getDaysDiff(from, today);\n  const todayToUntilPlusOne = getDaysInterval(today, until);\n  const proportion = fromToToday / (fromToToday + todayToUntilPlusOne);\n  if (progress / 100 < proportion) {\n    return 'delayed';\n  } else {\n    return 'progress';\n  }\n};\n\nexport const autoscaleTextarea = (textarea: HTMLTextAreaElement, setFocus: boolean = false): void => {\n  textarea.style.height = 'inherit';\n  textarea.style.height = `${textarea.scrollHeight}px`;\n  if (setFocus && Number.isInteger(textarea.selectionStart)) {\n    textarea.selectionStart = textarea.value.length;\n    textarea.selectionEnd = textarea.value.length;\n  }\n};\n\nexport const hasCardChanged = (edited: Card, original?: Card): boolean => {\n  if (!original) {\n    return true;\n  }\n  const editedKeys = Object.keys(edited) as [keyof Card];\n  const originalKeys = Object.keys(original) as [keyof Card];\n  if (editedKeys.length !== originalKeys.length) {\n    return true;\n  }\n  return (\n    editedKeys.some((key) => original[key] !== edited[key]) || originalKeys.some((key) => original[key] !== edited[key])\n  );\n};\n\nexport const isCardValid = (selection: Card): boolean =>\n  selection.id !== '' &&\n  selection.line >= 0 &&\n  selection.text !== '' &&\n  (selection.progress === undefined ||\n    (Number.isInteger(selection.progress) && selection.progress >= 0 && selection.progress <= 100)) &&\n  selection.from.length === 10 &&\n  selection.until.length === 10 &&\n  getDaysDiff(selection.from, selection.until) >= 0;\n\nexport const scrollToToday = (list: HTMLElement, today: HTMLElement, smooth?: boolean): void =>\n  list.scroll({\n    left: today.offsetLeft + (today.parentElement ? today.parentElement.offsetLeft : 0) - window.innerWidth / 2,\n    behavior: smooth ? 'smooth' : 'auto',\n  });\n\nexport const checkInView = (blockLeft: number, blockWidth: number, deckScroll: number, deckWidth: number): boolean =>\n  blockLeft > deckScroll - blockWidth && blockLeft < deckScroll + deckWidth;\n\nexport const getCardsDeckHeight = (maxSize: number): { height: string } => ({\n  height: `${C.DAY.HEADER.HEIGHT + (maxSize + 2) /* starts with 0 and we add 1 more */ * C.CARD.VERTICAL_SPACE}px`,\n});\n\nexport const getMonthBackgroud = (fDay: number, dayWidth: number): string => {\n  /* TODO: Allow customized weekends & make weekend generation a separagte UI function */\n  const daysWidth = (offset: number): number => (offset - fDay) * dayWidth;\n  const relativePart = fDay\n    ? `transparent ${daysWidth(6)}px, ${wC} ${daysWidth(6)}px, ${wC} ${daysWidth(8)}px, transparent ${daysWidth(8)}px`\n    : `${wC} ${dayWidth}px, transparent ${dayWidth}px, transparent ${6 * dayWidth}px, ${wC} ${6 * dayWidth}px`;\n  return `linear-gradient(90deg, #e8e9ea 1px, transparent 1px), linear-gradient(90deg, ${relativePart})`;\n};\n\nexport const getInputIndexInGrandParent = (el: HTMLInputElement): { index: number; total: number } => {\n  if (el instanceof HTMLInputElement) {\n    const parent = el.parentElement;\n    if (parent instanceof HTMLElement) {\n      const grandParent = parent.parentElement;\n      if (grandParent instanceof HTMLElement) {\n        return {\n          index: ([].slice.call(grandParent.children) as HTMLElement[]).indexOf(parent) + 1,\n          total: grandParent.querySelectorAll('input').length,\n        };\n      }\n    }\n  }\n  return {\n    index: 0,\n    total: 0,\n  };\n};\n\nexport const setFocusWithoutRerender = (target: HTMLInputElement, focus: number) => {\n  const grandpa = target.parentElement?.parentElement;\n  const newTarget = grandpa?.querySelectorAll('input')[focus];\n  newTarget?.focus();\n};\n","import C from 'constants/index';\n\nimport { DateType, DateTypeWithWeek, FullDateType } from 'types';\nimport { MoveCard } from 'types/actions';\nimport { Cards } from 'types/state';\n\nimport { getExtraMonths } from 'utils/ui';\n\nexport const getTwoDigitDate = (number: number): string => `0${number}`.slice(-2);\n// export const getDataString = (date: DateType): string => `${date.year}-${date.month}-${date.day}`;\nexport const getMonthString = (date: DateType): string => `${date.year}-${getTwoDigitDate(date.month)}`;\n\nexport const getYMDFromTimestamp = (timestamp: number | Date): DateType => {\n  const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n  return {\n    year: date.getUTCFullYear(),\n    month: date.getUTCMonth() + 1,\n    day: date.getUTCDate(),\n  };\n};\n\nexport const getYMDWFromTimestamp = (timestamp: number | Date): DateTypeWithWeek => {\n  const date = getYMDFromTimestamp(timestamp);\n  const firstDay = new Date(timestamp);\n  firstDay.setUTCHours(0);\n  firstDay.setUTCDate(1);\n  return {\n    ...date,\n    firstWeekDay: firstDay.getUTCDay(),\n  };\n};\n\nexport const getWeekNumber = (timestamp: number): number => {\n  const date = new Date(timestamp);\n  date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));\n  const yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));\n  const dateDiff = date.getTime() - yearStart.getTime();\n  return Math.ceil((dateDiff / C.TIME.MILLISECONDS_IN_DAY + 1) / 7);\n};\nexport const getWeekdayFromTimestamp = (timestamp: number, long: boolean = true): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { weekday: long ? 'long' : 'narrow' });\n};\n\nexport const getMonthNameFromTimestamp = (timestamp: number): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { month: 'long' });\n};\n\nexport const getMonthName = (date: DateType): string => {\n  return new Date(date.year, date.month - 1, date.day).toLocaleDateString(C.LOCALE, { month: 'long' });\n};\n\nexport const getDateForTooltip = (date: DateType): [string, string] => {\n  const dateObject = new Date(date.year, date.month - 1, date.day);\n  return [\n    dateObject.toLocaleDateString(C.LOCALE, { weekday: 'short' }),\n    dateObject.toLocaleDateString(C.LOCALE, { day: 'numeric', month: 'long', year: 'numeric' }),\n  ];\n};\n\n// For now we assume weekends are only Saturdays & Sundays\nexport const isWeekend = (timestamp: number): boolean => new Date(timestamp).getDay() % 6 === 0;\n\nexport const getTodayTimestamp = (): number => {\n  const today = new Date();\n  return Date.UTC(today.getFullYear(), today.getMonth(), today.getDate());\n};\n\nexport const getDataString = (timestamp?: number | Date): string => {\n  if (timestamp instanceof Date) {\n    return timestamp.toISOString().slice(0, 10);\n  }\n  return new Date(timestamp || getTodayTimestamp()).toISOString().slice(0, 10);\n};\n\nexport const getLocalString = (timestamp: number = getTodayTimestamp()): string => {\n  const format = new Intl.DateTimeFormat(C.LOCALE, { dateStyle: 'long', timeStyle: 'short' });\n  return format.format(timestamp);\n};\n\nexport const getLocalDate = (date?: string): string | undefined => {\n  if (date) {\n    const time = new Date(date);\n    return new Intl.DateTimeFormat(C.LOCALE, { dateStyle: 'long' }).format(time);\n  }\n  return undefined;\n};\n\nexport const getFullDateFromTimestamp = (timestamp: number, isToday: boolean = false): FullDateType => ({\n  date: getYMDFromTimestamp(timestamp),\n  dateString: getDataString(timestamp),\n  monthName: getMonthNameFromTimestamp(timestamp),\n  weekDayName: getWeekdayFromTimestamp(timestamp),\n  weekDayShort: getWeekdayFromTimestamp(timestamp, false),\n  weekNumber: getWeekNumber(timestamp),\n  isWeekend: isWeekend(timestamp),\n  isToday,\n});\n\nexport const getDatesArray = (columnSize: number, todayTimestamp: number): FullDateType[] =>\n  Array(columnSize)\n    .fill(todayTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (index - columnSize / 2) * C.TIME.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, todayTimestamp === timestamp);\n    });\n\nexport const extendDatesArray = (datesArray: FullDateType[], extraDays: number, backward?: boolean): FullDateType[] => {\n  const lastDay = datesArray[backward ? 0 : datesArray.length - 1];\n  const lastTimestamp = Date.UTC(lastDay.date.year, lastDay.date.month - 1, lastDay.date.day);\n  const extraArray = Array(extraDays)\n    .fill(lastTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (backward ? index - extraDays : index + 1) * C.TIME.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, false);\n    });\n  return backward ? [...extraArray, ...datesArray] : [...datesArray, ...extraArray];\n};\n\nexport const getDaysDiff = (date1: string | Date, date2: string | Date): number => {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (date2.getTime() - date1.getTime()) / C.TIME.MILLISECONDS_IN_DAY;\n  }\n  return (new Date(date2).getTime() - new Date(date1).getTime()) / C.TIME.MILLISECONDS_IN_DAY;\n};\n\nexport const getDaysInterval = (date1: string, date2: string): number => getDaysDiff(date1, date2) + 1;\n\nexport const getDateFromDiff = (date: string, diff: number): string =>\n  getDataString(new Date(date).getTime() + diff * C.TIME.MILLISECONDS_IN_DAY);\n\nexport const getDaysInMonth = (year: number, month: number): number => new Date(year, month, 0).getDate();\n\nexport const getDaysDiffBetweenMonths = (date1: string, date2: string): number => {\n  const d1 = new Date(date1);\n  const d2 = new Date(date2);\n  d1.setDate(1);\n  d2.setDate(1);\n  return getDaysDiff(d1, d2);\n};\n\nexport const getExpandedDate = (year: number, month: number, offsetMonths: number): string => {\n  const isFuture = offsetMonths > 0;\n  const date = new Date(Date.UTC(year, month - (isFuture ? 0 : 1) + offsetMonths, isFuture ? 0 : 1));\n  return getDataString(date);\n};\n\nexport const getMilisecondsUntilTomorrow = (days: number = 1): number => {\n  const today = new Date();\n  const otherDay = new Date(today.getFullYear(), today.getMonth(), today.getDate() + days);\n  return otherDay.getTime() - today.getTime();\n};\n\nexport const getNewDates = ({ direction, dateDiff }: MoveCard['payload'], dates: string[]): string[] => {\n  switch (direction) {\n    case -1:\n      return [getDateFromDiff(dates[0], dateDiff), dates[1]];\n    case 1:\n      return [dates[0], getDateFromDiff(dates[1], dateDiff)];\n    default:\n      return dates.map((date) => getDateFromDiff(date, dateDiff));\n  }\n};\n\nexport const getMonthList = (from: string, until: string, date?: DateTypeWithWeek, swap = 1): DateTypeWithWeek[] => {\n  const [fromYear, fromMonth] = from.split('-');\n  const [untilYear, untilMonth] = until.split('-');\n  const { year, month } = until === '' && date ? date : { year: untilYear, month: untilMonth };\n  const yearMonth1 = [Number(fromYear), Number(fromMonth)];\n  const yearMonth2 = [Number(year), Number(month)];\n  const min = swap > 0 ? yearMonth1 : yearMonth2;\n  const max = swap < 0 ? yearMonth1 : yearMonth2;\n  const extraMonth = until === '' ? 0 : 1; // We need this extra month to add equal number of months before and after\n  const skipOneMonthForFuture = swap === -1 ? 1 : 0;\n\n  const yearsDiff = max[0] - min[0];\n  const monthsDiff = max[1] - min[1] + extraMonth + yearsDiff * 12;\n\n  // TODO: Ensure there is sufficient months offset around initially rendered months to avoid addition at scroll\n  return Array(monthsDiff)\n    .fill(0)\n    .map((_, index) => getYMDWFromTimestamp(new Date(min[0], min[1] + index + skipOneMonthForFuture)));\n};\n\nexport const getExtendedMonthList = (months: DateTypeWithWeek[], i: number, offset: string): DateTypeWithWeek[] => {\n  const swap = i === 0 ? 1 : -1;\n  const newMonths = getMonthList(offset, '', months[i], swap);\n  Array.prototype[i ? 'push' : 'unshift'].apply(months, newMonths);\n  return months;\n};\n\nexport const getFromUntil = (cards: Cards): { from: string; until: string } =>\n  Object.values(cards).reduce(\n    ({ from, until }, card) => {\n      if (from === '') {\n        return { from: card.from, until: card.until };\n      }\n      return {\n        from: from.localeCompare(card.from) < 0 ? from : card.from,\n        until: until.localeCompare(card.until) > 0 ? until : card.until,\n      };\n    },\n    { from: '', until: '' }\n  );\n\nexport const getUIOffset = (\n  from: string,\n  until: string,\n  todayString: string\n): { fromOffset: string; untilOffset: string } => {\n  const min = from ? (from.localeCompare(todayString) <= 0 ? from : todayString) : todayString;\n  const max = until ? (todayString.localeCompare(until) < 0 ? until : todayString) : todayString;\n\n  const extraMonths = getExtraMonths();\n  return {\n    fromOffset: getExpandedDate(Number(min.slice(0, 4)), Number(min.slice(5, 7)), -extraMonths),\n    untilOffset: getExpandedDate(Number(max.slice(0, 4)), Number(max.slice(5, 7)), extraMonths),\n  };\n};\n","import { getTwoDigitDate } from './dates';\n\nimport { DateTypeWithWeek } from 'types';\n\nexport type SubscribtionStatus = {\n  started?: boolean;\n  x1?: number;\n  x2?: number;\n  y1?: number;\n  line?: number;\n  date?: string;\n  done?: boolean;\n};\nexport type Callback<T> = (status: T) => void;\nexport type SetNotification<T> = (fn: Callback<T>) => void;\nexport type Subscribtion<T> = (status: T) => {\n  notify: SetNotification<T>;\n  update: Callback<T>;\n  setMonths: Callback<DateTypeWithWeek[]>;\n};\n\nexport const subscribtion: Subscribtion<SubscribtionStatus> = (init) => {\n  let status = init;\n  let months: DateTypeWithWeek[] = [];\n  let callItBack: Callback<SubscribtionStatus> | undefined;\n  return {\n    notify: (fn) => {\n      callItBack = fn;\n    },\n    update: (update) => {\n      if (update.date) {\n        const [m, d] = update.date.split('-').map((x) => parseInt(x, 10));\n        update.date = m ? `${months[m].year}-${getTwoDigitDate(months[m].month)}-${getTwoDigitDate(d)}` : status.date;\n      } else {\n        update.date = status.date;\n      }\n      status = update;\n      callItBack && callItBack(status);\n    },\n    setMonths: (newMonths: DateTypeWithWeek[]) => {\n      months = newMonths;\n    },\n  };\n};\n\nexport const placeholderInitState = {\n  started: false,\n  x1: 0,\n  x2: 0,\n  y1: 0,\n  line: 0,\n  date: '',\n  done: false,\n};\nexport const placeholder = subscribtion(placeholderInitState);\n\nexport const passID = (() => {\n  let id = '';\n  return {\n    set: (newID: string) => (id = newID),\n    get: () => id,\n  };\n})();\n","import C from 'constants/index';\n\nimport { placeholder } from './subscribtion';\n\nexport const putPlaceholder = (): void => {\n  placeholder.update({\n    started: true,\n  });\n};\n\nexport const movePlaceholder = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n  const curTarget = e.currentTarget as HTMLUListElement;\n  const target = e.target as HTMLLIElement;\n  if (target.parentElement === curTarget) {\n    const rect: ClientRect = curTarget.getBoundingClientRect();\n    const childRect: ClientRect = target.getBoundingClientRect();\n    const line = Math.floor((e.clientY - rect.top + curTarget.scrollTop - C.DAY.HEADER.HEIGHT) / C.CARD.VERTICAL_SPACE);\n    if (line >= 0) {\n      let month = -1;\n      Array.from(curTarget.children).some((item) => {\n        if (item instanceof HTMLElement && item.offsetWidth) {\n          month = month + 1;\n        }\n        return item === target;\n      });\n      placeholder.update({\n        x1: Math.trunc((target.offsetLeft + e.clientX - childRect.left) / C.DAY.WIDTH) * C.DAY.WIDTH,\n        x2: e.clientX - rect.left + curTarget.scrollLeft,\n        y1: C.DAY.HEADER.HEIGHT + line * C.CARD.VERTICAL_SPACE,\n        date: `${month}-${Math.max(Math.floor((e.clientX - childRect.left) / C.DAY.WIDTH), 0) + 1}`,\n        line,\n      });\n    }\n  }\n};\n\nexport const removePlaceholder = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n  if (e.type === 'mouseup') {\n    placeholder.update({\n      started: false,\n      done: true,\n    });\n  } else {\n    const target = e.relatedTarget as HTMLElement;\n    // TODO: check if we still need `data-form` attribute\n    if (!target || !target.getAttribute || target.getAttribute('data-form') !== 'edit') {\n      placeholder.update({\n        started: false,\n      });\n    }\n  }\n};\n","import C from 'constants/index';\n\nimport { putPlaceholder, movePlaceholder, removePlaceholder } from './placeholderActions';\nimport { passID } from './subscribtion';\n\nimport { MoveCard } from 'types/actions';\n\ntype EventHandler = (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n\ntype CardActions = {\n  pressInZone: EventHandler;\n  moveInZone: EventHandler;\n  releaseInZone: EventHandler;\n  enterZone: EventHandler;\n  leaveZone: EventHandler;\n};\n\nconst [mXFix, mYFix] = C.CARD.CARDDECK_MOUSE_POSITION_FIX;\n\nconst getMousePositionFromCardDeck = (button: HTMLButtonElement, target: HTMLElement): number[] => {\n  if (button === target) {\n    return [button.offsetLeft, button.offsetTop];\n  }\n  if (target instanceof HTMLButtonElement) {\n    return [target.offsetLeft, target.offsetTop];\n  }\n  const cardDeck = button.parentElement as HTMLLIElement;\n  return [target.offsetLeft - cardDeck.offsetLeft - mXFix, target.offsetTop - cardDeck.offsetTop - mYFix];\n};\n\nconst getCoords = (\n  e: React.MouseEvent<HTMLElement, MouseEvent>,\n  coord: number[],\n  el: HTMLButtonElement\n): [number, number] => {\n  const target = e.target as HTMLElement;\n  const nativeEvent = e.nativeEvent;\n  const [mX, mY] = getMousePositionFromCardDeck(el, target);\n  const x = mX + nativeEvent.offsetX - coord[0];\n  const y = mY + nativeEvent.offsetY - coord[1];\n  return [x, y];\n};\n\nexport default (moveCard: (moveCard: MoveCard['payload']) => void): CardActions => {\n  const card = {\n    coord: [0, 0],\n    width: 0,\n    el: null as HTMLButtonElement | null,\n  };\n  const resize = {\n    limit: 0,\n    pressX: 0,\n    direction: 0,\n    extraSize: 0,\n  };\n  let dateTable: HTMLUListElement | null = null;\n  let setAim = false;\n\n  const removeDateTable = () => {\n    if (dateTable) {\n      dateTable.classList.remove('drag');\n      dateTable = null;\n    }\n  };\n\n  const clearDesk = (immidiate: boolean, wasResized: boolean = false): void => {\n    if (!card.el || !dateTable) {\n      return;\n    }\n    if (wasResized) {\n      resize.limit = 0;\n      resize.pressX = 0;\n      resize.direction = 0;\n      resize.extraSize = 0;\n      dateTable.style.cursor = '';\n    }\n    card.el.style.pointerEvents = '';\n    card.el.style.transform = '';\n    card.el.style.opacity = '';\n    card.el.style.zIndex = '';\n    card.el = null;\n    if (immidiate) {\n      removeDateTable();\n    } else {\n      setTimeout(removeDateTable, 10);\n    }\n  };\n\n  const pressInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (card.el) {\n      return;\n    }\n    if (e.target instanceof HTMLButtonElement) {\n      dateTable = e.currentTarget as HTMLUListElement;\n      dateTable.classList.add('drag');\n      card.el = e.target;\n      const { clientWidth, offsetLeft, offsetTop } = card.el;\n      const { offsetX, offsetY, clientX } = e.nativeEvent;\n      if (offsetX < C.CARD.RESIZE_TOLERANCE || clientWidth - offsetX < C.CARD.RESIZE_TOLERANCE) {\n        dateTable.style.cursor = 'ew-resize';\n        resize.pressX = clientX;\n        resize.direction = offsetX < C.CARD.RESIZE_TOLERANCE ? -1 : 1;\n        card.width = parseInt(card.el.style.width, 10);\n        resize.limit = (card.width - C.CARD.HORIZONTAL_SPACE) / -C.DAY.WIDTH;\n        return;\n      }\n      card.coord = [offsetLeft + offsetX, offsetTop + offsetY];\n    } else if (e.target instanceof HTMLDivElement) {\n      setAim = true;\n      putPlaceholder();\n    }\n  };\n  const moveInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (!card.el) {\n      if (e.target instanceof HTMLDivElement) {\n        movePlaceholder(e);\n      }\n      return;\n    }\n    if (!card.el.style.transform) {\n      card.el.style.pointerEvents = 'none';\n      card.el.style.zIndex = '5';\n    }\n    if (resize.direction === 0) {\n      const [x, y] = getCoords(e, card.coord, card.el);\n      if (e.clientY < C.DAY.HEADER.MILE_HEIGHT) {\n        card.el.style.opacity = '0';\n      } else {\n        card.el.style.transform = `translate(${x}px, ${y}px)`;\n        if (card.el.style.opacity !== '') {\n          card.el.style.opacity = '';\n        }\n      }\n    } else {\n      const { clientX } = e.nativeEvent;\n      const diffX = clientX - resize.pressX;\n      const extra =\n        resize.direction < 0\n          ? Math.round((C.CARD.RESIZE_TOLERANCE - diffX) / C.DAY.WIDTH)\n          : Math.ceil((diffX - C.CARD.RESIZE_TOLERANCE) / C.DAY.WIDTH);\n      resize.extraSize = Math.max(extra, resize.limit);\n      const extraX = resize.extraSize * C.DAY.WIDTH;\n      card.el.style.width = `${card.width + extraX}px`;\n      if (resize.direction < 0) {\n        card.el.style.transform = `translateX(${-extraX}px)`;\n      }\n    }\n  };\n  const releaseInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    const id = passID.get();\n    if (resize.direction !== 0) {\n      if (resize.extraSize) {\n        if (id) {\n          moveCard({\n            id,\n            direction: resize.direction,\n            lineDiff: 0,\n            dateDiff: resize.extraSize * resize.direction,\n          });\n        } else {\n          throw Error('Card ID is missing, card will not be resized.');\n        }\n      }\n      clearDesk(card.el === e.target, true);\n      return;\n    }\n    if (card.el) {\n      if (card.el.style.opacity === '0') {\n        return;\n      }\n      if (card.el !== e.target) {\n        const [x, y] = getCoords(e, card.coord, card.el);\n        if (id) {\n          const lineDiff = Math.round(y / C.CARD.VERTICAL_SPACE);\n          const dateDiff = Math.round(x / C.DAY.WIDTH);\n          if (lineDiff || dateDiff) {\n            moveCard({\n              id,\n              direction: 0,\n              lineDiff,\n              dateDiff,\n            });\n          }\n        } else {\n          throw Error('Card ID is missing, card will not be moved.');\n        }\n      }\n      clearDesk(card.el === e.target);\n    } else if (setAim) {\n      setAim = false;\n      removePlaceholder(e);\n    }\n  };\n  const leaveZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (e.type === 'mouseout') {\n      if (\n        e.relatedTarget instanceof HTMLButtonElement ||\n        e.relatedTarget instanceof HTMLHtmlElement ||\n        e.relatedTarget instanceof HTMLSpanElement ||\n        e.relatedTarget === null ||\n        (e.relatedTarget instanceof HTMLElement &&\n          (e.relatedTarget.tagName.toLowerCase() === 'aside' ||\n            e.relatedTarget.parentElement?.tagName.toLowerCase() === 'aside'))\n      ) {\n        removePlaceholder(e);\n        setAim = false;\n      }\n      return;\n    }\n    if (card.el && !(e.target instanceof HTMLButtonElement) && resize.direction === 0) {\n      card.el.style.opacity = '0';\n    }\n  };\n  const enterZone = (): void => {\n    if (setAim) {\n      setAim = false;\n    }\n    if (card.el && card.el.style.opacity !== '') {\n      card.el.style.opacity = '';\n    }\n  };\n\n  return {\n    pressInZone,\n    moveInZone,\n    releaseInZone,\n    enterZone,\n    leaveZone,\n  };\n};\n","import { EditCard, MoveCard } from 'types/actions';\n\nexport const editCard = (props: EditCard['payload']): EditCard => ({\n  type: 'EDIT_CARD',\n  payload: {\n    ...props,\n  },\n});\n\nexport const moveCard = (props: MoveCard['payload']): MoveCard => ({\n  type: 'MOVE_CARD',\n  payload: {\n    ...props,\n  },\n});\n","export type Card = {\n  id: string;\n  line: number;\n  text: string;\n  from: string;\n  until: string;\n  progress?: number;\n};\n\nexport type Lines = {\n  names: {\n    [key: string]: string;\n  };\n};\n\nexport type Long = string;\n\nexport type Mile = {\n  id: string;\n  text: string;\n  date: string;\n  from?: never;\n  until?: never;\n  progress?: never;\n};\n\nexport type Meta = {\n  createdAt: number;\n  name: string;\n  owner: string;\n  share?: {\n    [email: string]: 'edit' | 'view';\n  };\n  stats: {\n    cards: number;\n    from: string;\n    until: string;\n  };\n};\n\nexport enum ElementType {\n  card = 'card',\n  line = 'line',\n  mile = 'mile',\n  none = '',\n}\n\nexport type List<Type> = {\n  [key: string]: Type;\n};\n\nexport type Cards = List<Card>;\nexport type Longs = List<Long>;\nexport type Miles = List<Mile>;\n\nexport interface PersistentState {\n  cards: Cards;\n  lines: Lines;\n  longs: Longs;\n  miles: Miles;\n}\n\nexport interface FetchedData extends PersistentState {\n  roadmapID: string;\n}\n\nexport type SelectedElement = Card | Mile;\n\nexport interface ExtendedCard extends Card {\n  isNew: boolean;\n  type: ElementType;\n}\nexport interface ExtendedMile extends Mile {\n  isNew: boolean;\n  type: ElementType;\n}\n\nexport type Selection = ExtendedCard | ExtendedMile;\n\nexport interface UserSettings {\n  lineNameWidth: number;\n}\n\nexport interface State extends PersistentState {\n  selection: Selection;\n  user: {\n    id: string;\n    name: string;\n    email: string;\n    photoURL: string;\n    fetchig: boolean;\n    roadmaps: {\n      [key: string]: UserSettings;\n    };\n    roadmapsSet: boolean;\n  };\n  metas: List<Meta>;\n  ui: {\n    currentRoadmapID: string;\n    todayTimestamp: number;\n    cardsPosition: string;\n    fromOffset: string;\n    untilOffset: string;\n  };\n}\n","import styled from 'styled-components';\n\nexport const PlaceholderBlock = styled.span`\n  position: absolute;\n  display: block;\n  height: 26px;\n  line-height: 28px;\n  border: ${(props: { solid: boolean }) => (props.solid ? '1px dashed #999' : '1px dashed #ddd')};\n  border-radius: 5px;\n  padding: 0 13px 0 12px;\n  box-shadow: 0 2px 5px -2px rgba(0, 0, 0, 0.2);\n  margin: 1px 2px;\n  background: rgba(255, 255, 255, 0.5);\n  pointer-events: none;\n  left: 0;\n  top: 0;\n`;\n\nexport const PlaceholderContent = styled.span`\n  display: inline-block;\n  font-weight: lighter;\n  position: absolute;\n  text-align: right;\n  font-size: 12px;\n  color: #999;\n  right: 7px;\n  left: 7px;\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { newCard } from 'state/actions/selection';\nimport { placeholder, placeholderInitState } from 'utils/subscribtion';\nimport { isAimOnCard, getPlaceholderData, getPlaceholderWidth } from 'utils/ui';\nimport { getDateFromDiff } from 'utils/dates';\n\nimport { PlaceholderBlock, PlaceholderContent } from 'styles/Placeholder';\n\nimport { State, ElementType } from 'types/state';\n\nconst Placeholder = (): JSX.Element => {\n  const [aim, setAim] = useState(placeholderInitState);\n  const cards = useSelector((state: State) => state.cards);\n  const memoizedCards = useMemo(() => Object.values(cards), [cards]);\n  const isAimHoversCard = useMemo(() => isAimOnCard(aim, memoizedCards), [aim, memoizedCards]);\n  const selectionType = useSelector((state: State) => state.selection.type);\n  useEffect(() => {\n    if (selectionType === ElementType.none) {\n      setAim(placeholderInitState);\n    }\n  }, [selectionType]);\n  const dispatch = useDispatch();\n\n  placeholder.notify(({ started, x1, x2, y1, line, date = '', done = false }) => {\n    if (started !== undefined && !isAimHoversCard) {\n      if (started && started !== aim.started) {\n        setAim({\n          ...aim,\n          started,\n          date: date,\n          x2: aim.x1,\n        });\n      } else if (aim.started && done) {\n        dispatch(\n          newCard({\n            line: aim.line,\n            from: aim.date,\n            until: getDateFromDiff(aim.date, getPlaceholderWidth(aim.x1, aim.x2) - 1),\n          })\n        );\n      } else {\n        setAim(placeholderInitState);\n      }\n    }\n    if (x1 !== undefined && y1 !== undefined && line !== undefined) {\n      if (aim.started === false) {\n        if (aim.x1 !== x1 || aim.y1 !== y1) {\n          setAim({\n            ...aim,\n            x1,\n            y1,\n            line,\n            date,\n          });\n        }\n      } else if (x2 !== undefined) {\n        setAim({\n          ...aim,\n          x2,\n        });\n      }\n    }\n  });\n\n  const shouldSkipAim = (aim.x1 === 0 && aim.y1 === 0) || isAimHoversCard;\n  const { style, size } = getPlaceholderData(aim.x1, aim.x2, aim.y1, shouldSkipAim);\n\n  return (\n    <PlaceholderBlock solid={aim.started} style={style}>\n      <PlaceholderContent>{size}</PlaceholderContent>\n    </PlaceholderBlock>\n  );\n};\n\nexport default React.memo(Placeholder);\n","import React from 'react';\n\nconst Day = ({\n  day,\n  weekDay,\n  tip,\n  isToday,\n}: {\n  day: number;\n  weekDay: string;\n  tip: string;\n  isToday: boolean;\n}): JSX.Element => {\n  const className = isToday ? 'today' : undefined;\n  return (\n    <span className={className} data-weekday={weekDay} title={tip}>\n      {day}\n    </span>\n  );\n};\n\nexport default Day;\n","import styled from 'styled-components';\n\nexport const MileBlock = styled.mark`\n  position: absolute;\n  top: 0;\n  width: 14px;\n  height: 15px;\n  color: #ff7a7a;\n  margin: 0 8px 0 9px;\n  background: currentColor;\n  cursor: pointer;\n  box-shadow: inset 0 2px 2px rgba(0, 0, 0, 0.2);\n  user-select: none;\n  pointer-events: all;\n  &:before {\n    content: attr(data-text);\n    position: absolute;\n    background: linear-gradient(0, transparent 50%, #f9797a 50%);\n    top: 12px;\n    left: 6px;\n    width: 2px;\n    height: 100vh;\n    font-size: 12px;\n    line-height: 0;\n    text-indent: 12px;\n    font-weight: bold;\n    background-size: 1px 16px;\n    pointer-events: none;\n    z-index: -1;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    top: 10px;\n    left: 1px;\n    width: 12px;\n    height: 12px;\n    background: inherit;\n    transform: rotate(45deg) scale(0.8) translate(-0.7px, -0.7px);\n    z-index: -1;\n  }\n`;\n\nexport const MilePlaceholder = styled.mark`\n  position: absolute;\n  background: transparent;\n  width: 30px;\n  height: 25px;\n  z-index: -5;\n  color: #ff7a7a;\n  cursor: pointer;\n  &:before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    width: 14px;\n    height: 18px;\n    margin: 0 7px 0 9px;\n    user-select: none;\n    pointer-events: all;\n    border: 1px solid;\n    border-bottom: none;\n    background: #fff;\n    box-sizing: border-box;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    width: 12px;\n    height: 12px;\n    background: #fff;\n    border: 1px solid;\n    box-sizing: border-box;\n    transform: rotate(45deg) scale(0.8) translate(-0.7px, -0.7px);\n    z-index: -1;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectMile } from 'state/actions/selection';\n\nimport { MileBlock } from 'styles/MileBlock';\n\nimport { DateType } from 'types';\nimport { State } from 'types/state';\nimport { getMonthString } from 'utils/dates';\nimport C from 'constants/index';\n\nconst Mile = ({ date }: { date: DateType }): JSX.Element => {\n  const milesObject = useSelector((state: State) => state.miles);\n  const dispatch = useDispatch();\n\n  const combinedDate = getMonthString(date);\n  const MonthMiles = Object.values(milesObject)\n    .filter((mile) => mile.date.slice(0, 7) === combinedDate)\n    .map((mile) => {\n      const dayOffset = (parseInt(mile.date.slice(8)) - 1) * C.DAY.WIDTH;\n      const todayMileStyle = { left: dayOffset + 'px' };\n      const handleClick = () => dispatch(selectMile({ id: mile.id }));\n\n      return <MileBlock key={mile.id} onClick={handleClick} data-text={mile.text} style={todayMileStyle} />;\n    });\n  return <>{MonthMiles}</>;\n};\n\nexport default React.memo(Mile);\n","import React, { useState, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getDateForTooltip, getMonthName, getMonthString, getTwoDigitDate } from 'utils/dates';\nimport Day from 'components/Deck/Day';\nimport Mile from 'components/Deck/Mile';\n\nimport { DateType } from 'types';\nimport C from 'constants/index';\nimport { MilePlaceholder } from 'styles/MileBlock';\nimport { newMile } from 'state/actions/selection';\n\nconst Month = ({ date, today }: { date: DateType; today: DateType }): JSX.Element => {\n  const dispatch = useDispatch();\n  const monthName = `${getMonthName(date)} ${date.year}`;\n  const days = Array(date.day)\n    .fill(date)\n    .map(({ year, month }: { year: number; month: number }, i: number) => {\n      const day = i + 1;\n      const isToday = today.year === year && today.month === month && today.day === day;\n      const [weekDay, tip] = getDateForTooltip({ year, month, day });\n      return <Day key={day} day={day} weekDay={weekDay} tip={tip} isToday={isToday} />;\n    });\n\n  const [mileOffset, setMileOffset] = useState(-1);\n  const placeholderStyle = useMemo(\n    () => ({\n      left: mileOffset * C.DAY.WIDTH + 'px',\n      display: mileOffset >= 0 ? 'block' : 'none',\n    }),\n    [mileOffset]\n  );\n\n  const handleMove = (e: React.MouseEvent) => {\n    const target = e.target as HTMLElement;\n    if (target.tagName.toLowerCase() === 'aside') {\n      setMileOffset(Math.floor((e.clientX - target.getBoundingClientRect().left) / C.DAY.WIDTH));\n    }\n  };\n  const handleLeave = () => setMileOffset(-1);\n  const handleClick = () => dispatch(newMile(`${getMonthString(date)}-${getTwoDigitDate(mileOffset + 1)}`));\n\n  return (\n    <React.Fragment>\n      <aside className=\"monthname\">{monthName}</aside>\n      <aside className=\"days\">{days}</aside>\n      <aside className=\"mile\" onMouseMove={handleMove} onMouseLeave={handleLeave}>\n        <Mile date={date} />\n        <MilePlaceholder onClick={handleClick} style={placeholderStyle} />\n      </aside>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Month);\n","import styled from 'styled-components';\n\nimport C from 'constants/index';\nimport { getMonthBackgroud } from 'utils/ui';\n\nexport const DeckBlock = styled.section`\n  font-size: 0;\n  width: 100vw;\n  height: 100%;\n  overflow: scroll;\n  white-space: nowrap;\n  position: relative;\n  user-select: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const DeckInner = styled.section`\n  display: flex;\n  min-height: calc(100vh - 45px);\n`;\n\nexport const MonthsBlock = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n  box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.2);\n  background-image: ${({ firstDay }: { firstDay: number }) => getMonthBackgroud(firstDay, C.DAY.WIDTH)};\n  background-size: ${C.DAY.WIDTH}px 100%, ${C.DAY.WIDTH * 7}px 100%;\n  .monthname {\n    height: 54px;\n    font-size: 12px;\n    width: 100%;\n    padding: 8px 12px 3px;\n    margin-top: -100%;\n    position: sticky;\n    top: 0;\n    z-index: 8;\n    cursor: default;\n    background: #f7f8f9;\n    box-sizing: border-box;\n    color: #bbb;\n    box-shadow: rgba(0, 0, 0, 0.2) 2px 2px 2px, rgba(0, 0, 0, 0.06) 1px 0 0 inset;\n    pointer-events: all;\n  }\n  .days {\n    top: 25px;\n    position: sticky;\n    margin-top: -100%;\n    z-index: 9;\n    cursor: default;\n    user-select: none;\n    span {\n      width: 14px;\n      display: inline-block;\n      height: 14px;\n      font-size: 12px;\n      line-height: 14px;\n      padding: 8px 7px 7px 9px;\n      text-align: center;\n      color: #999;\n      position: relative;\n      z-index: 1;\n      &:before {\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        left: 6px;\n        top: 5px;\n        border-radius: 50px;\n        z-index: -1;\n      }\n      &.today {\n        color: #fff;\n        &:hover {\n          color: #f00;\n          &:after {\n            background: #f00;\n          }\n        }\n        &:before {\n          content: '';\n          background: #f00;\n        }\n      }\n      &:hover {\n        transform: translateY(3px);\n        font-size: 10px;\n        padding-bottom: 4px;\n        &:before {\n          content: '';\n          background: transparent;\n          border: 1px solid currentColor;\n          left: 6px;\n          top: 1px;\n          border-radius: 3px;\n          width: 18px;\n          height: 18px;\n        }\n        &:after {\n          content: attr(data-weekday);\n          position: absolute;\n          width: 20px;\n          height: 8px;\n          background: #999;\n          font-size: 7px;\n          color: #fff;\n          line-height: 8px;\n          top: 2px;\n          border-radius: 3px 3px 0 0;\n          left: 6px;\n        }\n      }\n    }\n  }\n  .mile {\n    top: 54px;\n    position: sticky;\n    margin-top: -100%;\n    cursor: default;\n    user-select: none;\n    width: 100%;\n    height: 25px;\n  }\n`;\n\nexport const Today = styled.mark`\n  position: absolute;\n  top: 0;\n  width: 2px;\n  height: 100%;\n  background: linear-gradient(#f00, #8c0756);\n  pointer-events: none;\n`;\n\nexport const TodayScroll = styled.button`\n  border: none;\n  font-size: 12px;\n  position: absolute;\n  right: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition > 0 ? '0' : '100%')};\n  transform: ${({ scrollPosition }: { scrollPosition: number }) =>\n    scrollPosition === 0\n      ? 'translate(0)'\n      : scrollPosition > 0\n      ? 'translate(-12px)'\n      : 'translate(100%) translate(12px)'};\n  background: #f7f8f9;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  margin: 3px auto;\n  line-height: 24px;\n  padding: 0 7px;\n  transition: box-shadow 0.1s, transform 0.1s, opacity 0.1s;\n  cursor: pointer;\n  z-index: 10;\n  color: #555;\n  user-select: none;\n  opacity: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? '0' : '1')};\n  pointer-events: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? 'none' : undefined)};\n  &:hover {\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  }\n  &:before {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition < 0 && `\"\\\\276E\"`};\n    color: #f00;\n    margin: 0 7px 0 3px;\n  }\n  &:after {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition > 0 && `\"\\\\276F\"`};\n    color: #f00;\n    margin: 0 3px 0 7px;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Month from 'components/Deck/Month';\nimport { getYMDFromTimestamp } from 'utils/dates';\n\nimport C from 'constants/index';\n\nimport { MonthsBlock, Today } from 'styles/DateTable';\n\nimport { DateTypeWithWeek } from 'types';\nimport { State } from 'types/state';\n\nconst MonthsList = ({\n  todayRef,\n  months,\n  children,\n}: {\n  todayRef: React.RefObject<HTMLElement>;\n  months: DateTypeWithWeek[];\n  children: JSX.Element;\n}): JSX.Element => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const today = useMemo(() => getYMDFromTimestamp(todayTimestamp), [todayTimestamp]);\n  const cardsPosition = useSelector((state: State) => state.ui.cardsPosition);\n  const [cardsYear, cardsMonth] = useMemo(() => cardsPosition.split('-').map((val) => Number(val)), [cardsPosition]);\n  const todayStyle = useMemo(() => ({ left: `${today.day * C.DAY.WIDTH - C.DAY.WIDTH / 2}px` }), [today]);\n\n  const MonthBlock = useMemo(\n    () =>\n      function MonthMemo(\n        key: string,\n        monthStyle: {\n          width: string;\n        },\n        firstWeekDay: number,\n        isToday: boolean,\n        date: DateTypeWithWeek\n      ): JSX.Element {\n        return (\n          <MonthsBlock key={key} style={monthStyle} firstDay={firstWeekDay}>\n            {isToday && <Today ref={todayRef} style={todayStyle} />}\n            <Month date={date} today={today} />\n          </MonthsBlock>\n        );\n      },\n    [todayRef, todayStyle, today]\n  );\n\n  return (\n    <React.Fragment>\n      {months.map((date: DateTypeWithWeek) => {\n        const { year, month, day, firstWeekDay } = date;\n        const key = `${year}-${month}`;\n        const monthStyle = { width: `${day * C.DAY.WIDTH}px` };\n        const isToday = today.year === year && today.month === month;\n        if (cardsYear === year && cardsMonth === month) {\n          return (\n            <React.Fragment key={key}>\n              {children}\n              {MonthBlock(key, monthStyle, firstWeekDay, isToday, date)}\n            </React.Fragment>\n          );\n        }\n        return MonthBlock(key, monthStyle, firstWeekDay, isToday, date);\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default MonthsList;\n","import styled from 'styled-components';\n\nimport { CardTypes } from 'types/card';\nimport C from 'constants/index';\nimport colors, { statusColorMap } from 'constants/colors';\n\nexport const CardWaraper = styled.section`\n  display: inline-block;\n  position: relative;\n  z-index: 2;\n`;\n\nexport const DeckLineCounter = styled.aside`\n  float: left;\n  position: sticky;\n  left: 0;\n  width: 0;\n  z-index: 8;\n  &:hover div {\n    border-color: #aaa;\n    color: ${colors.text.onLight.bold};\n    &[data-name]:after {\n      transform: translate(6px);\n    }\n    &:hover:after {\n      transform: translateX(100%);\n    }\n  }\n  section {\n    width: 20px;\n    padding: ${C.DAY.HEADER.HEIGHT}px 0 5px;\n    min-height: calc(100vh - 135px);\n    &.edit {\n      width: 150px;\n      background: #f7f8f9e6;\n      border-right: 1px solid #ccc;\n      padding-bottom: 5px;\n      position: relative;\n      aside {\n        position: fixed;\n        top: 99px;\n        left: 150px;\n        width: 6px;\n        height: calc(100% - 99px);\n        margin-left: -6px;\n        cursor: ew-resize;\n        z-index: 1;\n        &.drag:before {\n          content: '';\n          width: 2000px;\n          height: 100%;\n          margin-left: -1000px;\n          position: absolute;\n        }\n        hr {\n          position: absolute;\n          top: 50%;\n          left: 2px;\n          height: 26px;\n          border-width: 0;\n          border-left: 2px dotted #ccc;\n          margin-top: -12px;\n        }\n        &.drag hr,\n        &:hover hr {\n          border-color: #999;\n        }\n      }\n      button {\n        display: inline-block;\n        position: absolute;\n        top: 61px;\n        right: 7px;\n        color: #aaa;\n        line-height: 0;\n        font-size: 17px;\n        cursor: pointer;\n        border-radius: 4px;\n        padding: 10px 4px 8px;\n        border: 1px solid #ccc;\n        &:hover {\n          background: #d9d9de;\n          color: #333;\n        }\n      }\n      &:not(.hidden) div {\n        border-radius: 0;\n        border-color: #ccc;\n        color: ${colors.text.onLight.bold};\n        cursor: default;\n        &:after {\n          content: none;\n        }\n        input {\n          position: absolute;\n          left: 12px;\n          border: 1px solid #ccc;\n          margin: -1px;\n          border-radius: 0 4px 4px 0;\n          padding: 5px;\n          border-left: 0;\n          font-size: 12px;\n          line-height: 18px;\n          background: #f7f8f9;\n          width: calc(100% - 28px);\n        }\n      }\n    }\n    &.edit.hidden div input {\n      display: none;\n    }\n  }\n  div {\n    color: ${colors.text.onLight.mute};\n    width: 11px;\n    height: 28px;\n    font-size: 9px;\n    line-height: 28px;\n    text-align: center;\n    padding: 0 1px 0 0;\n    margin-top: 5px;\n    border: 1px solid #ddd;\n    border-left: none;\n    background: ${colors.header.lite};\n    border-radius: 0 4px 4px 0;\n    letter-spacing: -0.1em;\n    transition: 0.1s;\n    cursor: pointer;\n    &:first-of-type {\n      margin-top: 0;\n    }\n    &:after {\n      content: '+';\n      letter-spacing: 0;\n      display: inline-block;\n      background: ${colors.logo.yellow};\n      border: inherit;\n      padding: 0 5px 0 7px;\n      border-radius: inherit;\n      z-index: -1;\n      right: -10px;\n      position: absolute;\n      margin-top: -1px;\n      transition: 0.1s;\n    }\n    &[data-name]:after {\n      content: attr(data-name);\n    }\n  }\n`;\n\nexport const CardBlockText = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const CardStatusSVG = styled.svg.attrs({\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 300 300',\n})`\n  background: ${({ type }: { type: CardTypes }) => statusColorMap[type]};\n  border-radius: 50%;\n  padding: 2px;\n  fill: #fff;\n`;\n\nexport const CardBlockProgress = styled.mark`\n  position: absolute;\n  display: block;\n  left: 4px;\n  right: 4px;\n  bottom: 3px;\n  height: 2px;\n  background: transparent;\n  overflow: hidden;\n  opacity: 0.4;\n  border-radius: 0 0 2px 2px;\n  transition: 0.1s;\n`;\n\nexport const CardBlock = styled.button`\n  border: none;\n  text-align: left;\n  box-sizing: content-box;\n  font-size: 12px;\n  position: absolute;\n  background: #fff;\n  border-radius: 4px;\n  margin: 0 2px;\n  line-height: 28px;\n  padding: 0 5px 0 5px;\n  border: 1px solid #ccc;\n  transition: box-shadow 0.1s, opacity 0.1s;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 2px 3px -1px rgba(0, 0, 0, 0.3);\n  }\n  &:hover ${CardBlockProgress} {\n    opacity: 1;\n  }\n  & ${CardStatusSVG} {\n    position: absolute;\n    width: 0;\n    top: 3px;\n    right: 3px;\n    transform: translate(50%, -50%);\n    z-index: 2;\n    transition: 0.1s;\n  }\n  &:hover ${CardStatusSVG} {\n    width: 8px;\n    opacity: 1;\n  }\n  &.resized {\n    line-height: 28px;\n    border: 1px dashed #e2e2e2;\n    padding: 0 4px 0 6px;\n    cursor: ew-resize;\n  }\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    width: 5px;\n    bottom: 0;\n    opacity: 0;\n    cursor: ew-resize;\n  }\n  &:before {\n    left: 0;\n  }\n  &:after {\n    right: 0;\n  }\n  &:focus {\n    outline: none;\n  }\n  & * {\n    pointer-events: none;\n  }\n`;\n","import React from 'react';\n\nimport { CardStatusSVG } from 'styles/CardBlock';\n\nimport { CardTypes } from 'types/card';\n\n// Pending     — gray (empty circle)\n// In progress — blue (chart pie)\n// Delayed     - organge (exclamation)\n// Complete    - green (check)\n// Dropped     — red (cross)\n\nconst cardCases = (type: CardTypes): string => {\n  switch (type) {\n    case 'pending':\n      return 'M59 120a30 30 0 100 60 30 30 0 000-60zm93 0a30 30 0 100 60 30 30 0 000-60zm89 0a30 30 0 100 60 30 30 0 000-60z';\n    case 'progress':\n      return 'M150 150V15A135 135 0 1133.087 217.5L150 150';\n    case 'delayed':\n      return 'M150 21c-17 0-29 8-29 22v128c0 14 12 22 29 22 16 0 29-9 29-22V43c0-14-13-22-29-22zm0 201a29 29 0 100 58 29 29 0 000-58';\n    case 'complete':\n      return 'M119 260c-2 2-6 4-9 4s-7-2-10-4l-75-76c-8-8-8-20 0-28l9-10c8-7 21-7 29 0l47 48L237 66c8-8 21-8 29 0l9 10c8 8 8 20 0 28L119 260zm0 0';\n    case 'dropped':\n      return 'M185 150l66-66c8-7 8-19 0-27l-8-8c-8-8-20-8-27 0l-66 66-66-66c-7-8-19-8-27 0l-8 8c-8 8-8 20 0 27l66 66-66 66c-8 7-8 19 0 27l8 8c8 8 20 8 27 0l66-66 66 66c7 8 19 8 27 0l8-8c8-8 8-20 0-27l-66-66zm0 0';\n  }\n};\n\nconst CardStatus = ({ type, className }: { type?: CardTypes; className?: string }): JSX.Element | null =>\n  type ? (\n    <CardStatusSVG type={type} className={className}>\n      <path d={cardCases(type)} />\n    </CardStatusSVG>\n  ) : null;\n\nexport default React.memo(CardStatus);\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getProgressBackgroud, getCardStatus } from 'utils/ui';\nimport { selectCard, selectionDelete } from 'state/actions/selection';\nimport { removePlaceholder } from 'utils/placeholderActions';\nimport CardStatus from 'assets/CardStatus';\nimport { passID } from 'utils/subscribtion';\nimport { getDataString } from 'utils/dates';\n\nimport CLR from 'constants/colors';\n\nimport { CardBlock, CardBlockProgress, CardBlockText } from 'styles/CardBlock';\n\nimport { Card, State } from 'types/state';\n\ntype Props = {\n  card: Card;\n  style: {\n    width: string;\n    top: string;\n  };\n};\n\nconst RoadmapCard = ({ card, style }: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const todayString = useMemo(() => getDataString(todayTimestamp), [todayTimestamp]);\n  const typeS = useMemo(() => getCardStatus(card.from, card.until, todayString, card.progress), [card, todayString]);\n  const progS = useMemo(() => getProgressBackgroud(card.progress, typeS ? CLR.statusColors[typeS] : ''), [card, typeS]);\n\n  const clickCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    if (\n      (e.target as HTMLButtonElement)?.parentElement?.parentElement?.classList.contains('drag') ||\n      e.altKey ||\n      e.ctrlKey ||\n      e.metaKey ||\n      e.shiftKey\n    ) {\n      return;\n    }\n    dispatch(\n      selectCard({\n        id: card.id,\n      })\n    );\n  };\n\n  const handleDoubleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (e.altKey) {\n      dispatch(\n        selectionDelete({\n          id: card.id,\n        })\n      );\n    }\n  };\n  const handleContextMenu = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleMouseDown = () => {\n    passID.set(card.id);\n  };\n\n  // TODO: Optimize rendering reducing new objects\n  return (\n    <CardBlock\n      style={style}\n      onClick={clickCard}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={removePlaceholder}\n      onTouchStart={handleMouseDown}\n      onMouseDown={handleMouseDown}\n      title={card.text}\n    >\n      <CardStatus type={typeS} />\n      <CardBlockProgress style={progS} />\n      <CardBlockText>{card.text}</CardBlockText>\n    </CardBlock>\n  );\n};\n\nexport default React.memo(RoadmapCard);\n","import React, { useMemo, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Card from 'components/Deck/Card';\nimport { getDaysDiff, getDaysInterval } from 'utils/dates';\nimport { getCardsDeckHeight } from 'utils/ui';\n\nimport C from 'constants/index';\n\nimport { CardWaraper } from 'styles/CardBlock';\n\nimport { State } from 'types/state';\n\nconst CardsDeck = ({ setLines }: { setLines: React.Dispatch<React.SetStateAction<number>> }): JSX.Element => {\n  const cardsObject = useSelector((state: State) => state.cards);\n  const lineNames = useSelector((state: State) => state.lines.names);\n  const { cardsPosition } = useSelector((state: State) => state.ui);\n  const lineSize = useRef(-1);\n  // Ading 1 because lines count starts with 0\n  useEffect(() => (lineSize.current >= 0 ? setLines(lineSize.current + 1) : void null), [lineSize.current]);\n  const cards = useMemo(\n    () =>\n      Object.values(cardsObject).map((card) => {\n        const dayOffset = getDaysDiff(cardsPosition, card.from);\n        const dayDiff = getDaysInterval(card.from, card.until);\n        const style = {\n          left: `${dayOffset * C.DAY.WIDTH}px`,\n          width: `${dayDiff * C.DAY.WIDTH - C.CARD.HORIZONTAL_SPACE}px`,\n          top: `${C.DAY.HEADER.HEIGHT + card.line * C.CARD.VERTICAL_SPACE}px`,\n        };\n        lineSize.current = Math.max(lineSize.current, card.line);\n        return <Card key={card.id} card={card} style={style} />;\n      }),\n    [cardsObject, cardsPosition]\n  );\n  const maxLine = Object.keys(lineNames).reduce((acc, val) => Math.max(acc, parseInt(val, 10)), 0) - 1;\n  lineSize.current = Math.max(lineSize.current, maxLine);\n  const wrapperStyle = useMemo(() => getCardsDeckHeight(lineSize.current), [lineSize.current]);\n\n  return <CardWaraper style={wrapperStyle}>{cards}</CardWaraper>;\n};\n\nexport default React.memo(CardsDeck);\n","import {\n  AuthFetch,\n  AuthSuccess,\n  AuthOut,\n  SetAccountRoadmaps,\n  AddAccountRoadmap,\n  RemoveAccountRoadmap,\n  SetAccountRoadmapSetting,\n  SetCurrentRoadmap,\n  RemoveCurrentRoadmap,\n  RoadmapDataFetch,\n} from 'types/actions';\nimport { State } from 'types/state';\n\nexport const authFetch = (): AuthFetch => ({\n  type: 'AUTH_FETCH',\n});\n\nexport const authSuccess = (userData: AuthSuccess['payload']): AuthSuccess => ({\n  type: 'AUTH_SUCCESS',\n  payload: {\n    ...userData,\n  },\n});\n\nexport const authOut = (): AuthOut => ({\n  type: 'AUTH_OUT',\n});\n\nexport const setAccountRoadmaps = (roadmaps: State['user']['roadmaps'], meta: State['metas']): SetAccountRoadmaps => ({\n  type: 'SET_ACCOUNT_ROADMAPS',\n  payload: {\n    roadmaps,\n    meta,\n  },\n});\n\nexport const addAccountRoadmap = (roadmapName: string): AddAccountRoadmap => ({\n  type: 'ADD_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapName,\n  },\n});\n\nexport const removeAccountRoadmap = (roadmapID: string): RemoveAccountRoadmap => ({\n  type: 'REMOVE_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapID,\n  },\n});\n\nexport const setAccountRoadmapSetting = ({\n  roadmapID,\n  settingName,\n  settingValue,\n}: SetAccountRoadmapSetting['payload']): SetAccountRoadmapSetting => ({\n  type: 'SET_ACCOUNT_ROADMAP_SETTING',\n  payload: {\n    roadmapID,\n    settingName,\n    settingValue,\n  },\n});\n\nexport const setCurrentRoadmap = (currentRoadmapID: string): SetCurrentRoadmap => ({\n  type: 'SET_CURRENT_ROADMAP',\n  payload: {\n    currentRoadmapID,\n  },\n});\n\nexport const removeCurrentRoadmap = (): RemoveCurrentRoadmap => ({\n  type: 'REMOVE_CURRENT_ROADMAP',\n});\n\nexport const roadmapDataFetch = (roadmapData: RoadmapDataFetch['payload']): RoadmapDataFetch => ({\n  type: 'ROADMAP_DATA_FETCH',\n  payload: {\n    ...roadmapData,\n  },\n});\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { editLineName } from 'state/actions/lines';\nimport { setAccountRoadmapSetting } from 'state/actions/user';\nimport C from 'constants/index';\nimport { DeckLineCounter } from 'styles/CardBlock';\nimport { State } from 'types/state';\nimport { getInputIndexInGrandParent, setFocusWithoutRerender } from 'utils/ui';\n\nconst DeckLines = ({ lineCount }: { lineCount: number }) => {\n  const dispatch = useDispatch();\n  const lineNames = useSelector((state: State) => state.lines.names);\n  const roadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const lineNameWidth = useSelector((state: State) => state.user.roadmaps[roadmapID].lineNameWidth);\n  const [drag, setDrag] = useState(false);\n  const [maxLine, setMaxLine] = useState(lineCount);\n  const [editState, setEditState] = useState(lineNameWidth > 0);\n  const inputPanel = useRef<HTMLElement>(null);\n  const inputHandler = useRef<HTMLElement>(null);\n  const nextFocusInputIndex = useRef(-1);\n  const panelWidth = useRef(lineNameWidth);\n\n  useEffect(() => {\n    const maxName = Object.keys(lineNames).reduce((acc, val) => Math.max(acc, parseInt(val, 10)), 1);\n    setMaxLine(Math.max(maxName, lineCount));\n  }, [lineNames, lineCount]);\n\n  useEffect(() => {\n    const newPanelWidth = editState ? panelWidth.current : 0;\n    if (newPanelWidth !== lineNameWidth) {\n      dispatch(setAccountRoadmapSetting({ roadmapID, settingName: 'lineNameWidth', settingValue: newPanelWidth }));\n    }\n  }, [editState, panelWidth.current]);\n\n  const saveLine = (target: HTMLInputElement): boolean => {\n    const line = getInputIndexInGrandParent(target).index;\n    const text = target.value;\n    if (line && text !== lineNames[line] && !(text === '' && lineNames[line] === undefined)) {\n      dispatch(editLineName({ line, text }));\n      return true;\n    }\n    return false;\n  };\n  const moveFocus = (target: HTMLInputElement, reverse: boolean): number => {\n    const { index, total } = getInputIndexInGrandParent(target);\n    const isEdge = (index === 1 && reverse) || (index === total && !reverse);\n    if (isEdge) {\n      nextFocusInputIndex.current = total;\n    } else {\n      nextFocusInputIndex.current = index + (reverse ? -2 : 0);\n    }\n    return nextFocusInputIndex.current;\n  };\n\n  const handleEditOpen = (e: React.SyntheticEvent) => {\n    panelWidth.current = C.LINE.INIT_WIDTH;\n    setEditState(true);\n    if (e.target instanceof HTMLDivElement && e.target.parentElement) {\n      nextFocusInputIndex.current = ([].slice.call(e.target.parentElement.children) as HTMLElement[]).indexOf(e.target);\n    } else {\n      nextFocusInputIndex.current = -1;\n    }\n  };\n  const handleEditClose = () => setEditState(false);\n\n  const handleInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (e.relatedTarget instanceof HTMLInputElement) {\n      nextFocusInputIndex.current = getInputIndexInGrandParent(e.relatedTarget).index - 1;\n    }\n    const saved = saveLine(e.target);\n    if (saved && e.relatedTarget instanceof HTMLButtonElement) {\n      e.relatedTarget.click();\n    }\n  };\n\n  const handleInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (!(e.target instanceof HTMLInputElement)) {\n      return;\n    }\n    switch (e.key.toLocaleLowerCase()) {\n      case 'escape':\n        return setEditState(false);\n      case 'enter':\n        const saved = saveLine(e.target);\n        const focus = moveFocus(e.target, e.shiftKey);\n        return !saved && setFocusWithoutRerender(e.target, focus);\n    }\n  };\n\n  const handlePressToDrag = () => (nextFocusInputIndex.current = -1) && setDrag(true);\n  const handleMoveToDrag = (e: React.MouseEvent) => {\n    if (drag && inputPanel.current && inputHandler.current) {\n      if (e.clientX > C.LINE.MIN_WIDTH_COLLAPSE) {\n        panelWidth.current = Math.max(e.clientX + 3, C.LINE.MIN_WIDTH);\n        inputPanel.current.className = 'edit';\n      } else {\n        panelWidth.current = 0;\n        inputPanel.current.className = 'edit hidden';\n      }\n      inputPanel.current.style.width = panelWidth.current + 'px';\n      inputHandler.current.style.left = panelWidth.current + 'px';\n      // TODO: Check if we still need drag class (it's no longer relevant for the milestone styling)\n      inputHandler.current.className = 'drag';\n    }\n  };\n  const handleReleaseResize = () => {\n    setDrag(false);\n    if (panelWidth.current === 0) {\n      setEditState(false);\n    }\n  };\n  const handleDragOut = () => panelWidth.current <= C.LINE.MIN_WIDTH_COLLAPSE && handleReleaseResize();\n\n  const EditNames = () => (\n    <section className=\"edit\" ref={inputPanel} style={{ width: panelWidth.current + 'px' }}>\n      {Array(maxLine + 1)\n        .fill(0)\n        .map((_, i) => (\n          <div key={i}>\n            {i === maxLine ? '+' : i + 1}\n            <input\n              type=\"text\"\n              defaultValue={lineNames[i + 1]}\n              onBlur={handleInputBlur}\n              onKeyDown={handleInputKeyDown}\n              autoFocus={i === nextFocusInputIndex.current}\n            />\n          </div>\n        ))}\n      <button type=\"button\" onClick={handleEditClose}>\n        &times;\n      </button>\n      <aside\n        ref={inputHandler}\n        onMouseDown={handlePressToDrag}\n        onMouseMove={handleMoveToDrag}\n        onMouseUp={handleReleaseResize}\n        onMouseOut={handleDragOut}\n        style={{ left: panelWidth.current + 'px' }}\n      >\n        <hr />\n      </aside>\n    </section>\n  );\n\n  const ShowNames = () => (\n    <section onClick={handleEditOpen}>\n      {Array(maxLine)\n        .fill(0)\n        .map((_, i) => (\n          <div key={i} data-name={lineNames[i + 1]}>\n            {i + 1}\n          </div>\n        ))}\n    </section>\n  );\n\n  return <DeckLineCounter>{editState ? <EditNames /> : <ShowNames />}</DeckLineCounter>;\n};\n\nexport default React.memo(DeckLines);\n","import { EditLineName } from 'types/actions';\n\nexport const editLineName = (props: EditLineName['payload']): EditLineName => ({\n  type: 'EDIT_LINE_NAME',\n  payload: {\n    ...props,\n  },\n});\n","import { SetTodayTimestamp, SetUIOffset } from 'types/actions';\n\nexport const setUIOffset = (offset: SetUIOffset['payload']): SetUIOffset => ({\n  type: 'SET_UI_OFFSET',\n  payload: {\n    ...offset,\n  },\n});\n\nexport const setTodayTimestamp = (timestamp: number): SetTodayTimestamp => ({\n  type: 'SET_TODAY_TIMESTAMP',\n  payload: {\n    timestamp,\n  },\n});\n","import React, { useRef, useState, useLayoutEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getDaysDiffBetweenMonths, getExpandedDate, getMonthList, getExtendedMonthList } from 'utils/dates';\nimport { getExtraMonths, scrollToToday } from 'utils/ui';\nimport cardActions from 'utils/cardActions';\nimport { placeholder } from 'utils/subscribtion';\nimport { moveCard } from 'state/actions/cards';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport MonthsList from 'components/Deck/MonthsList';\nimport CardsDeck from 'components/Deck/CardsDeck';\nimport DeckLines from 'components/Deck/DeckLines';\nimport { setUIOffset } from 'state/actions/ui';\n\nimport C from 'constants/index';\n\nimport { DeckBlock, DeckInner, TodayScroll } from 'styles/DateTable';\n\nimport { MoveCard } from 'types/actions';\nimport { State } from 'types/state';\nimport { DateTypeWithWeek } from 'types/index';\n\nconst Deck = (): JSX.Element | null => {\n  const dispatch = useDispatch();\n  const listRef = useRef<HTMLElement>(null);\n  const todayRef = useRef<HTMLElement>(null);\n  const scroll = useRef({\n    days: 0,\n    left: 0,\n    fire: false,\n    ready: true,\n    position: 0,\n  });\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [months, setMonths] = useState([] as DateTypeWithWeek[]);\n  const hasMonths = useMemo(() => months.length > 0, [months.length]);\n  const fromOffset = useSelector((state: State) => state.ui.fromOffset);\n  const untilOffset = useSelector((state: State) => state.ui.untilOffset);\n  const lastOffset = useRef({ fromOffset, untilOffset });\n  const updateMonths = (newMonths: DateTypeWithWeek[]): void => {\n    setMonths(newMonths);\n    placeholder.setMonths(newMonths);\n  };\n  useLayoutEffect(() => {\n    // This effect makes the initial scroll to `today`\n    if (scroll.current.ready && listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current);\n      scroll.current.position = listRef.current.scrollLeft;\n      scroll.current.ready = false;\n    }\n  }, [hasMonths]);\n  useLayoutEffect(() => {\n    // This effect moves deck's scroll while user scrolls and when new months are added in front of existing dates\n    if (scroll.current.fire && listRef.current) {\n      listRef.current.scrollLeft = scroll.current.left;\n      scroll.current.fire = false;\n    }\n  }, [fromOffset, untilOffset]);\n  useMemo(() => {\n    // This function tracks offsets updates and adds new months before or after existing set\n    if (fromOffset && untilOffset) {\n      if (months.length === 0) {\n        // First time\n        updateMonths(getMonthList(fromOffset, untilOffset));\n      } else {\n        if (lastOffset.current.fromOffset !== fromOffset) {\n          updateMonths(getExtendedMonthList(months, 0, fromOffset));\n        } else if (lastOffset.current.untilOffset !== untilOffset) {\n          updateMonths(getExtendedMonthList(months, months.length - 1, untilOffset));\n        }\n      }\n    }\n    lastOffset.current = {\n      fromOffset,\n      untilOffset,\n    };\n  }, [months, fromOffset, untilOffset]);\n\n  const { pressInZone, moveInZone, releaseInZone, enterZone, leaveZone } = useMemo(() => {\n    const remoteDispatch = (cardDetails: MoveCard['payload']) => dispatch(moveCard(cardDetails));\n    return cardActions(remoteDispatch);\n  }, [dispatch]);\n\n  const showScrollButton = () => {\n    const list = listRef.current;\n    const scrollCurrent = scroll.current;\n    if (list && scrollCurrent) {\n      const todayElement = todayRef.current;\n      if (todayElement) {\n        const todayLeft = todayElement.getBoundingClientRect().left;\n        if (todayLeft < 0) {\n          setScrollPosition(-1);\n        } else if (todayLeft > list.offsetWidth) {\n          setScrollPosition(1);\n        } else {\n          setScrollPosition(0);\n        }\n      }\n      scrollCurrent.position = list.scrollLeft;\n    }\n  };\n\n  const renderPastOrFuture = (direction: number) => {\n    if (direction < 0 && listRef.current) {\n      const firstMonth = months[0];\n      const newDate = getExpandedDate(firstMonth.year, firstMonth.month, -getExtraMonths());\n      dispatch(\n        setUIOffset({\n          fromOffset: newDate,\n          untilOffset: untilOffset,\n        })\n      );\n      const extraLeftOffset = getDaysDiffBetweenMonths(newDate, fromOffset) * C.DAY.WIDTH;\n      scroll.current.left = listRef.current.scrollLeft + extraLeftOffset;\n      scroll.current.fire = true;\n    } else {\n      const lastMonth = months[months.length - 1];\n      const newDate = getExpandedDate(lastMonth.year, lastMonth.month, getExtraMonths());\n      dispatch(\n        setUIOffset({\n          fromOffset: fromOffset,\n          untilOffset: newDate,\n        })\n      );\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    if (listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current, true);\n      e.currentTarget.blur();\n    }\n  };\n\n  const scollDeck = (e: React.UIEvent<HTMLElement>) => {\n    const deck = e.currentTarget as HTMLElement;\n    const days = Math.floor(deck.scrollLeft / C.DAY.WIDTH);\n    if (scroll.current.days !== days) {\n      scroll.current.days = days;\n      showScrollButton();\n      // TODO: If window width stays the same daysVisible & daysTotal can be cached\n      const daysVisible = Math.ceil(deck.offsetWidth / C.DAY.WIDTH);\n      const daysTotal = Math.ceil(deck.scrollWidth / C.DAY.WIDTH);\n      if (days <= daysVisible) {\n        renderPastOrFuture(-1);\n      } else if (days >= daysTotal - daysVisible * 2) {\n        renderPastOrFuture(1);\n      }\n    }\n  };\n\n  const [lineCount, setLines] = useState(0);\n  const Months = useMemo(\n    () => (\n      <MonthsList todayRef={todayRef} months={months}>\n        <CardsDeck setLines={setLines} />\n      </MonthsList>\n    ),\n    [months, months.length, todayRef]\n  );\n\n  if (!months.length) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <TodayScroll scrollPosition={scrollPosition} tabIndex={scrollPosition ? undefined : -1} onClick={handleClick}>\n        Today\n      </TodayScroll>\n      <DeckBlock\n        ref={listRef}\n        onScroll={scollDeck}\n        onMouseEnter={enterZone}\n        onMouseOut={leaveZone}\n        onMouseLeave={leaveZone}\n      >\n        <DeckLines lineCount={lineCount} />\n        <DeckInner onMouseDown={pressInZone} onMouseMove={moveInZone} onMouseUp={releaseInZone}>\n          {Months}\n          <Placeholder />\n        </DeckInner>\n      </DeckBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Deck);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectionCancel } from 'state/actions/selection';\nimport { placeholder } from 'utils/subscribtion';\nimport Deck from 'components/Deck/Deck';\n\nimport { State } from 'types/state';\n\nconst Roadmap = (): JSX.Element | null => {\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const cancelAction = (e: KeyboardEvent): void => {\n      if (e.key.toLocaleLowerCase() === 'escape') {\n        e.preventDefault();\n        dispatch(selectionCancel());\n        placeholder.update({\n          started: false,\n        });\n      }\n    };\n    document.addEventListener('keydown', cancelAction);\n    return () => {\n      document.removeEventListener('keydown', cancelAction);\n    };\n  }, [dispatch]);\n\n  return currentRoadmapID ? <Deck /> : null;\n};\n\nexport default React.memo(Roadmap);\n","import { keyframes } from 'styled-components';\n\nexport const shake = keyframes`\n  8%, 41% {\n    transform: translateX(-10px);\n  }\n  25%, 58% {\n    transform: translateX(10px);\n  }\n  75% {\n    transform: translateX(-5px);\n  }\n  92% {\n    transform: translateX(5px);\n  }\n  0%, 100% {\n    transform: translateX(0);\n  }\n`;\n\nexport const rotate = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const move = keyframes`\n  from { transform: translateX(-52%) }\n  to { transform: translateX(150%) }\n`;\n","import styled from 'styled-components';\nimport { shake } from 'styles/Keyframes';\n\nexport const EditScreen = styled.section`\n  background: rgba(0, 0, 0, 0.2);\n  position: absolute;\n  overflow-y: scroll;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 100;\n`;\n\nexport const EditForm = styled.form`\n  background: #f7f8f9;\n  width: 600px;\n  max-width: 90%;\n  box-sizing: border-box;\n  margin: 15vh auto;\n  padding: 17px 20px 13px;\n  box-shadow: 0 0 0 0 #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n  transition: box-shadow 0.3s;\n  user-select: none;\n  &.invalid {\n    animation: ${shake} 0.3s linear;\n    box-shadow: 0 0 0 1px #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const EditExtra = styled.div`\n  background: #e7e7ec;\n  margin: 12px -20px -13px;\n  padding: 19px;\n  font-size: 12px;\n  border-radius: 0 0 5px 5px;\n  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Fieldset = styled.fieldset`\n  margin: 0;\n  padding: 0;\n  border: none;\n  display: inline-flex;\n  flex-wrap: wrap;\n  & > label,\n  & > span,\n  & > input {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 14px;\n  line-height: 27px;\n  background: #d9d9de;\n  border: 1px solid #999;\n  margin: 0 -5px 0 0;\n  padding: 0 13px 0 9px;\n  border-radius: 3px;\n  z-index: 3;\n`;\n\nexport const LabelWarp = styled(FormLabel).attrs({\n  as: 'span',\n})`\n  padding-left: ${({ join }: { join?: boolean }) => join && '13px'};\n  & + input[type='text'] {\n    width: 25px;\n    text-align: right;\n  }\n`;\n\nexport const FormInput = styled.input.attrs({\n  type: 'text',\n})`\n  background: #efeff3;\n  border: 1px solid #999;\n  border-radius: 3px;\n  margin: 0 5px 0 0;\n  padding: 0 7px 0 8px;\n  width: 75px;\n  font-size: 14px;\n  line-height: 27px;\n  z-index: 5;\n  &:focus {\n    background: #f7f8f9;\n  }\n  &::last-child {\n    margin-right: 0;\n  }\n  &:invalid,\n  &:invalid:focus {\n    border-color: #d22121;\n    outline-color: #d22121;\n  }\n`;\n\nexport const FormInputWrap = styled(FormInput).attrs({\n  as: 'span',\n})`\n  width: auto;\n  margin-right: -5px;\n`;\n\nexport const RangeInput = styled.input.attrs({\n  type: 'range',\n})`\n  height: 5px;\n  display: block;\n  margin: 11px 0 0;\n  appearance: none;\n  background: #2196f3;\n  border-radius: 4px;\n  box-shadow: inset 0 0px 1px 0px #333;\n  &::-webkit-slider-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &::-moz-range-thumb,\n  &::-ms-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &:disabled {\n    background: #999;\n  }\n  & + input[type='text'] {\n    width: 24px;\n    text-align: right;\n  }\n`;\n\nexport const EditExtraFields = styled.div`\n  flex: 1;\n  line-height: 0;\n  & hr {\n    background: transparent;\n    border: none;\n    margin: 0 auto;\n    padding-right: 5px;\n  }\n  & svg {\n    width: 15px;\n    height: 15px;\n    margin: 3px;\n    opacity: 0;\n    z-index: 1;\n    transform: translate(-40px, 0) scale(0.1);\n    transition: transform ease-in 0.1s, opacity ease-in 0.1s;\n    &.active {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`;\n\nexport const EditExtraActions = styled.div`\n  flex: 0;\n`;\n\nexport const EditEntry = styled.textarea.attrs((props) => ({\n  placeholder: props.placeholder ? props.placeholder : 'Name',\n  rows: 1,\n}))`\n  font: inherit;\n  width: 100%;\n  padding: 0;\n  border: none;\n  background: transparent;\n  overflow: hidden;\n  resize: none;\n  &:focus {\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\nconst hoverColor = ({ action }: { action?: string }) => (action === 'danger' ? '#d22121' : '#5e88ad');\n\nexport const Button = styled.button.attrs({\n  type: 'button',\n})`\n  border: none;\n  width: 100%;\n  margin: 0;\n  padding: 6px 10px 5px;\n  font-size: 12px;\n  z-index: 1;\n  position: relative;\n  color: #777;\n  background: #f7f8f9;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px #999;\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n    z-index: 2;\n    cursor: pointer;\n    color: ${hoverColor};\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px ${hoverColor};\n  }\n  svg {\n    width: 23px;\n    display: none;\n    fill: currentColor;\n    margin: -3px -7px -5px;\n  }\n  & + & {\n    margin-top: -1px;\n  }\n  &:disabled {\n    color: #ccc;\n    background: #eee;\n  }\n  &:first-child {\n    border-radius: 3px 3px 0 0;\n  }\n  &:last-child {\n    border-radius: 0 0 3px 3px;\n  }\n  @media (max-width: 768px) {\n    span {\n      display: none;\n    }\n    svg {\n      display: inline-block;\n    }\n  }\n`;\n","import React, { useState, ChangeEvent } from 'react';\n\nimport { LabelWarp, RangeInput, FormInput } from 'styles/EditScreen';\n\ntype Props = {\n  id: string;\n  min: number;\n  max: number;\n  value: number;\n  disabled: boolean;\n  change?: (value: number) => void;\n  save: () => void;\n  title?: string;\n  join?: boolean;\n};\n\nconst Range = ({ id, min, max, value, disabled, change, save, title, join }: Props): JSX.Element => {\n  const [val, setVal] = useState(value);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const newVal = Math.min(Math.max(parseInt(e.target.value, 10), min), max);\n    if (!Number.isNaN(newVal)) {\n      setVal(newVal);\n      if (change) {\n        change(newVal);\n      }\n    }\n  };\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <label htmlFor={id}>{title}</label> : null}\n      <LabelWarp join={join}>\n        <RangeInput id={id} min={min} max={max} disabled={disabled} value={val} onChange={handleChange} />\n      </LabelWarp>\n      <FormInput value={val} onChange={handleChange} onKeyDown={handleKeyDown} disabled={disabled} />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Range);\n","import styled from 'styled-components';\n\nexport const SwitchBlock = styled.label`\n  position: relative;\n  display: block;\n  width: 38px;\n  height: 21px;\n  margin: 3px 0;\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n    &:checked + span {\n      background-color: #2196f3;\n    }\n    &:focus + span {\n      box-shadow: 0 0 0 1px #efeff3, 0 0 0 3px #025fcc, 0 0 0 4px #fff;\n    }\n    &:checked + span:before {\n      transform: translateX(17px);\n    }\n  }\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #999;\n    transition: 0.1s;\n    border-radius: 12px;\n    &:before {\n      position: absolute;\n      content: '';\n      height: 17px;\n      width: 17px;\n      left: 2px;\n      bottom: 2px;\n      background-color: white;\n      transition: 0.1s;\n      border-radius: 50%;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { FormInputWrap, FormLabel } from 'styles/EditScreen';\nimport { SwitchBlock } from 'styles/Form/Switch';\n\ntype Props = { id: string; value: boolean; toggle: (value: boolean) => void; title?: string };\n\nconst Switch = ({ id, value, toggle, title }: Props): JSX.Element => {\n  const handleToggle = () => toggle(!value);\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <FormLabel htmlFor={id}>{title}</FormLabel> : null}\n      <FormInputWrap>\n        <SwitchBlock>\n          <input type=\"checkbox\" id={id} defaultChecked={value} onChange={handleToggle} />\n          <span />\n        </SwitchBlock>\n      </FormInputWrap>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Switch);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { Fieldset, FormLabel, FormInput } from 'styles/EditScreen';\n\ntype DateInputProps = {\n  date?: string;\n  setDate: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  save: () => void;\n  title: string;\n  setFocus?: boolean;\n};\n\nconst DateInput = ({ date, setDate, save, title, setFocus }: DateInputProps): JSX.Element | null => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, []);\n\n  const name = title.toLowerCase();\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n\n  return date === undefined ? null : (\n    <Fieldset>\n      <FormLabel htmlFor={name}>{title}</FormLabel>\n      <FormInput\n        id={name}\n        ref={setFocus ? inputRef : undefined}\n        value={date}\n        onChange={setDate}\n        onKeyDown={handleKeyDown}\n        required\n        pattern=\"([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))\"\n      />\n    </Fieldset>\n  );\n};\n\nexport default React.memo(DateInput);\n","import styled from 'styled-components';\n\nexport const EditorWrap = styled.div`\n  line-height: normal;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 6px 7px 6px 6px;\n  margin-right: 19px;\n  .public-DraftEditor-content span[style*='font-family: monospace'] {\n    color: #670000;\n    padding: 0 2px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n  .public-DraftStyleDefault-pre {\n    padding: 3px 4px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    white-space: pre;\n    font-family: monospace;\n    pre {\n      margin: 0;\n    }\n  }\n\n  .DraftEditor-editorContainer,\n  .DraftEditor-root,\n  .public-DraftEditor-content {\n    height: inherit;\n    text-align: initial;\n  }\n  .public-DraftEditor-content[contenteditable='true'] {\n    -webkit-user-modify: read-write-plaintext-only;\n  }\n  .DraftEditor-root {\n    position: relative;\n  }\n  .DraftEditor-editorContainer {\n    background-color: rgba(255, 255, 255, 0);\n    border-left: 0.1px solid transparent;\n    position: relative;\n    z-index: 1;\n  }\n  .public-DraftEditor-block {\n    position: relative;\n  }\n  .DraftEditor-alignLeft .public-DraftStyleDefault-block {\n    text-align: left;\n  }\n  .DraftEditor-alignLeft .public-DraftEditorPlaceholder-root {\n    left: 0;\n    text-align: left;\n  }\n  .DraftEditor-alignCenter .public-DraftStyleDefault-block {\n    text-align: center;\n  }\n  .DraftEditor-alignCenter .public-DraftEditorPlaceholder-root {\n    margin: 0 auto;\n    text-align: center;\n    width: 100%;\n  }\n  .DraftEditor-alignRight .public-DraftStyleDefault-block {\n    text-align: right;\n  }\n  .DraftEditor-alignRight .public-DraftEditorPlaceholder-root {\n    right: 0;\n    text-align: right;\n  }\n  .public-DraftEditorPlaceholder-root {\n    color: #9197a3;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n  }\n  .public-DraftEditorPlaceholder-hasFocus {\n    color: #bdc1c9;\n  }\n  .DraftEditorPlaceholder-hidden {\n    display: none;\n  }\n  .public-DraftStyleDefault-block {\n    position: relative;\n    white-space: pre-wrap;\n    line-height: 1.2em;\n  }\n  .public-DraftStyleDefault-ltr {\n    direction: ltr;\n    text-align: left;\n  }\n  .public-DraftStyleDefault-rtl {\n    direction: rtl;\n    text-align: right;\n  }\n  .public-DraftStyleDefault-listLTR {\n    direction: ltr;\n  }\n  .public-DraftStyleDefault-listRTL {\n    direction: rtl;\n  }\n  .public-DraftStyleDefault-ol,\n  .public-DraftStyleDefault-ul {\n    margin: 16px 0;\n    padding: 0;\n  }\n  .public-DraftStyleDefault-depth0.public-DraftStyleDefault-listLTR {\n    margin-left: 2.5em;\n  }\n  .public-DraftStyleDefault-depth0.public-DraftStyleDefault-listRTL {\n    margin-right: 2.5em;\n  }\n  .public-DraftStyleDefault-depth1.public-DraftStyleDefault-listLTR {\n    margin-left: 5em;\n  }\n  .public-DraftStyleDefault-depth1.public-DraftStyleDefault-listRTL {\n    margin-right: 5em;\n  }\n  .public-DraftStyleDefault-depth2.public-DraftStyleDefault-listLTR {\n    margin-left: 7.5em;\n  }\n  .public-DraftStyleDefault-depth2.public-DraftStyleDefault-listRTL {\n    margin-right: 7.5em;\n  }\n  .public-DraftStyleDefault-depth3.public-DraftStyleDefault-listLTR {\n    margin-left: 10em;\n  }\n  .public-DraftStyleDefault-depth3.public-DraftStyleDefault-listRTL {\n    margin-right: 10em;\n  }\n  .public-DraftStyleDefault-depth4.public-DraftStyleDefault-listLTR {\n    margin-left: 12.5em;\n  }\n  .public-DraftStyleDefault-depth4.public-DraftStyleDefault-listRTL {\n    margin-right: 12.5em;\n  }\n  .public-DraftStyleDefault-unorderedListItem {\n    list-style-type: square;\n    position: relative;\n  }\n  .public-DraftStyleDefault-unorderedListItem.public-DraftStyleDefault-depth0 {\n    list-style-type: disc;\n  }\n  .public-DraftStyleDefault-unorderedListItem.public-DraftStyleDefault-depth1 {\n    list-style-type: circle;\n  }\n  .public-DraftStyleDefault-orderedListItem {\n    list-style-type: none;\n    position: relative;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-listLTR:before {\n    left: -2.5em;\n    position: absolute;\n    text-align: right;\n    width: 2em;\n    line-height: 1.2em;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-listRTL:before {\n    position: absolute;\n    right: -2.5em;\n    text-align: left;\n    width: 2em;\n    line-height: 1.2em;\n  }\n  .public-DraftStyleDefault-orderedListItem:before {\n    content: counter(ol0) '. ';\n    counter-increment: ol0;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth1:before {\n    content: counter(ol1, lower-alpha) '. ';\n    counter-increment: ol1;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth2:before {\n    content: counter(ol2, lower-roman) '. ';\n    counter-increment: ol2;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth3:before {\n    content: counter(ol3) '. ';\n    counter-increment: ol3;\n  }\n  .public-DraftStyleDefault-orderedListItem.public-DraftStyleDefault-depth4:before {\n    content: counter(ol4, lower-alpha) '. ';\n    counter-increment: ol4;\n  }\n  .public-DraftStyleDefault-depth0.public-DraftStyleDefault-reset {\n    counter-reset: ol0;\n  }\n  .public-DraftStyleDefault-depth1.public-DraftStyleDefault-reset {\n    counter-reset: ol1;\n  }\n  .public-DraftStyleDefault-depth2.public-DraftStyleDefault-reset {\n    counter-reset: ol2;\n  }\n  .public-DraftStyleDefault-depth3.public-DraftStyleDefault-reset {\n    counter-reset: ol3;\n  }\n  .public-DraftStyleDefault-depth4.public-DraftStyleDefault-reset {\n    counter-reset: ol4;\n  }\n`;\n","import { EditLong } from 'types/actions';\n\nexport const editLong = (props: EditLong['payload']): EditLong => ({\n  type: 'EDIT_LONG',\n  payload: {\n    ...props,\n  },\n});\n","import debounce from 'lodash/debounce';\nimport { convertToRaw, convertFromRaw, ContentState } from 'draft-js';\n\nimport { RawDraftContentState, RawDraftState, RawDraftBlock } from 'types/editor';\n\nimport C from 'constants/index';\n\nexport const debouncedSave = debounce((func: () => void) => func(), C.TIME.AUTOSAVE_MS);\n\nexport const cleanRaw = (raw: RawDraftContentState): RawDraftState => ({\n  ...raw,\n  blocks: raw.blocks.map((block) => {\n    const newBlock = Object.assign({}, block) as RawDraftBlock;\n    if (block.type === 'unstyled') {\n      delete newBlock.type;\n    }\n    if (block.depth === 0) {\n      delete newBlock.depth;\n    }\n    if (block.inlineStyleRanges.length === 0) {\n      delete newBlock.inlineStyleRanges;\n    }\n    if (block.entityRanges.length === 0) {\n      delete newBlock.entityRanges;\n    }\n    if (block.data && Object.keys(block.data).length === 0) {\n      delete newBlock.data;\n    }\n    return newBlock;\n  }),\n});\n\nexport const convertToJSON = (context: ContentState) => JSON.stringify(cleanRaw(convertToRaw(context)));\n\nexport const convertFromJSON = (initialRaw: string) => convertFromRaw(JSON.parse(initialRaw));\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Editor, EditorState, RichUtils, getDefaultKeyBinding, KeyBindingUtil, DraftHandleValue } from 'draft-js';\n\nimport { EditorWrap } from 'styles/Editor';\nimport { editLong } from 'state/actions/longs';\nimport { State } from 'types/state';\nimport { debouncedSave, convertToJSON, convertFromJSON } from 'utils/editor';\n\nconst styleMap = {\n  STRIKETHROUGH: {\n    textDecoration: 'line-through',\n  },\n  HIGHLIGHT: {\n    backgroundColor: '#edff00',\n  },\n};\n\nconst LongEditor = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const cardID = useSelector((state: State) => state.selection.id);\n  const rawState = useSelector((state: State) => state.longs[cardID]);\n  const [editorState, setEditorState] = useState(() =>\n    rawState ? EditorState.createWithContent(convertFromJSON(rawState)) : EditorState.createEmpty()\n  );\n  const dispatchEdit = (long: string) => dispatch(editLong({ cardID, long }));\n  const saveLong = (state: EditorState) => {\n    const context = state.getCurrentContent();\n    const plainText = context.getPlainText();\n    if (plainText.trim().length) {\n      const newRawState = convertToJSON(context);\n      if (rawState !== newRawState) {\n        dispatchEdit(newRawState);\n      }\n    } else if (rawState !== undefined) {\n      dispatchEdit('');\n    }\n  };\n\n  const handleTab = (e: React.KeyboardEvent) => changeState(RichUtils.onTab(e, editorState, 4));\n\n  const myKeyBindingFn = (e: React.KeyboardEvent): string | null => {\n    if (KeyBindingUtil.hasCommandModifier(e)) {\n      switch (e.code) {\n        case 'KeyB':\n          return 'bold';\n        case 'KeyM':\n          return 'code';\n        case 'KeyI':\n          return 'italic';\n        case 'KeyH':\n          return 'highlight';\n        case 'KeyU':\n          return 'underline';\n        case 'KeyS':\n          return 'strikethrough';\n        case 'BracketLeft':\n          return 'indent-minus';\n        case 'BracketRight':\n          return 'indent-plus';\n      }\n      if (e.shiftKey) {\n        switch (e.code) {\n          case 'KeyX':\n            return 'strikethrough';\n        }\n      }\n    }\n    return getDefaultKeyBinding(e);\n  };\n  const handleKeyCommand = (command: string): DraftHandleValue => {\n    switch (command) {\n      case 'bold':\n      case 'code':\n      case 'italic':\n      case 'strikethrough':\n      case 'underline':\n      case 'highlight':\n        const state =\n          RichUtils.handleKeyCommand(editorState, command) ||\n          RichUtils.toggleInlineStyle(editorState, command.toUpperCase());\n        if (state) {\n          changeState(state);\n          return 'handled';\n        }\n        return 'not-handled';\n      case 'indent-minus':\n      case 'indent-plus':\n        const reverse = command.split('-')[1] === 'plus' ? false : true;\n        const event = { shiftKey: reverse, preventDefault: () => undefined } as React.KeyboardEvent;\n        handleTab(event);\n        return 'handled';\n      default:\n        return 'not-handled';\n    }\n  };\n\n  const changeState = (state: EditorState) => {\n    setEditorState(state);\n    if (state.getCurrentContent() !== editorState.getCurrentContent()) {\n      debouncedSave(() => saveLong(state));\n    }\n  };\n\n  // Firing debounce with latest changes on blur\n  const saveState = () => debouncedSave.flush();\n\n  // Canceling debounce on componentDidUnmount\n  useEffect(() => () => debouncedSave.cancel(), []);\n\n  return (\n    <EditorWrap>\n      <Editor\n        editorState={editorState}\n        onChange={changeState}\n        onBlur={saveState}\n        onTab={handleTab}\n        placeholder=\"Add more context...\"\n        handleKeyCommand={handleKeyCommand}\n        keyBindingFn={myKeyBindingFn}\n        customStyleMap={styleMap}\n      />\n    </EditorWrap>\n  );\n};\n\nexport default React.memo(LongEditor);\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport Save from '@material-ui/icons/Save';\nimport Revert from '@material-ui/icons/NotInterested';\nimport Delete from '@material-ui/icons/DeleteForever';\n\nimport CardStatus from 'assets/CardStatus';\nimport { getCardStatus } from 'utils/ui';\nimport { getDataString } from 'utils/dates';\n\nimport { Button } from 'styles/Form/Button';\nimport { EditExtra, EditExtraActions, EditExtraFields, Fieldset } from 'styles/EditScreen';\n\nimport Range from './Range';\nimport Switch from './Switch';\nimport DateInput from './DateInput';\nimport Editor from './Editor';\n\nimport { Card, State } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\ntype EditFieldsProps = {\n  selection: Card;\n  setSelection: React.Dispatch<React.SetStateAction<Card>>;\n  cardDispatch: CardDispatch;\n  setFocus: boolean;\n};\n\nconst EditFields = ({ selection, setSelection, cardDispatch, setFocus }: EditFieldsProps): JSX.Element | null => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const todayString = useMemo(() => getDataString(todayTimestamp), [todayTimestamp]);\n\n  const progress = selection.progress || 0;\n  const isProgressOn = Number.isFinite(selection.progress);\n  const setProgress = (value: number) =>\n    setSelection({\n      ...selection,\n      progress: value,\n    });\n  const setProgressOn = (value: boolean) => {\n    if (value) {\n      selection.progress = progress;\n    } else {\n      delete selection.progress;\n    }\n    setSelection({ ...selection });\n  };\n  const setDate = (type: 'from' | 'until') => (e: React.ChangeEvent<HTMLInputElement>) =>\n    setSelection({\n      ...selection,\n      [type]: e.target.value,\n    });\n\n  const setFrom = setDate('from');\n  const setUntil = setDate('until');\n\n  const { from, until } = selection;\n\n  return (\n    <EditExtra>\n      <EditExtraFields>\n        <DateInput date={from} setDate={setFrom} save={cardDispatch.save} title=\"From\" setFocus={setFocus} />\n        <DateInput date={until} setDate={setUntil} save={cardDispatch.save} title=\"Until\" />\n\n        <Fieldset>\n          <Switch id=\"showProgress\" value={isProgressOn} toggle={setProgressOn} title=\"Completion\" />\n          <Range\n            id=\"progress\"\n            min={0}\n            max={100}\n            disabled={!isProgressOn}\n            value={progress}\n            change={setProgress}\n            save={cardDispatch.save}\n            join={true}\n          />\n          {from && until && typeof progress === 'number' && (\n            <CardStatus\n              type={getCardStatus(from, until, todayString, progress)}\n              className={isProgressOn ? 'active' : undefined}\n            />\n          )}\n        </Fieldset>\n        <Editor />\n      </EditExtraFields>\n      <EditExtraActions>\n        <Button onClick={cardDispatch.save} title=\"Save changes\" action={'primary'}>\n          <Save />\n          <span>Save</span>\n        </Button>\n        <Button onClick={cardDispatch.cancel} title=\"Revert changes\">\n          <Revert />\n          <span>Revert</span>\n        </Button>\n        <Button onClick={cardDispatch.delete} title=\"Delete card\" action={'danger'}>\n          <Delete />\n          <span>Delete</span>\n        </Button>\n      </EditExtraActions>\n    </EditExtra>\n  );\n};\n\nexport default React.memo(EditFields);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditEntry } from 'styles/EditScreen';\n\nimport { SelectedElement, ElementType, Card } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\nconst EditTitle = ({\n  type,\n  selection,\n  setSelection,\n  cardDispatch,\n  enforceExtraFields,\n}: {\n  type: ElementType;\n  selection: SelectedElement;\n  setSelection: React.Dispatch<React.SetStateAction<Card>>;\n  cardDispatch: CardDispatch;\n  enforceExtraFields: React.Dispatch<React.SetStateAction<boolean>> | undefined;\n}): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, [selection.id]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    autoscaleTextarea(e.target as HTMLTextAreaElement);\n    setSelection((prevSelection) => ({\n      ...prevSelection,\n      text: e.target.value,\n    }));\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      cardDispatch.save();\n    } else if (e.key.toLocaleLowerCase() === 'tab') {\n      e.preventDefault();\n      if (type === ElementType.card && enforceExtraFields) {\n        enforceExtraFields(true);\n      }\n    }\n  };\n\n  return (\n    <EditEntry\n      ref={inputRef}\n      autoFocus={true}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      placeholder={type === ElementType.mile ? 'Milestone name' : 'Task name'}\n      value={selection.text}\n    />\n  );\n};\n\nexport default React.memo(EditTitle);\n","import { EditMile } from 'types/actions';\n\nexport const editMile = (payload: EditMile['payload']): EditMile => ({\n  type: 'EDIT_MILE',\n  payload,\n});\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // TODO: shallowEqual\n\nimport { editCard } from 'state/actions/cards';\nimport { selectionCancel, selectionDelete } from 'state/actions/selection';\nimport { hasCardChanged, isCardValid } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm } from 'styles/EditScreen';\n\nimport EditFields from './EditFields';\nimport EditTitle from './EditTitle';\n\nimport { Card, ExtendedCard, ElementType, State } from 'types/state';\nimport { CardDispatch } from 'types/actions';\nimport { editMile } from 'state/actions/miles';\n\n// TODO: Refactor entire file to allow editing of any type of text, pass extra fiels as optional\nconst DefaultState = {\n  id: '',\n  text: '',\n  line: 0,\n  from: '',\n  until: '',\n} as Card;\n\nconst EditScreen = (): JSX.Element | null => {\n  const dispatch = useDispatch();\n  const selection = useSelector((state: State) => state.selection);\n  const selectedElement = useSelector((state: State) => {\n    const namespace = selection.type === ElementType.card ? state.cards : state.miles;\n    return selection.isNew ? undefined : namespace[selection.id];\n  });\n  const [isExtraFieldsEnforced, enforceExtraFields] = useState(selectedElement !== undefined);\n  const [newSelection, setNewSelection] = useState(DefaultState);\n  const [isInvalid, setInvalid] = useState(false);\n  useEffect(() => {\n    if (isInvalid) {\n      setTimeout(() => setInvalid(false), 500);\n    }\n  }, [isInvalid]);\n  useEffect(() => {\n    if (selection.id === '') {\n      enforceExtraFields(selectedElement !== undefined);\n    } else {\n      const selected = (selectedElement || selection) as Card | ExtendedCard;\n      setNewSelection({\n        id: selected.id,\n        text: selected.text,\n        line: selected.line,\n        from: selected.from,\n        until: selected.until,\n        progress: selected.progress,\n      });\n    }\n    return () => {\n      setNewSelection(DefaultState);\n    };\n  }, [selection, selectedElement]);\n\n  if (selection.type === '' || newSelection.id === '') {\n    return null;\n  }\n\n  const cardDispatch: CardDispatch = {\n    save: () => {\n      if (selection.type === ElementType.card && isCardValid(newSelection)) {\n        // @ts-ignore\n        return dispatch(hasCardChanged(newSelection, selectedElement) ? editCard(newSelection) : selectionCancel());\n      } else if (selection.type === ElementType.mile) {\n        // There is no check for empty value, because empty milestone value removes the milestone\n        // @ts-ignore\n        const mileDate = (selection.date || selectedElement.date) as string | undefined;\n        return dispatch(editMile({ id: selection.id, text: newSelection.text, date: mileDate }));\n      } else {\n        // TODO: Show user incorrect fields\n        setInvalid(true);\n        return;\n      }\n    },\n    cancel: () => dispatch(selectionCancel()),\n    delete: () => {\n      dispatch(\n        selectedElement\n          ? selectionDelete({\n              id: newSelection.id,\n            })\n          : selectionCancel()\n      );\n    },\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      cardDispatch.cancel();\n    }\n  };\n\n  const hasExtraFields = selection.type === ElementType.card && (isExtraFieldsEnforced || Boolean(selectedElement));\n  return (\n    <Screen onClick={handleClick} data-form=\"edit\">\n      <EditForm className={isInvalid ? 'invalid' : undefined}>\n        <EditTitle\n          type={selection.type}\n          selection={newSelection}\n          setSelection={setNewSelection}\n          cardDispatch={cardDispatch}\n          enforceExtraFields={hasExtraFields ? undefined : enforceExtraFields}\n        />\n        {hasExtraFields ? (\n          <EditFields\n            selection={newSelection}\n            setSelection={setNewSelection}\n            cardDispatch={cardDispatch}\n            setFocus={isExtraFieldsEnforced}\n          />\n        ) : null}\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(EditScreen);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMatch, useNavigate, useLocation, PathMatch } from 'react-router-dom';\n\nimport Roadmap from 'components/Roadmap/Roadmap';\nimport EditScreen from 'components/EditScreen/EditScreen';\nimport { setCurrentRoadmap, removeCurrentRoadmap } from 'state/actions/user';\nimport C from 'constants/index';\n\nimport { State } from 'types/state';\n\nconst RoadmapScreen = (): JSX.Element => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const routeID = (useMatch(`${C.URL.PLAN}:id`) as PathMatch).params.id || '';\n  const roadmapsSet = useSelector((state: State) => state.user.roadmapsSet);\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const userRoadmapIDs = Object.keys(useSelector((state: State) => state.user.roadmaps));\n  useEffect(() => {\n    if (roadmapsSet) {\n      // TODO: Split two conditions if we want to create a roadmap for users without it\n      if (userRoadmapIDs.length && userRoadmapIDs.includes(routeID)) {\n        if (currentRoadmapID !== routeID) {\n          // We need to mark a roadmap as loaded to clean the state when navigating away\n          dispatch(setCurrentRoadmap(routeID));\n        }\n      } else {\n        // Account's roadmap list is loaded, but it's empty or doesn't contain the requested ID\n        navigate(C.URL.ROOT);\n      }\n    }\n    return () => {\n      // One of the roadmaps was loaded & rendered and we navigating away from this page\n      if (currentRoadmapID && location.pathname !== document.location.pathname) {\n        dispatch(removeCurrentRoadmap());\n      }\n    };\n  }, [navigate, location, dispatch, roadmapsSet, currentRoadmapID, routeID, userRoadmapIDs]);\n\n  return (\n    <React.Fragment>\n      <Roadmap />\n      <EditScreen />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(RoadmapScreen);\n","import styled, { css } from 'styled-components';\n\nimport color from 'constants/colors';\nimport { rotate } from 'styles/Keyframes';\n\nexport const SpinnerMixin = css`\n  width: ${({ size = 50 }: { size?: number }) => `${size}px`};\n  height: ${({ size = 50 }: { size?: number }) => (size ? `${size}px` : '50px')};\n  margin: auto;\n  border: ${({ size = 50 }: { size?: number }) => `${Math.ceil(size / 10)}px solid transparent`};\n  border-top-color: ${({ size }: { size?: number }) => (size ? color.logo.green : color.text.onDark.main)};\n  border-radius: 50%;\n  animation: ${rotate} 1s linear infinite;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const Spinner = styled.div`\n  ${SpinnerMixin}\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const RoadmapList = styled.section`\n  margin: 20px 5vw;\n  display: flex;\n  flex-flow: wrap;\n`;\n\nexport const RoadmapListTitle = styled.span`\n  display: inline-block;\n  width: 100%;\n  padding: 0 5px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nexport const RoadmapListBubble = styled.span`\n  color: #777;\n  padding: 1px 3px 1px 4px;\n  border-radius: 4px;\n  font-weight: 100;\n  letter-spacing: 0.05em;\n  font-size: 12px;\n  float: right;\n  border: 1px solid #999;\n  cursor: help;\n`;\n\nexport const RoadmapListItem = styled(Link)`\n  display: flex;\n  flex: 1 1 30%;\n  min-width: 250px;\n  margin: 10px 5px 0;\n  padding: 15px 17px 15px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  text-decoration: none;\n  flex-flow: column wrap;\n  /* background: hsl(190deg 100% 45%); */\n  background: linear-gradient(to bottom, #47005e, #000000);\n  text-align: center;\n  color: #ffffff;\n  &:hover {\n    filter: brightness(1.3);\n  }\n  &:nth-of-type(5n - 4) {\n    /* background: hsl(240deg 100% 71%); */\n    background: linear-gradient(to bottom, #ff0084, #33001b);\n  }\n  &:nth-of-type(5n - 3) {\n    /* background: hsl(9deg 100% 71%); */\n    background: linear-gradient(to bottom, #8fb3d9, #000933);\n  }\n  &:nth-of-type(5n - 2) {\n    /* background: hsl(280deg 100% 71%); */\n    background: linear-gradient(to bottom, #28bb41, #000b33);\n  }\n  &:nth-of-type(5n - 1) {\n    /* background: hsl(0deg 60% 54%); */\n    background: linear-gradient(to bottom, #d04443, #2e1001);\n  }\n  span {\n    width: 40px;\n    height: 40px;\n    display: inline-block;\n    margin: 0 5px;\n    line-height: 40px;\n    text-align: center;\n    border-radius: 8px;\n    border: 1px solid #fff4;\n    &:empty {\n      display: none;\n    }\n    & svg {\n      width: 24px;\n      margin: 0 0 -6px 0;\n      fill: #fff;\n    }\n    &:after {\n      content: attr(data-caption);\n      position: absolute;\n      margin: 3px 0 0 20px;\n      font-size: 10px;\n      line-height: 1;\n      display: block;\n      opacity: 0.6;\n      text-transform: lowercase;\n      transform: translateX(-50%);\n    }\n  }\n  p {\n    flex-grow: 1;\n    font-size: 20px;\n    font-weight: 900;\n    line-height: 1.1em;\n    letter-spacing: -0.02em;\n    margin-top: 2em;\n  }\n  small {\n    font-size: 10px;\n    display: block;\n  }\n  time:not(:empty) + time:not(:empty) {\n    &:before {\n      content: '•';\n      padding: 0 5px;\n    }\n    &:after {\n      content: '';\n      display: block;\n      height: 12px;\n    }\n  }\n  footer {\n    margin: 0 auto;\n    font-size: 10px;\n    padding: 12px 3em 0;\n    border-top: 1px solid #fff6;\n  }\n`;\n\nexport const RoadmapListAdd = styled.button.attrs({\n  type: 'button',\n})`\n  width: 100%;\n  margin: 10px 5px 0;\n  padding: 10px;\n  border-radius: 4px;\n  appearance: none;\n  background: none;\n  border: 1px solid #aaa;\n  font-size: 16px;\n  color: #aaa;\n  cursor: pointer;\n  &:hover {\n    color: ${color.accent.active};\n    border-color: ${color.accent.active};\n  }\n`;\n","import React from 'react';\n\nconst OverviewBadge = ({ title, caption, children }: { title: string; caption: string; children: React.ReactNode }) => (\n  <span title={title} data-caption={caption}>\n    {children}\n  </span>\n);\n\nexport default React.memo(OverviewBadge);\n","import React from 'react';\nimport Private from '@material-ui/icons/VerifiedUser';\nimport Shared from '@material-ui/icons/PeopleAlt';\nimport Edit from '@material-ui/icons/Edit';\nimport View from '@material-ui/icons/RemoveRedEye';\n\nimport OverviewBadge from 'components/Overview/OverviewBadge';\n\nimport { Meta } from 'types/state';\n\nconst AccessState = ({ meta }: { meta: Meta }): JSX.Element => {\n  const option = meta.owner ? (meta.share ? 'shared' : 'private') : meta.share ? 'edit' : 'view';\n  const sharedNumber = meta.share ? Object.keys(meta.share).length : 0;\n  const access = {\n    private: { title: `It's your private plan, nobody else has access to it`, node: <Private /> },\n    shared: { title: `Your own this plan. It's shared with ${sharedNumber} account(s)`, node: <Shared /> },\n    edit: { title: `Owner shared this plan with ${sharedNumber} account(s). You have edit rights`, node: <Edit /> },\n    view: { title: 'Owner gave you view access to this plan', node: <View /> },\n  };\n  return <OverviewBadge title={access[option].title} caption=\"Access\" children={access[option].node} />;\n};\n\nexport default React.memo(AccessState);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport EncryptionNo from '@material-ui/icons/LockOpen';\n\nimport { getLocalString, getLocalDate } from 'utils/dates';\n\nimport C from 'constants/index';\n\nimport { Spinner } from 'styles/Common/Spinner';\nimport { RoadmapList, RoadmapListTitle, RoadmapListBubble, RoadmapListItem, RoadmapListAdd } from 'styles/Overview';\nimport OverviewBadge from 'components/Overview/OverviewBadge';\nimport AccessState from 'components/Overview/AccessState';\n\nimport { State } from 'types/state';\n\nconst limit = C.PLAN.FREE.LIMIT.ROADMAPS;\n\nconst Overview = ({ showInput }: { showInput: (value: boolean) => void }): JSX.Element | null => {\n  const userRoadmapsSet = useSelector((state: State) => state.user.roadmapsSet);\n  const userRoadmaps = useSelector((state: State) => state.user.roadmaps);\n  const metas = useSelector((state: State) => state.metas);\n  const user = useSelector((state: State) => state.user);\n  if (!user.fetchig && !user.id) {\n    // TODO: Investigate what's this case means and add error if needed\n    return <Spinner />;\n  }\n  if (!userRoadmapsSet) {\n    return null;\n  }\n  const roadmapsIDs = Object.keys(userRoadmaps);\n  const createRoadmap = () => showInput(true);\n\n  return (\n    <RoadmapList>\n      <RoadmapListTitle>\n        Your plans\n        <RoadmapListBubble title={`${limit} plans are available in your account`}>\n          {roadmapsIDs.length}/{limit}\n        </RoadmapListBubble>\n      </RoadmapListTitle>\n      {roadmapsIDs\n        .sort((a, b) => metas[a] && metas[b] && metas[a].createdAt - metas[b].createdAt)\n        .map(\n          (id, index) =>\n            index < limit && (\n              <RoadmapListItem key={id} to={`${C.URL.PLAN}${id}/`}>\n                <div>\n                  <OverviewBadge title={`This plan has ${metas[id].stats?.cards} cards`} caption=\"Cards\">\n                    {metas[id].stats?.cards}\n                  </OverviewBadge>\n                  <AccessState meta={metas[id]} />\n                  <OverviewBadge title=\"Not encrypted\" caption=\"Encryption\">\n                    <EncryptionNo />\n                  </OverviewBadge>\n                </div>\n                <p>{metas[id].name}</p>\n                <small>\n                  <time>{getLocalDate(metas[id].stats?.from)}</time>\n                  <time>{getLocalDate(metas[id].stats?.until)}</time>\n                </small>\n                <footer>\n                  <small>Created: {getLocalString(metas[id].createdAt)}</small>\n                </footer>\n              </RoadmapListItem>\n            )\n        )}\n      {roadmapsIDs.length < limit && <RoadmapListAdd onClick={createRoadmap}>Create a new plan</RoadmapListAdd>}\n    </RoadmapList>\n  );\n};\n\nexport default React.memo(Overview);\n","import React, { useLayoutEffect, useRef } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm, EditEntry } from 'styles/EditScreen';\n\nconst handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n  autoscaleTextarea(e.target as HTMLTextAreaElement);\n};\n\ntype Props = {\n  isShowingInput: boolean;\n  showInput: (value: boolean) => void;\n  roadmapName: string;\n  setRoadmapName: (value: string) => void;\n};\n\nconst SingleLineInput = ({ isShowingInput, showInput, roadmapName, setRoadmapName }: Props): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, []);\n\n  if (!isShowingInput) {\n    return null;\n  }\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      showInput(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      const { value } = e.currentTarget;\n      if (value !== '' && roadmapName !== value) {\n        setRoadmapName(value);\n      }\n      showInput(false);\n    } else if (e.key.toLocaleLowerCase() === 'escape') {\n      showInput(false);\n    }\n  };\n\n  return (\n    <Screen onClick={handleClick}>\n      <EditForm>\n        <EditEntry\n          ref={inputRef}\n          autoFocus={true}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Roadmap name\"\n        />\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(SingleLineInput);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Overview from 'components/Overview/Overview';\nimport SingleLineInput from 'components/Overview/SingleLineInput';\nimport { addAccountRoadmap } from 'state/actions/user';\n\nconst OverviewScreen = (): JSX.Element => {\n  const [isShowingInput, showInput] = useState(false);\n  const [roadmapName, setRoadmapName] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (roadmapName) {\n      dispatch(addAccountRoadmap(roadmapName));\n    }\n  }, [dispatch, roadmapName]);\n  return (\n    <React.Fragment>\n      <Overview showInput={showInput} />\n      <SingleLineInput\n        isShowingInput={isShowingInput}\n        showInput={showInput}\n        roadmapName={roadmapName}\n        setRoadmapName={setRoadmapName}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(OverviewScreen);\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport Roadmap from 'components/Screens/Roadmap';\nimport Overview from 'components/Screens/Overview';\nimport C from 'constants/index';\n\nconst RoutesComponent = (): JSX.Element => (\n  <Routes>\n    <Route path={`${C.URL.LOGIN}`} element={null} />\n    <Route path={`${C.URL.PLAN}:id`} element={<Roadmap />} />\n    <Route path={`${C.URL.ROOT}`} element={<Overview />} />\n  </Routes>\n);\n\nexport default React.memo(RoutesComponent);\n","import styled from 'styled-components';\nimport { SpinnerMixin } from 'styles/Common/Spinner';\n\nexport const MainBlock = styled.main`\n  overflow: scroll;\n  position: relative;\n  height: calc(100vh - 45px);\n  &:empty:before {\n    content: '';\n    ${SpinnerMixin}\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport Header from 'components/Header/Header';\nimport Routes from 'components/Core/Routes';\nimport { getMilisecondsUntilTomorrow, getTodayTimestamp } from 'utils/dates';\nimport { setTodayTimestamp } from 'state/actions/ui';\nimport C from 'constants/index';\n\nimport { MainBlock } from 'styles/Main';\nimport { State } from 'types/state';\nimport { login } from 'data/auth';\n\nlet timeout: number;\n\nconst Core = (): JSX.Element => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const manageTimer = () => {\n      if (document.hidden) {\n        window.clearTimeout(timeout);\n      } else {\n        const newTimestamp = getTodayTimestamp();\n        if (todayTimestamp !== newTimestamp) {\n          dispatch(setTodayTimestamp(newTimestamp));\n        } else {\n          timeout = window.setTimeout(() => {\n            dispatch(setTodayTimestamp(getTodayTimestamp()));\n          }, getMilisecondsUntilTomorrow());\n        }\n      }\n    };\n    manageTimer();\n    document.addEventListener('visibilitychange', manageTimer);\n    return () => {\n      document.removeEventListener('visibilitychange', manageTimer);\n    };\n  }, [dispatch, todayTimestamp]);\n\n  const { fetchig, id: userID } = useSelector((state: State) => state.user);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const isLoginPage = location.pathname === C.URL.LOGIN;\n  const isLoggedIn = !fetchig && userID !== '';\n\n  useEffect(() => {\n    if (isLoginPage) {\n      if (!fetchig && userID === '') {\n        // Not yet logged in\n        login();\n      } else if (!fetchig && userID !== '') {\n        // Logged In Successfuly\n        navigate(C.URL.ROOT);\n      }\n    } else if (!fetchig && userID === '') {\n      // Logged out\n      window.location.assign(C.URL.SIGNUP);\n    }\n  }, [navigate, isLoginPage, fetchig, userID]);\n\n  return (\n    <React.Fragment>\n      <Header isLoggedIn={isLoggedIn} />\n      <MainBlock>{fetchig ? null : <Routes />}</MainBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Core);\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/analytics';\n\nexport default (saveAnalyticsState: (analyticsState: firebase.analytics.Analytics) => void): void => {\n  firebase.initializeApp({\n    apiKey: 'AIzaSyDDHltlwPJGgqYbVyQ83VV6HMwT5TqNFg8',\n    authDomain: 'auth.rebelplans.com',\n    databaseURL: 'https://rebel-plans-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'rebel-plans',\n    messagingSenderId: '29847344796',\n    appId: '1:29847344796:web:2c601da3e5bfe5cd4a3f59',\n    measurementId: 'G-01YJX8T51M',\n  });\n  if (process.env.NODE_ENV && process.env.NODE_ENV !== 'development' && saveAnalyticsState) {\n    saveAnalyticsState(firebase.analytics());\n  }\n};\n","import { getTodayTimestamp } from 'utils/dates';\n\nimport { ElementType, State } from 'types/state';\n\nexport default {\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    photoURL: '',\n    fetchig: false,\n    roadmaps: {},\n    roadmapsSet: false,\n  },\n  cards: {},\n  lines: {\n    names: {},\n  },\n  longs: {},\n  miles: {},\n  selection: {\n    id: '',\n    isNew: false,\n    line: 0,\n    type: ElementType.none,\n    text: '',\n    from: '',\n    until: '',\n  },\n  metas: {},\n  ui: {\n    currentRoadmapID: '',\n    todayTimestamp: getTodayTimestamp(),\n    cardsPosition: '',\n    fromOffset: '',\n    untilOffset: '',\n  },\n} as State;\n","import produce from 'immer';\n\nimport initialState from 'state/initialState';\nimport { getDataString, getFromUntil, getUIOffset } from 'utils/dates';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['ui'];\n\nexport default (state: StatePart = initialState.ui, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'SET_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: action.payload.currentRoadmapID,\n        };\n      });\n    case 'REMOVE_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: '',\n          cardsPosition: '',\n          fromOffset: '',\n          untilOffset: '',\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.ui;\n    case 'ROADMAP_DATA_FETCH':\n      // TODO: Ignore if the data fetch is actually data submit\n      if (state.cardsPosition !== '' && state.fromOffset !== '' && state.untilOffset !== '') {\n        return state;\n      }\n      return produce(state, (nextState: StatePart) => {\n        // TODO: store these values in DB and use them also in UI as default offset\n        let { from, until } = getFromUntil(action.payload.cards);\n        const todayString = getDataString(nextState.todayTimestamp);\n        const { fromOffset, untilOffset } = getUIOffset(from, until, todayString);\n        if (!from || !until) {\n          from = from || todayString;\n          until = until || todayString;\n        }\n        return {\n          ...nextState,\n          cardsPosition: `${from.slice(0, 7)}-01`,\n          fromOffset: fromOffset,\n          untilOffset: untilOffset,\n        };\n      });\n    case 'SET_UI_OFFSET':\n      return state.fromOffset === action.payload.fromOffset && state.untilOffset === action.payload.untilOffset\n        ? state\n        : produce(state, (nextState: StatePart) => {\n            return {\n              ...nextState,\n              ...action.payload,\n            };\n          });\n    case 'SET_TODAY_TIMESTAMP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          todayTimestamp: action.payload.timestamp,\n        };\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport cards from './cards';\nimport lines from './lines';\nimport longs from './longs';\nimport miles from './miles';\nimport selection from './selection';\nimport metas from './metas';\nimport user from './user';\nimport ui from './ui';\n\nexport default combineReducers({\n  cards,\n  lines,\n  longs,\n  miles,\n  selection,\n  metas,\n  user,\n  ui,\n});\n","import produce from 'immer';\n\nimport { getNewDates } from 'utils/dates';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['cards'];\n\nexport default (state = initialState.cards, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'EDIT_CARD':\n      return produce(state, (nextState: StatePart) => {\n        if (!Number.isInteger(action.payload.progress)) {\n          delete action.payload.progress;\n        }\n        nextState[action.payload.id] = { ...action.payload };\n        return nextState;\n      });\n    case 'MOVE_CARD':\n      return produce(state, (nextState: StatePart) => {\n        const card = nextState[action.payload.id];\n        const [from, until] = getNewDates(action.payload, [card.from, card.until]);\n        const line = Math.max(card.line + action.payload.lineDiff, 0);\n        nextState[action.payload.id] = {\n          ...nextState[action.payload.id],\n          line,\n          from,\n          until,\n        };\n        return nextState;\n      });\n    case 'SELECTION_DELETE':\n      if (state[action.payload.id] !== undefined) {\n        return produce(state, (nextState: StatePart) => {\n          delete nextState[action.payload.id];\n          return nextState;\n        });\n      }\n      return state;\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.cards,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.cards;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['lines'];\n\nexport default (state = initialState.lines, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.lines,\n      };\n    case 'EDIT_LINE_NAME':\n      return produce(state, (nextState: StatePart) => {\n        if (action.payload.text.length) {\n          return {\n            ...nextState,\n            names: {\n              ...nextState.names,\n              [action.payload.line]: action.payload.text,\n            },\n          };\n        }\n        delete nextState.names[action.payload.line];\n        return nextState;\n      });\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.lines;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['longs'];\n\nexport default (state = initialState.longs, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.longs,\n      };\n    case 'EDIT_LONG':\n      return produce(state, (nextState: StatePart) => ({\n        ...nextState,\n        [action.payload.cardID]: action.payload.long,\n      }));\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.longs;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['miles'];\n\nexport default (state = initialState.miles, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'EDIT_MILE':\n      return produce(state, (nextState: StatePart) => {\n        nextState[action.payload.id] = {\n          ...state[action.payload.id],\n          ...action.payload,\n        };\n        return nextState;\n      });\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.miles,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.miles;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State, ElementType } from 'types/state';\n\ntype StatePart = State['selection'];\n\nexport default (state = initialState.selection, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'NEW_CARD':\n    case 'NEW_MILE':\n    case 'SELECT_CARD':\n    case 'SELECT_MILE':\n      return produce(state, (nextState: StatePart) => ({\n        ...nextState,\n        ...action.payload,\n        type: action.type.endsWith('_MILE') ? ElementType.mile : ElementType.card,\n      }));\n    case 'SELECTION_CANCEL':\n    case 'SELECTION_DELETE':\n    case 'EDIT_CARD':\n    case 'EDIT_MILE':\n      return produce(state, () => initialState.selection);\n    case 'AUTH_OUT':\n      return initialState.selection;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['metas'];\n\nexport default (state: StatePart = initialState.metas, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload.meta,\n        };\n      });\n    case 'ROADMAP_UPDATE_META':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          [action.payload.roadmapID]: {\n            ...nextState[action.payload.roadmapID],\n            stats: action.payload.stats,\n          },\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.metas;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['user'];\n\nexport default (state: StatePart = initialState.user, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'AUTH_FETCH':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          fetchig: true,\n        };\n      });\n    case 'AUTH_SUCCESS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload,\n          fetchig: false,\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.user;\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          roadmaps: {\n            ...nextState.roadmaps,\n            ...action.payload.roadmaps,\n          },\n          roadmapsSet: true,\n        };\n      });\n    case 'SET_ACCOUNT_ROADMAP_SETTING':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          roadmaps: {\n            ...nextState.roadmaps,\n            [action.payload.roadmapID]: {\n              ...nextState.roadmaps[action.payload.roadmapID],\n              [action.payload.settingName]: action.payload.settingValue,\n            },\n          },\n        };\n      });\n    case 'REMOVE_ACCOUNT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        delete nextState.roadmaps[action.payload.roadmapID];\n        return nextState;\n      });\n    default:\n      return state;\n  }\n};\n","export const RoadmapUserSetting = {\n  lineNameWidth: 0,\n};\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel, END } from 'redux-saga';\n\nimport { EditLineName } from 'types/actions';\nimport { Card, Meta, Mile, PersistentState, State } from 'types/state';\nimport { RoadmapUserSetting } from 'constants/defaults';\n\nconst testConnection = async (ref: firebase.database.Reference, emergencyBreak: () => void) => {\n  try {\n    const snapshot = await ref.once('value');\n    await snapshot.val();\n  } catch (error) {\n    // TODO: Log the error\n    // console.error(error);\n    emergencyBreak();\n  }\n};\n\nexport const getRoadmapContent = (roadmapID: string): EventChannel<PersistentState> =>\n  eventChannel((emiter) => {\n    const listener = firebase.database().ref(`roadmaps/${roadmapID}/content`);\n    const emergencyBreak = () => void emiter(END) || listener.off();\n    testConnection(listener, emergencyBreak);\n    listener.on('value', (snapshot) => {\n      // TODO: Log error in case permission is demied\n      const value = snapshot.val() as PersistentState;\n      emiter(\n        value ?? {\n          roadmapID: roadmapID,\n        }\n      );\n    });\n    return emergencyBreak;\n  });\n\nconst fetchRemoteContent = async <T>(path: string): Promise<T | undefined> => {\n  let content;\n  try {\n    const contentSnapshot = await firebase.database().ref(path).once('value');\n    content = contentSnapshot.val();\n  } catch (error) {\n    // TODO: Log this error in the storage\n    // TODO: Show user a warning\n    // console.error(error);\n  } finally {\n    return content;\n  }\n};\n\nexport const fetchAccountRoadmaps = async (userID: string) =>\n  await fetchRemoteContent<State['user']['roadmaps']>(`users/${userID}/roadmaps`);\n\nexport const removeAccountRoadmap = async (userID: string, roadmapID: string): Promise<void> =>\n  await firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}`).remove();\n\nexport const fetchSharedRoadmaps = async (hashedEmail: string) =>\n  await fetchRemoteContent<Meta['share']>(`share/${hashedEmail}`);\n\nexport const addAccountRoadmapByID = async (userID: string, roadmapID: string): Promise<firebase.database.Reference> =>\n  await firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}`).update(RoadmapUserSetting);\n\nexport const removeSharedByEmailRoadmap = async (hashedEmail: string, roadmapID: string): Promise<void> =>\n  await firebase.database().ref(`share/${hashedEmail}/${roadmapID}`).remove();\n\nexport const fetchRoadmapMeta = async (roadmapID: string) =>\n  await fetchRemoteContent<Meta>(`roadmaps/${roadmapID}/meta/`);\n\nexport const fetchRoadmapShare = async (roadmapID: string) =>\n  await fetchRemoteContent<Meta['share']>(`roadmaps/${roadmapID}/share/`);\n\nexport const fetchRoadmapOwner = async (roadmapID: string) =>\n  await fetchRemoteContent<Meta['owner']>(`roadmaps/${roadmapID}/owner/`);\n\nexport const updateRemoteMeta = async (roadmapID: string, stats: Meta['stats']): Promise<firebase.database.Reference> =>\n  await firebase\n    .database()\n    .ref(`roadmaps/${roadmapID}/meta/stats/`)\n    .update({\n      ...stats,\n    });\n\nexport const updateRemoteCardData = (currentRoadmapID: string, card: Card | { id: string }): void => {\n  const { id, ...content } = card;\n  const ref = firebase.database().ref(`roadmaps/${currentRoadmapID}/content/cards/${id}`);\n  if (Object.keys(content).length) {\n    void ref.update({\n      progress: null,\n      ...content,\n    });\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const updateRemoteMileData = (currentRoadmapID: string, mile: Mile): void => {\n  const { id, ...content } = mile;\n  const ref = firebase.database().ref(`roadmaps/${currentRoadmapID}/content/miles/${id}`);\n  if (Object.keys(content).length && content.text.length) {\n    void ref.update({\n      ...content,\n    });\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const updateRemoteLineData = (currentRoadmapID: string, { line, text }: EditLineName['payload']): void => {\n  const ref = firebase.database().ref(`roadmaps/${currentRoadmapID}/content/lines/names/`);\n  void ref.update({ [line]: text.length ? text : null });\n};\n\nexport const updateRemoteLong = (roadmapID: string, cardID: string, long: string): void => {\n  const ref = firebase.database().ref(`roadmaps/${roadmapID}/content/longs/${cardID}/`);\n  if (long) {\n    void ref.set(long);\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const addRemoteAccountRoadmap = async (userID: string, time: number, roadmapName: string): Promise<string> => {\n  const roadmapID = firebase.database().ref(`users/${userID}/roadmaps/`).push().key;\n  if (roadmapID) {\n    await firebase\n      .database()\n      .ref(`users/${userID}/roadmaps/`)\n      .update({\n        [roadmapID]: RoadmapUserSetting,\n      });\n    await firebase.database().ref(`roadmaps/${roadmapID}/owner/`).set(userID);\n    await firebase\n      .database()\n      .ref(`roadmaps/${roadmapID}/meta/`)\n      .update({\n        name: roadmapName,\n        createdAt: time,\n        stats: {\n          from: '',\n          cards: 0,\n          until: '',\n        },\n      });\n    return roadmapID;\n  }\n  return '';\n};\n\ntype SettingProp = {\n  userID: string;\n  roadmapID: string;\n  settingName: string;\n  settingValue: string | number | undefined;\n};\n\nexport const setAccountRoadmapSetting = ({ userID, roadmapID, settingName, settingValue }: SettingProp): void => {\n  const ref = firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}/${settingName}`);\n  if (settingValue !== undefined) {\n    void ref.set(settingValue);\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const removeRemoteAccountRoadmap = (userID: string, roadmapID: string): void => {\n  void firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}/`).remove();\n};\n","import firebase from 'firebase/app';\n\nimport { State } from 'types/state';\n\nexport const createAccount = (user: State['user']): void =>\n  void firebase.database().ref(`users/${user.id}`).set({\n    name: user.name,\n  });\n","import { put, call, select, all, fork, Effect, CallEffect, AllEffect } from 'redux-saga/effects';\n\nimport {\n  addAccountRoadmapByID,\n  fetchAccountRoadmaps,\n  fetchRoadmapMeta,\n  fetchRoadmapShare,\n  fetchRoadmapOwner,\n  fetchSharedRoadmaps,\n  removeSharedByEmailRoadmap,\n  removeAccountRoadmap,\n} from 'data/data';\nimport { createAccount } from 'data/newUser';\nimport { setAccountRoadmaps } from 'state/actions/user';\n\nimport { Meta, State } from 'types/state';\nimport { RoadmapUserSetting } from 'constants/defaults';\n\ntype Effects = CallEffect<Meta | undefined> | CallEffect<Meta['share'] | undefined> | CallEffect<string | undefined>;\n\nfunction* fetchMeta(roadmapID: string): Generator<AllEffect<Effects>> {\n  // TODO: Subscribe to meta changes (like we do for roadmaps)\n  const [meta, share, owner] = (yield all([\n    call(fetchRoadmapMeta, roadmapID),\n    call(fetchRoadmapShare, roadmapID),\n    call(fetchRoadmapOwner, roadmapID),\n  ])) as [Meta, Meta['share'], string];\n  return meta\n    ? {\n        ...meta,\n        ...(share && { share }),\n        ...(owner && { owner }),\n      }\n    : undefined;\n}\n\nconst createEffectMap = (source: string[]): { [key: string]: Effect } =>\n  source.reduce((acc, roadmapID) => {\n    acc[roadmapID] = call(fetchMeta, roadmapID);\n    return acc;\n  }, {} as { [key: string]: Effect });\n\nexport function* fetchUserRoadmapsData(userID: string, email: string) {\n  const ownRoadmaps = ((yield call(fetchAccountRoadmaps, userID)) as State['user']['roadmaps']) || {};\n  const ownRoadmapIDs = Object.keys(ownRoadmaps);\n  if (!ownRoadmapIDs) {\n    const user = (yield select((state: State) => state.user)) as State['user'];\n    yield call(createAccount, user);\n  }\n\n  const hashedEmail = email.replaceAll('.', ' ');\n  const sharedRoadmaps = ((yield call(fetchSharedRoadmaps, hashedEmail)) as Meta['share']) || {};\n\n  const sharedRoadmapIDs = Object.keys(sharedRoadmaps);\n  const roadmapIDs = sharedRoadmapIDs.concat(ownRoadmapIDs);\n\n  const mergedRoadmaps = Object.assign(ownRoadmaps, sharedRoadmaps) as State['user']['roadmaps'];\n  let metas = {} as State['metas'];\n  // Check if the shared roadmaps are accesible; if yes merge with ownRoadmaps before calling 'setAccountRoadmaps'\n  if (roadmapIDs.length) {\n    metas = yield all(createEffectMap(roadmapIDs));\n    for (const roadmapID in metas) {\n      if (metas[roadmapID] === undefined) {\n        // If fetching meta data failed (access problem) remove roadmaps from the shared list\n        delete mergedRoadmaps[roadmapID];\n        delete metas[roadmapID];\n        // Remove roadmap with no access (doesn't exist or access is limited) from user's access list\n        yield fork(removeAccountRoadmap, userID, roadmapID);\n        // Remove shared roadmaps from the shared list & when list is empty remove the email\n        yield fork(removeSharedByEmailRoadmap, hashedEmail, roadmapID);\n      }\n    }\n    for (const roadmapID in mergedRoadmaps) {\n      if (typeof mergedRoadmaps[roadmapID] === 'string') {\n        mergedRoadmaps[roadmapID] = RoadmapUserSetting;\n        // Adding new roadmaps in user profile\n        yield fork(addAccountRoadmapByID, userID, roadmapID);\n        // Remove shared roadmaps from the shared list & when list is empty remove the email\n        yield fork(removeSharedByEmailRoadmap, hashedEmail, roadmapID);\n      }\n    }\n  }\n  // Check the number of account roadmaps (don't add shared roadmaps if user reached available payment plan quota)\n  yield put(setAccountRoadmaps(mergedRoadmaps, metas));\n}\n","import { fork, take, TakeEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { fetchUserRoadmapsData } from 'state/sagas/roadmaps';\nimport { AuthSuccess } from 'types/actions';\n\nexport function* watchAuth(): Generator<TakeEffect | ForkEffect<void>, void, AuthSuccess> {\n  while (true) {\n    const action = yield take('AUTH_SUCCESS');\n    if (typeof action.payload?.id === 'string') {\n      yield fork(fetchUserRoadmapsData, action.payload.id, action.payload.email);\n    }\n  }\n}\n","import { fork, select, put } from 'redux-saga/effects';\nimport equal from 'fast-deep-equal';\n\nimport { updateRemoteMeta } from 'data/data';\n\nimport { Cards, Meta, State } from 'types/state';\nimport { roadmapUpdateMeta } from 'state/actions/metas';\n\nexport function* updateMeta(roadmapID: string, cards: Cards) {\n  const oldStats = (yield select((state: State) => state.metas[roadmapID].stats)) as Meta['stats'];\n  const newStats = Object.values(cards).reduce(\n    (acc, val) => {\n      acc.cards++;\n      acc.from = acc.from ? (acc.from.localeCompare(val.from) > 0 ? val.from : acc.from) : val.from;\n      acc.until = acc.until ? (acc.until.localeCompare(val.until) > 0 ? acc.until : val.until) : val.until;\n      return acc;\n    },\n    { cards: 0, from: '', until: '' }\n  );\n  const stats = {\n    ...oldStats,\n    ...newStats,\n  };\n  if (!equal(oldStats, stats)) {\n    yield put(roadmapUpdateMeta({ roadmapID, stats }));\n    yield fork(updateRemoteMeta, roadmapID, stats);\n  }\n}\n","import { RoadmapUpdateMeta } from 'types/actions';\n\nexport const roadmapUpdateMeta = ({ roadmapID, stats }: RoadmapUpdateMeta['payload']): RoadmapUpdateMeta => ({\n  type: 'ROADMAP_UPDATE_META',\n  payload: {\n    roadmapID,\n    stats,\n  },\n});\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteCardData } from 'data/data';\nimport { updateMeta } from 'state/sagas/meta';\n\nimport { CardEditActions } from 'types/actions';\nimport { Cards, State } from 'types/state';\n\ntype ChangeActions = CardEditActions | Cards | string | undefined;\n\nexport function* watchCardChange(): Generator<TakeEffect | SelectEffect | ForkEffect<unknown>, void, ChangeActions> {\n  while (true) {\n    const action = (yield take(['EDIT_CARD', 'MOVE_CARD', 'SELECTION_DELETE'])) as CardEditActions;\n    const cards = (yield select((state: State) => state.cards)) as Cards;\n    const card = cards[action.payload.id];\n    const currentRoadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (currentRoadmapID) {\n      yield fork(updateRemoteCardData, currentRoadmapID, card || { id: action.payload.id });\n      yield fork(updateMeta, currentRoadmapID, cards);\n    }\n  }\n}\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteLineData } from 'data/data';\n\nimport { EditLineName } from 'types/actions';\nimport { State } from 'types/state';\n\nexport function* watchLineChange(): Generator<\n  TakeEffect | SelectEffect | ForkEffect<unknown>,\n  void,\n  EditLineName | string\n> {\n  while (true) {\n    const action = (yield take('EDIT_LINE_NAME')) as EditLineName;\n    const currentRoadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (currentRoadmapID) {\n      yield fork(updateRemoteLineData, currentRoadmapID, action.payload);\n    }\n  }\n}\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteLong } from 'data/data';\n\nimport { EditLong } from 'types/actions';\nimport { State } from 'types/state';\n\nexport function* watchLongChange(): Generator<TakeEffect | SelectEffect | ForkEffect<void>, void, EditLong | string> {\n  while (true) {\n    const { payload } = (yield take(['EDIT_LONG'])) as EditLong;\n    const roadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (roadmapID && payload.cardID) {\n      yield fork(updateRemoteLong, roadmapID, payload.cardID, payload.long);\n    }\n  }\n}\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteMileData } from 'data/data';\n// import { updateMeta } from 'state/sagas/meta';\n\nimport { MileEditActions } from 'types/actions';\nimport { Miles, State } from 'types/state';\n\ntype ChangeActions = MileEditActions | Miles | string | undefined;\n\nexport function* watchMileChange(): Generator<TakeEffect | SelectEffect | ForkEffect<unknown>, void, ChangeActions> {\n  while (true) {\n    const action = (yield take(['EDIT_MILE'])) as MileEditActions;\n    const miles = (yield select((state: State) => state.miles)) as Miles;\n    const mile = miles[action.payload.id];\n    const currentRoadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (currentRoadmapID) {\n      yield fork(updateRemoteMileData, currentRoadmapID, mile || { id: action.payload.id });\n      // yield fork(updateMeta, currentRoadmapID, cards);\n    }\n  }\n}\n","import { FetchedData } from 'types/state';\n\nexport const getKeyWithTrueValue = (arr: Array<[string, boolean]> = []): string | undefined =>\n  (arr.find((pair) => pair[1]) || [])[0];\n\nexport const hydrateWithIDs = (data: FetchedData): FetchedData => {\n  (Object.keys(data) as Array<keyof typeof data>).forEach((type) => {\n    if (type === 'cards' || type === 'miles') {\n      const obj = data[type];\n      (Object.keys(obj) as Array<keyof typeof obj>).forEach((key) => {\n        const string = String(key);\n        obj[string].id = string;\n      });\n    }\n    if (type === 'lines') {\n      data.lines.names = Object.assign({}, data.lines.names);\n    }\n  });\n  return data;\n};\n","import {\n  put,\n  fork,\n  take,\n  call,\n  select,\n  race,\n  TakeEffect,\n  ForkEffect,\n  SelectEffect,\n  CallEffect,\n  PutEffect,\n} from 'redux-saga/effects';\nimport equal from 'fast-deep-equal';\n\nimport { getRoadmapContent, addRemoteAccountRoadmap } from 'data/data';\nimport { removeAccountRoadmap, roadmapDataFetch, setAccountRoadmaps } from 'state/actions/user';\nimport { hydrateWithIDs } from 'utils/arrays';\n\nimport C from 'constants/index';\n\nimport { AddAccountRoadmap, SetAccountRoadmaps, SetCurrentRoadmap } from 'types/actions';\nimport { PersistentState, State } from 'types/state';\nimport { RoadmapUserSetting } from 'constants/defaults';\n\nfunction* fetchCurrentRoadmapData(currentRoadmapID: string) {\n  const channel = getRoadmapContent(currentRoadmapID);\n  let isCancelled = false;\n  try {\n    while (true) {\n      const { roadmapData } = (yield race({\n        roadmapData: take(channel),\n        cancel: take('REMOVE_CURRENT_ROADMAP'),\n      })) as { roadmapData: PersistentState };\n      if (roadmapData) {\n        // TODO: Warn about changes in meta (it will not be auto-updated)\n        // TODO: Consider storing IDs in DB (use more space, but faster and we can compare values with Redux store)\n        if (roadmapData.cards === undefined && roadmapData.miles === undefined) {\n          // New roadmaps are empty and will fail check with previous (also empty) state, so we have this shortcut\n          yield put(\n            roadmapDataFetch({\n              cards: {},\n              lines: {\n                names: {},\n              },\n              longs: {},\n              miles: {},\n              roadmapID: currentRoadmapID,\n            })\n          );\n        } else {\n          const hydratedData = hydrateWithIDs({\n            cards: roadmapData.cards || {},\n            lines: roadmapData.lines || {\n              names: {},\n            },\n            longs: roadmapData.longs || {},\n            miles: roadmapData.miles || {},\n            roadmapID: currentRoadmapID,\n          });\n          const cards: PersistentState['cards'] = yield select((state) => state.cards);\n          const lines: PersistentState['lines'] = yield select((state) => state.lines);\n          const longs: PersistentState['longs'] = yield select((state) => state.longs);\n          const miles: PersistentState['miles'] = yield select((state) => state.miles);\n          const equalCards = equal(hydratedData.cards, cards);\n          const equalLines = equal(hydratedData.lines, lines);\n          const equalLongs = equal(hydratedData.longs, longs);\n          const equalMiles = equal(hydratedData.miles, miles);\n          if (!equalCards || !equalLongs || !equalLines || !equalMiles) {\n            yield put(roadmapDataFetch(hydratedData));\n          }\n        }\n      } else {\n        isCancelled = true;\n        channel.close();\n      }\n    }\n  } finally {\n    if (!isCancelled) {\n      // Error in data fetch: requested roadmap doesn't exist. Removing its ID from user account.\n      // TODO: Show a notification that the roadmap can't be accessed\n      yield put(removeAccountRoadmap(currentRoadmapID));\n    }\n  }\n}\n\nexport function* watchCurrentRoadmapChange(): Generator<TakeEffect | ForkEffect<void>, void, SetCurrentRoadmap> {\n  while (true) {\n    const { currentRoadmapID } = (yield take(['SET_CURRENT_ROADMAP'])).payload;\n    if (typeof currentRoadmapID === 'string' && currentRoadmapID.length === C.ID.LENGTH) {\n      yield fork(fetchCurrentRoadmapData, currentRoadmapID);\n    }\n  }\n}\n\nexport function* watchAddRoadmap(): Generator<\n  TakeEffect | SelectEffect | CallEffect<string> | PutEffect<SetAccountRoadmaps> | ForkEffect<void>,\n  void,\n  AddAccountRoadmap | string\n> {\n  while (true) {\n    const { roadmapName } = ((yield take(['ADD_ACCOUNT_ROADMAP'])) as AddAccountRoadmap).payload;\n    if (typeof roadmapName === 'string' && roadmapName.length) {\n      const userID = (yield select((state: State) => state.user.id)) as string;\n      const createdAt = Date.now();\n      const roadmapID = (yield call(addRemoteAccountRoadmap, userID, createdAt, roadmapName)) as string;\n      // TODO: refactor to avoid duplication\n      yield put(\n        setAccountRoadmaps(\n          {\n            [roadmapID]: RoadmapUserSetting,\n          },\n          {\n            [roadmapID]: {\n              createdAt,\n              name: roadmapName,\n              owner: userID,\n              stats: {\n                from: '',\n                cards: 0,\n                until: '',\n              },\n            },\n          }\n        )\n      );\n    }\n  }\n}\n","export const setRecurrentEvent = (fn: () => void, timeout: number): (() => void) => {\n  let eventActive = true;\n  const recurrentEvent = (func: () => void, time: number): void => {\n    setTimeout(() => {\n      if (eventActive) {\n        func();\n        recurrentEvent(func, time);\n      }\n    }, time);\n  };\n  return (() => {\n    fn();\n    recurrentEvent(fn, timeout);\n    return () => {\n      eventActive = false;\n    };\n  })();\n};\n","import { take, select, call } from 'redux-saga/effects';\n\nimport { writeUserLastActive } from 'data/user';\nimport { setAccountRoadmapSetting } from 'data/data';\nimport { AuthSuccess, SetAccountRoadmapSetting } from 'types/actions';\nimport { setRecurrentEvent } from 'utils/recurrent';\nimport C from 'constants/index';\nimport { State } from 'types/state';\n\nexport function* sendLastActive() {\n  let stopSending = () => {};\n  while (true) {\n    const actionLogin = (yield take('AUTH_SUCCESS')) as AuthSuccess;\n    if (typeof actionLogin.payload?.id === 'string') {\n      stopSending = setRecurrentEvent(() => writeUserLastActive(actionLogin.payload.id), C.TIME.LAST_ACTIVE);\n    }\n    yield take('AUTH_OUT');\n    stopSending();\n  }\n}\n\nexport function* listenRoadmapSettingChange() {\n  while (true) {\n    const action = (yield take('SET_ACCOUNT_ROADMAP_SETTING')) as SetAccountRoadmapSetting;\n    const userID = (yield select((state: State) => state.user.id)) as string;\n    const { roadmapID, settingName, settingValue } = action.payload;\n    yield call(setAccountRoadmapSetting, { userID, roadmapID, settingName, settingValue });\n  }\n}\n","import firebase from 'firebase/app';\n\nexport const analytics = (() => {\n  let savedAnalyticsState: firebase.analytics.Analytics | undefined;\n  return {\n    saveAnalyticsState: (analyticsState: firebase.analytics.Analytics) => {\n      savedAnalyticsState = analyticsState;\n    },\n    act: () => savedAnalyticsState,\n  };\n})();\n","import { take, TakeEffect } from 'redux-saga/effects';\n\nimport { analytics } from 'utils/analytics';\n\nimport { Actions } from 'types/actions';\n\nimport app from 'constants/../../package.json';\n\nexport function* sendAnalytics(): Generator<TakeEffect, void, Actions> {\n  while (true) {\n    const action = yield take('*');\n    if (action.type === 'AUTH_SUCCESS') {\n      analytics.act()?.logEvent('login', {\n        method: 'Google',\n        uuid: action.payload.id,\n        app_version: app.version,\n      });\n    }\n  }\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchAuth } from './auth';\nimport { watchCardChange } from './card';\nimport { watchLineChange } from './line';\nimport { watchLongChange } from './long';\nimport { watchMileChange } from './mile';\nimport { watchAddRoadmap, watchCurrentRoadmapChange } from './roadmap';\nimport { sendLastActive, listenRoadmapSettingChange } from './user';\nimport { sendAnalytics } from './analytics';\n\nexport default function* rootSaga(): Generator<unknown, void, unknown> {\n  yield all([\n    watchAuth(),\n    watchCardChange(),\n    watchLineChange(),\n    watchLongChange(),\n    watchMileChange(),\n    watchAddRoadmap(),\n    watchCurrentRoadmapChange(),\n    sendLastActive(),\n    listenRoadmapSettingChange(),\n    sendAnalytics(),\n  ]);\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body, main, section {\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n  input {\n    font-family: Helvetica, Arial, sans-serif;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { enableAllPlugins } from 'immer';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Core from 'components/Core/Core';\nimport createStore from 'state/store';\n\nimport { GlobalStyle } from 'styles/Global';\n\nenableAllPlugins();\nconst store = createStore();\nconst rootAppNode = document.body.firstElementChild;\n\nif (rootAppNode) {\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <GlobalStyle />\n        <Core />\n      </BrowserRouter>\n    </Provider>,\n    rootAppNode\n  );\n}\n","import { createStore, applyMiddleware, Store, CombinedState } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport dataInit from 'data';\nimport { trackAuthChange } from 'data/auth';\nimport rootReducer from 'state/reducers';\nimport rootSaga from 'state/sagas';\nimport { authFetch, authOut, authSuccess } from 'state/actions/user';\n\nimport { Actions, AuthSuccess } from 'types/actions';\nimport { State } from 'types/state';\n\nimport { analytics } from 'utils/analytics';\n// import { loadState, saveState } from './localStorage';\n\nexport default (): Store<CombinedState<State>, Actions> => {\n  // Firebase initialization\n  dataInit(analytics.saveAnalyticsState);\n\n  // const persistedState = loadState();\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = applyMiddleware(sagaMiddleware);\n  const composedMiddleware = composeWithDevTools({ trace: true, traceLimit: 25 })(middleware);\n\n  const store = createStore(rootReducer, composedMiddleware);\n  sagaMiddleware.run(rootSaga);\n\n  // Starting authorization and provinging two callbacks for succesful & failed fetching auth data\n  trackAuthChange({\n    fetching: () => store.dispatch(authFetch()),\n    success: (userData: AuthSuccess['payload']) => store.dispatch(authSuccess(userData)),\n    out: () => store.dispatch(authOut()),\n  });\n\n  // const store = createStore(rootReducer, persistedState, composedMiddleware);\n  // store.subscribe(() => {\n  //   const { selection, ...stateRest } = store.getState();\n  //   saveState(stateRest);\n  // });\n\n  return store;\n};\n","import React from 'react';\n\nconst SvgIcon = (props: { children?: JSX.Element; className?: string }): JSX.Element => {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      {props?.children}\n    </svg>\n  );\n};\n\nexport default React.memo(SvgIcon);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkroadmap\"] = self[\"webpackChunkroadmap\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [559,298], () => (__webpack_require__(6397)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","weekendColor","logo","pink","green","yellow","blue","header","dark","demi","grey","lite","light","border","background","statusColorMap","pending","progress","delayed","complete","dropped","accent","danger","stable","active","text","onDark","bold","main","mute","onLight","statusColors","HeaderBlock","styled","color","Logo","Link","RoadmapTitle","AvatarBlock","ID","LENGTH","SYMBOLS","DAY","WIDTH","HEADER","HEIGHT","MILE_HEIGHT","CARD","VERTICAL_SPACE","HORIZONTAL_SPACE","RESIZE_TOLERANCE","CARDDECK_MOUSE_POSITION_FIX","LINE","MIN_WIDTH","INIT_WIDTH","MIN_WIDTH_COLLAPSE","MILE","MARGIN","LOCALE","navigator","language","COLUMN_MULTIPLIER","PLAN","FREE","LIMIT","ROADMAPS","TIME","DAYS_IN_MONTH","AUTOSAVE_MS","LAST_ACTIVE","MILLISECONDS_IN_DAY","URL","INDEX","SIGNUP","LOGIN","ROOT","RoadmapList","title","currentRoadmapID","useSelector","state","ui","metas","roadmapName","useMemo","name","useEffect","document","React","ConnectionStatus","user","useState","isConnected","setConnected","callback","connectionChannel","status","eventChannel","firebase","listener","ref","on","snapshot","val","off","close","id","Check","className","Cancel","writeUserLastActive","userID","update","lastActive","Date","now","DropdownGroup","colors","DropdownWraper","Dropdown","onClick","alert","signOut","Avatar","photoURL","src","alt","UserIcon","Header","isLoggedIn","to","C","app","Title","nanoid","customAlphabet","selectionDelete","type","payload","getExtraMonths","Math","ceil","window","innerWidth","getPlaceholderWidth","x1","x2","max","round","getCardStatus","from","until","today","undefined","localeCompare","fromToToday","getDaysDiff","getDaysInterval","autoscaleTextarea","textarea","setFocus","style","height","scrollHeight","Number","isInteger","selectionStart","value","length","selectionEnd","scrollToToday","list","smooth","scroll","left","offsetLeft","parentElement","behavior","getInputIndexInGrandParent","el","HTMLInputElement","parent","HTMLElement","grandParent","index","slice","call","children","indexOf","total","querySelectorAll","callItBack","months","getTwoDigitDate","number","getMonthString","date","year","month","getYMDFromTimestamp","timestamp","getUTCFullYear","getUTCMonth","day","getUTCDate","getYMDWFromTimestamp","firstDay","setUTCHours","setUTCDate","firstWeekDay","getUTCDay","getTodayTimestamp","UTC","getFullYear","getMonth","getDate","getDataString","toISOString","getLocalDate","time","Intl","DateTimeFormat","dateStyle","format","date1","date2","getTime","getDateFromDiff","diff","getExpandedDate","offsetMonths","isFuture","getNewDates","dates","direction","dateDiff","map","getMonthList","swap","split","fromYear","fromMonth","untilYear","untilMonth","yearMonth1","yearMonth2","min","extraMonth","skipOneMonthForFuture","yearsDiff","monthsDiff","Array","fill","_","getExtendedMonthList","i","offset","newMonths","prototype","apply","getFromUntil","cards","Object","values","reduce","card","getUIOffset","todayString","extraMonths","fromOffset","untilOffset","placeholderInitState","started","y1","line","done","placeholder","notify","fn","x","parseInt","m","d","setMonths","passID","set","newID","get","removePlaceholder","e","target","relatedTarget","getAttribute","mXFix","mYFix","getCoords","coord","nativeEvent","button","offsetTop","HTMLButtonElement","cardDeck","getMousePositionFromCardDeck","mX","mY","offsetX","offsetY","ElementType","PlaceholderBlock","props","solid","PlaceholderContent","Placeholder","aim","setAim","memoizedCards","isAimHoversCard","shortList","filter","some","Boolean","isAimOnCard","selectionType","selection","none","dispatch","useDispatch","isNew","newCard","shouldSkipAim","opacity","transform","size","width","String","getPlaceholderData","weekDay","tip","isToday","MileBlock","MilePlaceholder","Mile","milesObject","miles","combinedDate","MonthMiles","mile","todayMileStyle","key","Month","monthName","toLocaleDateString","getMonthName","days","dateObject","weekday","getDateForTooltip","Day","mileOffset","setMileOffset","placeholderStyle","display","onMouseMove","tagName","toLowerCase","floor","clientX","getBoundingClientRect","onMouseLeave","newMile","DeckBlock","DeckInner","MonthsBlock","fDay","dayWidth","daysWidth","relativePart","wC","Today","TodayScroll","scrollPosition","todayRef","todayTimestamp","cardsPosition","cardsYear","cardsMonth","todayStyle","MonthBlock","monthStyle","CardWaraper","DeckLineCounter","CardBlockText","CardStatusSVG","xmlns","viewBox","CardBlockProgress","CardBlock","cardCases","CardStatus","RoadmapCard","typeS","progS","color1","color2","getProgressBackgroud","CLR","handleMouseDown","classList","contains","altKey","ctrlKey","metaKey","shiftKey","onContextMenu","preventDefault","stopPropagation","onDoubleClick","onMouseEnter","onTouchStart","onMouseDown","CardsDeck","setLines","cardsObject","lineNames","lines","names","lineSize","useRef","current","dayOffset","dayDiff","top","Card","maxLine","keys","acc","wrapperStyle","maxSize","setAccountRoadmaps","roadmaps","meta","roadmapDataFetch","roadmapData","DeckLines","lineCount","roadmapID","lineNameWidth","drag","setDrag","setMaxLine","editState","setEditState","inputPanel","inputHandler","nextFocusInputIndex","panelWidth","maxName","newPanelWidth","settingName","settingValue","setAccountRoadmapSetting","saveLine","handleEditOpen","HTMLDivElement","handleEditClose","handleInputBlur","click","handleInputKeyDown","reverse","isEdge","toLocaleLowerCase","saved","focus","grandpa","newTarget","setFocusWithoutRerender","handlePressToDrag","handleMoveToDrag","handleReleaseResize","handleDragOut","EditNames","defaultValue","onBlur","onKeyDown","autoFocus","onMouseUp","onMouseOut","ShowNames","setUIOffset","setTodayTimestamp","Deck","listRef","fire","ready","position","setScrollPosition","hasMonths","lastOffset","updateMonths","useLayoutEffect","scrollLeft","moveCard","cardDetails","resize","limit","pressX","extraSize","dateTable","removeDateTable","remove","clearDesk","immidiate","wasResized","cursor","pointerEvents","zIndex","setTimeout","pressInZone","currentTarget","add","clientWidth","moveInZone","y","clientY","diffX","extra","extraX","curTarget","rect","childRect","scrollTop","item","offsetWidth","trunc","movePlaceholder","releaseInZone","Error","lineDiff","enterZone","leaveZone","HTMLHtmlElement","HTMLSpanElement","renderPastOrFuture","firstMonth","newDate","extraLeftOffset","d1","d2","setDate","lastMonth","Months","MonthsList","tabIndex","blur","onScroll","deck","scrollCurrent","todayElement","todayLeft","showScrollButton","daysVisible","daysTotal","scrollWidth","Roadmap","cancelAction","addEventListener","removeEventListener","shake","keyframes","rotate","EditScreen","EditForm","EditExtra","Fieldset","FormLabel","LabelWarp","attrs","as","join","FormInput","FormInputWrap","RangeInput","EditExtraFields","EditExtraActions","EditEntry","rows","hoverColor","action","Button","Range","disabled","change","save","setVal","handleChange","newVal","isNaN","htmlFor","onChange","SwitchBlock","Switch","toggle","defaultChecked","DateInput","inputRef","select","required","pattern","EditorWrap","debouncedSave","debounce","func","styleMap","STRIKETHROUGH","textDecoration","HIGHLIGHT","backgroundColor","LongEditor","cardID","rawState","longs","EditorState","initialRaw","convertFromRaw","JSON","parse","editorState","setEditorState","dispatchEdit","long","handleTab","changeState","RichUtils","getCurrentContent","context","getPlainText","trim","newRawState","stringify","raw","convertToRaw","blocks","block","newBlock","assign","depth","inlineStyleRanges","entityRanges","data","convertToJSON","saveLong","cancel","Editor","flush","onTab","handleKeyCommand","command","toUpperCase","keyBindingFn","KeyBindingUtil","code","getDefaultKeyBinding","customStyleMap","EditFields","setSelection","cardDispatch","isProgressOn","isFinite","setFrom","setUntil","Save","Revert","Delete","EditTitle","enforceExtraFields","prevSelection","DefaultState","selectedElement","namespace","isExtraFieldsEnforced","newSelection","setNewSelection","isInvalid","setInvalid","selected","isCardValid","edited","original","editedKeys","originalKeys","hasCardChanged","mileDate","delete","hasExtraFields","Screen","RoadmapScreen","navigate","useNavigate","location","useLocation","routeID","useMatch","params","roadmapsSet","userRoadmapIDs","includes","setCurrentRoadmap","pathname","SpinnerMixin","css","Spinner","RoadmapListTitle","RoadmapListBubble","RoadmapListItem","RoadmapListAdd","OverviewBadge","caption","AccessState","option","owner","share","sharedNumber","access","private","node","Private","shared","Shared","edit","Edit","view","View","Overview","showInput","userRoadmapsSet","userRoadmaps","fetchig","roadmapsIDs","sort","a","b","createdAt","stats","EncryptionNo","timeStyle","getLocalString","SingleLineInput","isShowingInput","setRoadmapName","OverviewScreen","addAccountRoadmap","RoutesComponent","Routes","Route","path","element","timeout","MainBlock","Core","manageTimer","hidden","clearTimeout","newTimestamp","getMilisecondsUntilTomorrow","isLoginPage","provider","useDeviceLanguage","signInWithRedirect","login","email","combineReducers","initialState","produce","nextState","endsWith","RoadmapUserSetting","testConnection","emergencyBreak","once","getRoadmapContent","emiter","END","fetchRemoteContent","contentSnapshot","content","fetchAccountRoadmaps","removeAccountRoadmap","fetchSharedRoadmaps","hashedEmail","addAccountRoadmapByID","removeSharedByEmailRoadmap","fetchRoadmapMeta","fetchRoadmapShare","fetchRoadmapOwner","updateRemoteMeta","updateRemoteCardData","updateRemoteMileData","updateRemoteLineData","updateRemoteLong","addRemoteAccountRoadmap","push","createAccount","fetchMeta","fetchUserRoadmapsData","all","ownRoadmaps","ownRoadmapIDs","replaceAll","sharedRoadmaps","sharedRoadmapIDs","roadmapIDs","concat","mergedRoadmaps","fork","put","watchAuth","take","updateMeta","oldStats","newStats","equal","watchCardChange","watchLineChange","watchLongChange","watchMileChange","hydrateWithIDs","forEach","obj","string","fetchCurrentRoadmapData","watchCurrentRoadmapChange","watchAddRoadmap","channel","isCancelled","race","hydratedData","equalCards","equalLines","equalLongs","equalMiles","setRecurrentEvent","eventActive","recurrentEvent","sendLastActive","listenRoadmapSettingChange","stopSending","actionLogin","savedAnalyticsState","analytics","analyticsState","sendAnalytics","logEvent","method","uuid","app_version","rootSaga","GlobalStyle","createGlobalStyle","enableAllPlugins","store","saveAnalyticsState","apiKey","authDomain","databaseURL","projectId","messagingSenderId","appId","measurementId","fetching","success","out","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","composedMiddleware","composeWithDevTools","trace","traceLimit","createStore","rootReducer","run","userData","authSuccess","onAuthStateChanged","uid","displayName","rootAppNode","body","firstElementChild","ReactDOM","Provider","BrowserRouter","SvgIcon","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","amdO","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","this","Function","hmd","create","prop","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}